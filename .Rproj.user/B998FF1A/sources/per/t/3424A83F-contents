# Fill gaps in the bare soil layers

library(terra)
library(magrittr)
library(tools)
library(dplyr)
library(viridis)

dir_code <- getwd()
root <- dirname(dir_code)
dir_dat <- paste0(root, "/digijord_data/")

tmpfolder <- paste0(dir_dat, "/Temp/")
terraOptions(
  tempdir = tmpfolder,
  memfrac = 0.3
  )

mycrs <- "EPSG:25832"

dir_cov <- dir_dat %>%
  paste0(., "/covariates/")

cov_files <- dir_cov %>%
  list.files(
    pattern = ".tif",
    full.names = TRUE
  )

dem_ind <- grepl(
  "dhm",
  cov_files
)

dem <- cov_files[dem_ind] %>% rast()

# bare_mask <- "s2_geomedian_b2" %>%
#   paste0(dir_cov, ., ".tif") %>%
#   rast()

bare_count <- paste0(dir_cov, "s2_count_max10.tif") %>% rast()

# Use only cells with at least 10 bare soil observations
bare_mask <- ifel(
  bare_count == 10,
  1,
  NA
)

cov_cats <- dir_code %>%
  paste0(., "/cov_categories_20231110.csv") %>%
  read.table(
    sep = ";",
    header = TRUE
  )

names_in <- cov_cats %>%
  filter(
    category == "bare_soil",
    scorpan == "S"
    ) %>%
  select(name) %>%
  unlist() %>%
  unname()

# Function to fill gaps

fill_gaps_gauss <- function(
    inrast,
    nsteps,
    include_list = FALSE
) {
  r1 <- rast(ncols = 180, nrows = 180, xmin = 0)
  myfilter1 <- focalMat(r1, c(1, 2), "Gauss")
  myfilter2 <- focalMat(r1, c(1, 2), "Gauss")
  
  smooth_up_list <- list()
  aggregated_list <- list()
  aggregated_list[[1]] <- list()
  aggregated_list[[1]][[1]] <- inrast*0 + 1
  aggregated_list[[1]][[2]] <- inrast
  
  # Function for weighted smoothing (using product x*x_count)
  smooth_weight <- function(x, filt) {
    out2 <- list()
    out2$count <- focal(
      x[[1]],
      w = filt,
      fun = "sum",
      na.policy = "all",
      na.rm = TRUE
    )
    out2$prod <- focal(
      x[[2]],
      w = filt,
      fun = "sum",
      na.policy = "all",
      na.rm = TRUE
    )
    return(out2)
  }
  # Function for weighted aggregation (using product x*x_count)
  # Divide by four to compensate for the number of cells
  agg_weight <- function(x) {
    out2 <- list()
    out2$count <- terra::aggregate(
      x[[1]] / 4,  # NB
      fun = "sum",
      na.rm = TRUE
      )
    out2$prod <- terra::aggregate(
      x[[2]] / 4, # NB
      fun = "sum",
      na.rm = TRUE
    )
    return(out2)
  }
  # Function for projecting counts and products
  project_weight <- function(x, targ) {
    out2 <- list()
    out2$count <- terra::project(
      x = x[[1]],
      y = targ,
      method = "near"
    )
    out2$prod <- terra::project(
      x = x[[2]],
      y = targ,
      method = "near"
    )
    return(out2)
  }
  # Function for merging counts and products
  merge_weight <- function(x, y) {
    # emptycells <- is.na(x[[2]])
    out2 <- list()
    out2$count <- terra::merge(
      x = x[[1]],
      y = y[[1]]
    )
    out2$prod <- terra::merge(
      x = x[[2]],
      y = y[[2]]
    )
    return(out2)
  }
  # Stepwise aggregation
  for (i in 2:nsteps) {
    smoothed_down <- smooth_weight(
      x = aggregated_list[[i - 1]],
      myfilter1
    )
    aggregated_list[[i]] <- agg_weight(smoothed_down)
  }
  smooth_up_list[[nsteps]] <- aggregated_list[[nsteps]]
  # Stepwise disaggregation
  for (i in (nsteps - 1):1) {
    # Disaggregate by 2
    splitted <- project_weight(
      x = smooth_up_list[[i + 1]],
      targ = aggregated_list[[i]][[1]]
    )
    # Merge means and counts
    merged <- merge_weight(
      x = aggregated_list[[i]],
      y = splitted
    )
    # Weighted smoothing
    smooth_up_list[[i]] <- smooth_weight(merged, myfilter2)
  }
  final_lyr <- smooth_up_list[[1]][[2]] / smooth_up_list[[1]][[1]]
  out <- list()
  out$final <- terra::merge(
    inrast,
    final_lyr,
    wopt = list(datatype = datatype(inrast))
  )
  out$aggregated_list <- aggregated_list
  out$smooth_up_list <- smooth_up_list
  return(out)
}

f <- system.file("ex/elev.tif", package = "terra")
r <- rast(f)
plot(r)

filled <- fill_gaps_gauss(r, nsteps = 6, include_list = TRUE)

plot(filled$final)

# Fill gaps

for (j in 1:length(names_in)) {
  # Mask all layers (especially s1), to the same extent.
  # Mainly to reduce the effect from edge cells.
  r <- paste0(dir_cov, names_in[[j]], ".tif") %>% rast()
  
  r_masked <- mask(r, mask = bare_mask, datatype = datatype(r))
  
  r2 <- fill_gaps_gauss(
    r_masked,
    10
    )
  
  r3 <- mask(
    r2$final,
    dem,
    filename = paste0(tmpfolder, "filled_", names(r), ".tif"),
    names = paste0("filled_", names(r)),
    datatype = datatype(r),
    gdal = "TILED=YES"
  )
  
  tmpFiles(remove = TRUE)
}



# END