expression(sqrt("CaCO3 (%)"))
)
my_breaks_dens <- c(0, 0.01, 0.02, 0.03, 0.05, 0.07, 0.1, 0.2, 0.3, 0.5, 0.7, 1)
# mycolors1 <- rgb(
#   seq(1, 0, length.out = 10),
#   seq(1, 1, length.out = 10),
#   seq(1, 1, length.out = 10)
#   )
mycolors2 <- rgb(
seq(0, 0, length.out = 20),
seq(1, 0, length.out = 20),
seq(1, 1, length.out = 20)
)
mycolors3 <- rgb(
seq(0, 0, length.out = 21),
seq(0, 0, length.out = 21),
seq(1, 0, length.out = 21)
)
mycolorgradient <- c(
# mycolors1,
mycolors2[-1],
mycolors3[-1])
breaks <- c(0, 30, 60, 100, 200)
for (i in 1:(length(breaks) - 1)) {
allpred_i <- allpred %>%
filter(
upper < breaks[i + 1],
lower > breaks[i]
)
myplot <- allpred_i %>%
ggplot(aes(x = obs, y = pred)) +
ggtitle(
paste0(
"Accuracy at ", breaks[i], " - ", breaks[i + 1], " cm depth"
)
) +
geom_hex(
aes(
alpha = stat(ndensity),
fill = stat(ndensity)
),
bins = 30
) +
scale_fill_gradientn(
colours = mycolorgradient,
aesthetics = "fill",
breaks = my_breaks_dens,
limits= c(0, 1),
na.value = 0,
trans = "sqrt"
) +
guides(
fill = "legend"
, alpha = "legend"
) +
scale_alpha_continuous(
limits= c(0, 1),
range = c(0.05, 1),
breaks = my_breaks_dens,
na.value = 0,
trans = "sqrt"
) +
facet_wrap(~fraction, nrow = 2, scales = "free", labeller = label_parsed) +
theme_bw() +
theme(aspect.ratio = 1) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
geom_abline(col = "red") +
geom_blank(aes(y = ax_max)) +
geom_blank(aes(x = ax_max)) +
geom_blank(aes(y = ax_min)) +
geom_blank(aes(y = ax_min)) +
xlab("Observation") +
ylab("Prediction")
tiff(
paste0(dir_results, "/accuracy_", LETTERS[i], "_test", testn, ".tiff"),
width = 15,
height = 10,
units = "cm",
res = 300
)
print(myplot)
try(dev.off())
}
levels(allpred$fraction) <- c(
"Clay~(`%`)",
"Silt~(`%`)",
"Fine~sand~(`%`)",
"Coarse~sand (`%`)",
"log[SOC (`%`)]",
expression(sqrt("CaCO3 (%)"))
)
my_breaks_dens <- c(0, 0.01, 0.02, 0.03, 0.05, 0.07, 0.1, 0.2, 0.3, 0.5, 0.7, 1)
# mycolors1 <- rgb(
#   seq(1, 0, length.out = 10),
#   seq(1, 1, length.out = 10),
#   seq(1, 1, length.out = 10)
#   )
mycolors2 <- rgb(
seq(0, 0, length.out = 20),
seq(1, 0, length.out = 20),
seq(1, 1, length.out = 20)
)
mycolors3 <- rgb(
seq(0, 0, length.out = 21),
seq(0, 0, length.out = 21),
seq(1, 0, length.out = 21)
)
mycolorgradient <- c(
# mycolors1,
mycolors2[-1],
mycolors3[-1])
breaks <- c(0, 30, 60, 100, 200)
for (i in 1:(length(breaks) - 1)) {
allpred_i <- allpred %>%
filter(
upper < breaks[i + 1],
lower > breaks[i]
)
myplot <- allpred_i %>%
ggplot(aes(x = obs, y = pred)) +
ggtitle(
paste0(
"Accuracy at ", breaks[i], " - ", breaks[i + 1], " cm depth"
)
) +
geom_hex(
aes(
alpha = after_stat(ndensity),
fill = after_stat(ndensity)
),
bins = 30
) +
scale_fill_gradientn(
colours = mycolorgradient,
aesthetics = "fill",
breaks = my_breaks_dens,
limits= c(0, 1),
na.value = 0,
trans = "sqrt"
) +
guides(
fill = "legend"
, alpha = "legend"
) +
scale_alpha_continuous(
limits= c(0, 1),
range = c(0.05, 1),
breaks = my_breaks_dens,
na.value = 0,
trans = "sqrt"
) +
facet_wrap(~fraction, nrow = 2, scales = "free", labeller = label_parsed) +
theme_bw() +
theme(aspect.ratio = 1) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
geom_abline(col = "red") +
geom_blank(aes(y = ax_max)) +
geom_blank(aes(x = ax_max)) +
geom_blank(aes(y = ax_min)) +
geom_blank(aes(y = ax_min)) +
xlab("Observation") +
ylab("Prediction")
tiff(
paste0(dir_results, "/accuracy_", LETTERS[i], "_test", testn, ".tiff"),
width = 15,
height = 10,
units = "cm",
res = 300
)
print(myplot)
try(dev.off())
}
levels(allpred$fraction) <- c(
"Clay~(`%`)",
"Silt~(`%`)",
"Fine~sand~(`%`)",
"Coarse~sand (`%`)",
expression("log[SOC"~"(`%`)]"),
expression(sqrt("CaCO"[3]~"(%)"))
)
my_breaks_dens <- c(0, 0.01, 0.02, 0.03, 0.05, 0.07, 0.1, 0.2, 0.3, 0.5, 0.7, 1)
# mycolors1 <- rgb(
#   seq(1, 0, length.out = 10),
#   seq(1, 1, length.out = 10),
#   seq(1, 1, length.out = 10)
#   )
mycolors2 <- rgb(
seq(0, 0, length.out = 20),
seq(1, 0, length.out = 20),
seq(1, 1, length.out = 20)
)
mycolors3 <- rgb(
seq(0, 0, length.out = 21),
seq(0, 0, length.out = 21),
seq(1, 0, length.out = 21)
)
mycolorgradient <- c(
# mycolors1,
mycolors2[-1],
mycolors3[-1])
breaks <- c(0, 30, 60, 100, 200)
for (i in 1:(length(breaks) - 1)) {
allpred_i <- allpred %>%
filter(
upper < breaks[i + 1],
lower > breaks[i]
)
myplot <- allpred_i %>%
ggplot(aes(x = obs, y = pred)) +
ggtitle(
paste0(
"Accuracy at ", breaks[i], " - ", breaks[i + 1], " cm depth"
)
) +
geom_hex(
aes(
alpha = after_stat(ndensity),
fill = after_stat(ndensity)
),
bins = 30
) +
scale_fill_gradientn(
colours = mycolorgradient,
aesthetics = "fill",
breaks = my_breaks_dens,
limits= c(0, 1),
na.value = 0,
trans = "sqrt"
) +
guides(
fill = "legend"
, alpha = "legend"
) +
scale_alpha_continuous(
limits= c(0, 1),
range = c(0.05, 1),
breaks = my_breaks_dens,
na.value = 0,
trans = "sqrt"
) +
facet_wrap(~fraction, nrow = 2, scales = "free", labeller = label_parsed) +
theme_bw() +
theme(aspect.ratio = 1) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
geom_abline(col = "red") +
geom_blank(aes(y = ax_max)) +
geom_blank(aes(x = ax_max)) +
geom_blank(aes(y = ax_min)) +
geom_blank(aes(y = ax_min)) +
xlab("Observation") +
ylab("Prediction")
tiff(
paste0(dir_results, "/accuracy_", LETTERS[i], "_test", testn, ".tiff"),
width = 15,
height = 10,
units = "cm",
res = 300
)
print(myplot)
try(dev.off())
}
levels(allpred$fraction) <- c(
"Clay~(`%`)",
"Silt~(`%`)",
"Fine~sand~(`%`)",
"Coarse~sand~(`%`)",
expression("log[SOC"~"(%)]"),
expression(sqrt("CaCO"[3]~"(%)"))
)
my_breaks_dens <- c(0, 0.01, 0.02, 0.03, 0.05, 0.07, 0.1, 0.2, 0.3, 0.5, 0.7, 1)
# mycolors1 <- rgb(
#   seq(1, 0, length.out = 10),
#   seq(1, 1, length.out = 10),
#   seq(1, 1, length.out = 10)
#   )
mycolors2 <- rgb(
seq(0, 0, length.out = 20),
seq(1, 0, length.out = 20),
seq(1, 1, length.out = 20)
)
mycolors3 <- rgb(
seq(0, 0, length.out = 21),
seq(0, 0, length.out = 21),
seq(1, 0, length.out = 21)
)
mycolorgradient <- c(
# mycolors1,
mycolors2[-1],
mycolors3[-1])
breaks <- c(0, 30, 60, 100, 200)
for (i in 1:(length(breaks) - 1)) {
allpred_i <- allpred %>%
filter(
upper < breaks[i + 1],
lower > breaks[i]
)
myplot <- allpred_i %>%
ggplot(aes(x = obs, y = pred)) +
ggtitle(
paste0(
"Accuracy at ", breaks[i], " - ", breaks[i + 1], " cm depth"
)
) +
geom_hex(
aes(
alpha = after_stat(ndensity),
fill = after_stat(ndensity)
),
bins = 30
) +
scale_fill_gradientn(
colours = mycolorgradient,
aesthetics = "fill",
breaks = my_breaks_dens,
limits= c(0, 1),
na.value = 0,
trans = "sqrt"
) +
guides(
fill = "legend"
, alpha = "legend"
) +
scale_alpha_continuous(
limits= c(0, 1),
range = c(0.05, 1),
breaks = my_breaks_dens,
na.value = 0,
trans = "sqrt"
) +
facet_wrap(~fraction, nrow = 2, scales = "free", labeller = label_parsed) +
theme_bw() +
theme(aspect.ratio = 1) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
geom_abline(col = "red") +
geom_blank(aes(y = ax_max)) +
geom_blank(aes(x = ax_max)) +
geom_blank(aes(y = ax_min)) +
geom_blank(aes(y = ax_min)) +
xlab("Observation") +
ylab("Prediction")
tiff(
paste0(dir_results, "/accuracy_", LETTERS[i], "_test", testn, ".tiff"),
width = 15,
height = 10,
units = "cm",
res = 300
)
print(myplot)
try(dev.off())
}
tiff(
paste0(dir_results, "/accuracy_all_test", testn, ".tiff"),
width = 15,
height = 10,
units = "cm",
res = 300
)
levels(allpred$fraction) <- c(
expression("Clay"~"(%)"),
expression("Silt"~"(%)"),
expression("Fine~sand"~"(%)"),
expression("Coarse~sand"~"(%)"),
expression("log[SOC"~"(%)]"),
expression(sqrt("CaCO"[3]~"(%)"))
)
my_breaks_dens <- c(0, 0.01, 0.02, 0.03, 0.05, 0.07, 0.1, 0.2, 0.3, 0.5, 0.7, 1)
# mycolors1 <- rgb(
#   seq(1, 0, length.out = 10),
#   seq(1, 1, length.out = 10),
#   seq(1, 1, length.out = 10)
#   )
mycolors2 <- rgb(
seq(0, 0, length.out = 20),
seq(1, 0, length.out = 20),
seq(1, 1, length.out = 20)
)
mycolors3 <- rgb(
seq(0, 0, length.out = 21),
seq(0, 0, length.out = 21),
seq(1, 0, length.out = 21)
)
mycolorgradient <- c(
# mycolors1,
mycolors2[-1],
mycolors3[-1])
breaks <- c(0, 30, 60, 100, 200)
for (i in 1:(length(breaks) - 1)) {
allpred_i <- allpred %>%
filter(
upper < breaks[i + 1],
lower > breaks[i]
)
myplot <- allpred_i %>%
ggplot(aes(x = obs, y = pred)) +
ggtitle(
paste0(
"Accuracy at ", breaks[i], " - ", breaks[i + 1], " cm depth"
)
) +
geom_hex(
aes(
alpha = after_stat(ndensity),
fill = after_stat(ndensity)
),
bins = 30
) +
scale_fill_gradientn(
colours = mycolorgradient,
aesthetics = "fill",
breaks = my_breaks_dens,
limits= c(0, 1),
na.value = 0,
trans = "sqrt"
) +
guides(
fill = "legend"
, alpha = "legend"
) +
scale_alpha_continuous(
limits= c(0, 1),
range = c(0.05, 1),
breaks = my_breaks_dens,
na.value = 0,
trans = "sqrt"
) +
facet_wrap(~fraction, nrow = 2, scales = "free", labeller = label_parsed) +
theme_bw() +
theme(aspect.ratio = 1) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
geom_abline(col = "red") +
geom_blank(aes(y = ax_max)) +
geom_blank(aes(x = ax_max)) +
geom_blank(aes(y = ax_min)) +
geom_blank(aes(y = ax_min)) +
xlab("Observation") +
ylab("Prediction")
tiff(
paste0(dir_results, "/accuracy_", LETTERS[i], "_test", testn, ".tiff"),
width = 15,
height = 10,
units = "cm",
res = 300
)
print(myplot)
try(dev.off())
}
for (i in 1:(length(breaks) - 1)) {
allpred_i <- allpred %>%
filter(
upper < breaks[i + 1],
lower > breaks[i]
)
myplot <- allpred_i %>%
ggplot(aes(x = obs, y = pred)) +
ggtitle(
paste0(
"Accuracy at ", breaks[i], " - ", breaks[i + 1], " cm depth"
)
) +
geom_hex(
aes(
alpha = after_stat(ndensity),
fill = after_stat(ndensity)
),
bins = 30
) +
scale_fill_gradientn(
colours = mycolorgradient,
aesthetics = "fill",
breaks = my_breaks_dens,
limits= c(0, 1),
na.value = 0,
trans = "sqrt"
) +
guides(
fill = "legend"
, alpha = "legend"
) +
scale_alpha_continuous(
limits= c(0, 1),
range = c(0.05, 1),
breaks = my_breaks_dens,
na.value = 0,
trans = "sqrt"
) +
facet_wrap(~fraction, nrow = 2, scales = "free", labeller = label_parsed) +
theme_bw() +
theme(aspect.ratio = 1) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
geom_abline(col = "red") +
geom_blank(aes(y = ax_max)) +
geom_blank(aes(x = ax_max)) +
geom_blank(aes(y = ax_min)) +
geom_blank(aes(x = ax_min)) +
xlab("Observation") +
ylab("Prediction")
tiff(
paste0(dir_results, "/accuracy_", LETTERS[i], "_test", testn, ".tiff"),
width = 15,
height = 10,
units = "cm",
res = 300
)
print(myplot)
try(dev.off())
}
