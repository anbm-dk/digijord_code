is.finite(predicted),
is.finite(w),
imputed == FALSE,
upper < 31
)
SOC_df
plot(SOC_df$combination, SOC_df$SOC)
SOC_df <- obs_texture %>%
select(c(ID_new, db, ID_old, upper, lower, SOC, imputed, fold)) %>%
mutate(
observed = SOC,
predicted = boot_predictions_mean[, 5],
w = models_weights[[5]],
combination = SOC_combination$Band_1
) %>%
filter(
is.finite(SOC),
is.finite(predicted),
is.finite(w),
imputed == FALSE,
upper < 31,
combination == 2
)
SOC_df
plot(SOC_df$observed, SOC_df$predicted)
SOC_df <- obs_texture %>%
select(c(ID_new, db, ID_old, upper, lower, SOC, imputed, fold)) %>%
mutate(
observed = SOC,
predicted = boot_predictions_mean[, 5],
w = models_weights[[5]],
combination = SOC_combination$Band_1
) %>%
filter(
is.finite(SOC),
is.finite(predicted),
is.finite(w),
imputed == FALSE,
upper < 31,
combination == 2,
fold == 10
)
plot(SOC_df$observed, SOC_df$predicted)
SOC_df
SOC_df <- obs_texture %>%
select(c(ID_new, db, ID_old, upper, lower, SOC, imputed, fold)) %>%
mutate(
observed = SOC,
predicted = boot_predictions_mean[, 5],
w = models_weights[[5]],
combination = SOC_combination$Band_1,
mean_depth = (upper + lower) / 2
) %>%
filter(
is.finite(SOC),
is.finite(predicted),
is.finite(w),
imputed == FALSE,
upper < 31,
combination == 2,
fold == 10,
is.finite(mean_depth),
mean_depth <= 30
)
plot(SOC_df$observed, SOC_df$predicted)
?cut
SOC_df <- obs_texture %>%
select(c(ID_new, db, ID_old, upper, lower, SOC, imputed, fold)) %>%
mutate(
observed = SOC,
predicted = boot_predictions_mean[, 5],
w = models_weights[[5]],
combination = SOC_combination$Band_1,
mean_depth = (upper + lower) / 2,
class_pred = cut(predicted, breaks = c(0, 6, 12, 100)),
class_obs = cut(observed, breaks = c(0, 6, 12, 100)),
) %>%
filter(
is.finite(SOC),
is.finite(predicted),
is.finite(w),
imputed == FALSE,
upper < 31,
combination == 2,
fold == 10,
is.finite(mean_depth),
mean_depth <= 30
)
SOC_df
library(MachineShop)  # weighted confusion matrix
SOC_acc_w <- SOC_df %>%
select(c(class_pred, class_obs, w)) %>%
na.omit() %>%
confusion(
x = .[, 1],
y = .[, 2],
weights = .[, 3]
)
SOC_acc_w
texture_2014_maps <-
c("O:/AUIT_Geodata/Denmark/Natural_ressources/Soil_geology/Texture3D_2014/geotiffs/aclaynor.tif",
"O:/AUIT_Geodata/Denmark/Natural_ressources/Soil_geology/Texture3D_2014/geotiffs/asiltnor.tif",
"O:/AUIT_Geodata/Denmark/Natural_ressources/Soil_geology/Texture3D_2014/geotiffs/aclaynor.tif",
"O:/AUIT_Geodata/Denmark/Natural_ressources/Soil_geology/Texture3D_2014/geotiffs/afsandno.tif",
"O:/AUIT_Geodata/Denmark/Natural_ressources/Soil_geology/Texture3D_2014/geotiffs/agsandno.tif",
"O:/AUIT_Geodata/Denmark/Natural_ressources/Soil_geology/Texture3D_2014/geotiffs/akulstof.tif"
) %>% rast()
texture_2014_maps <-
c("O:/AUIT_Geodata/Denmark/Natural_ressources/Soil_geology/Texture3D_2014/geotiffs/aclaynor.tif",
"O:/AUIT_Geodata/Denmark/Natural_ressources/Soil_geology/Texture3D_2014/geotiffs/asiltnor.tif",
"O:/AUIT_Geodata/Denmark/Natural_ressources/Soil_geology/Texture3D_2014/geotiffs/afsandno.tif",
"O:/AUIT_Geodata/Denmark/Natural_ressources/Soil_geology/Texture3D_2014/geotiffs/agsandno.tif",
"O:/AUIT_Geodata/Denmark/Natural_ressources/Soil_geology/Texture3D_2014/geotiffs/akulstof.tif"
) %>%
rast()
texture_2014_maps
obs_texture$db %>% unique()
texture_validation_obs <- obs_texture %>%
filter(
db != "Danish Soil Classification",
db != "SINKS",
db != "Profile database",
fold == 10
)
texture_validation_obs
texture_validation_obs <- obs_texture %>%
filter(
db != "Danish Soil Classification",
db != "SINKS",
db != "Profile database",
fold == 10
) %>%
select(
c(ID_new, db, ID_old, UTMX, UTMY, upper, lower, clay, silt, fine_sand,
coarse_sand, SOC
)
)
texture_validation_obs
texture_validation_obs$mask_LU
texture_validation_obs <- obs_texture %>%
filter(
db != "Danish Soil Classification",
db != "SINKS",
db != "Profile database",
fold == 10
) %>%
select(
c(ID_new, db, ID_old, UTMX, UTMY, upper, lower, clay, silt, fine_sand,
coarse_sand, SOC, mask_LU
)
)
texture_validation_obs$mask_LU
texture_validation_obs$mask_LU %>% plot()
texture_2014_maps <- c(
"O:/AUIT_Geodata/Denmark/Natural_ressources/Soil_geology/Texture3D_2014/geotiffs/aclaynor.tif",
"O:/AUIT_Geodata/Denmark/Natural_ressources/Soil_geology/Texture3D_2014/geotiffs/asiltnor.tif",
"O:/AUIT_Geodata/Denmark/Natural_ressources/Soil_geology/Texture3D_2014/geotiffs/afsandno.tif",
"O:/AUIT_Geodata/Denmark/Natural_ressources/Soil_geology/Texture3D_2014/geotiffs/agsandno.tif",
"O:/AUIT_Geodata/Denmark/Natural_ressources/Soil_geology/Texture3D_2014/geotiffs/akulstof.tif"
) %>%
rast()
extract_2014 <- texture_validation_obs %>%
vect(geom = c("UTMX", "UTMY"), crs = mycrs) %>%
terra::extract(x = texture_2014_maps, y = .)
texture_validation_obs <- obs_texture %>%
filter(
db != "Danish Soil Classification",
db != "SINKS",
db != "Profile database",
fold == 10,
upper < 31
) %>%
select(
c(ID_new, db, ID_old, UTMX, UTMY, upper, lower, clay, silt, fine_sand,
coarse_sand, SOC, mask_LU
)
)
texture_2014_maps <- c(
"O:/AUIT_Geodata/Denmark/Natural_ressources/Soil_geology/Texture3D_2014/geotiffs/aclaynor.tif",
"O:/AUIT_Geodata/Denmark/Natural_ressources/Soil_geology/Texture3D_2014/geotiffs/asiltnor.tif",
"O:/AUIT_Geodata/Denmark/Natural_ressources/Soil_geology/Texture3D_2014/geotiffs/afsandno.tif",
"O:/AUIT_Geodata/Denmark/Natural_ressources/Soil_geology/Texture3D_2014/geotiffs/agsandno.tif",
"O:/AUIT_Geodata/Denmark/Natural_ressources/Soil_geology/Texture3D_2014/geotiffs/akulstof.tif"
) %>%
rast()
extract_2014 <- texture_validation_obs %>%
vect(geom = c("UTMX", "UTMY"), crs = mycrs) %>%
terra::extract(x = texture_2014_maps, y = .)
extract_2014
plot(extract_2014$aclaynor, texture_validation_obs$clay)
texture_2014_maps <- c(
"O:/AUIT_Geodata/Denmark/Natural_ressources/Soil_geology/Texture3D_2014/geotiffs/aclaynor.tif",
"O:/AUIT_Geodata/Denmark/Natural_ressources/Soil_geology/Texture3D_2014/geotiffs/asiltnor.tif",
"O:/AUIT_Geodata/Denmark/Natural_ressources/Soil_geology/Texture3D_2014/geotiffs/afsandno.tif",
"O:/AUIT_Geodata/Denmark/Natural_ressources/Soil_geology/Texture3D_2014/geotiffs/agsandno.tif",
"O:/AUIT_Geodata/Denmark/Natural_ressources/Soil_geology/Texture3D_2014/geotiffs/akulstof.tif"
) %>%
rast()
names(texture_2014_maps) <- fractions_alt[1:5]
extract_2014 <- texture_validation_obs %>%
vect(geom = c("UTMX", "UTMY"), crs = mycrs) %>%
terra::extract(x = texture_2014_maps, y = .)
texture_validation_obs <- obs_texture %>%
mutate(mean_depth = (upper + lower) / 2) %>%
filter(
db != "Danish Soil Classification",
db != "SINKS",
db != "Profile database",
fold == 10,
upper < 31,
is.finite(mean_depth),
mean_depth <= 30
) %>%
select(
c(ID_new, db, ID_old, UTMX, UTMY, upper, lower, clay, silt, fine_sand,
coarse_sand, SOC, mask_LU
)
)
extract_2014
predictions_2024_val <- boot_predictions_mean %>%
filter(obs_texture$ID_new %in% texture_validation_obs$ID_new)
predictions_2024_val <- boot_predictions_mean[obs_texture$ID_new %in% texture_validation_obs$ID_new]
predictions_2024_val <- boot_predictions_mean[obs_texture$ID_new %in% texture_validation_obs$ID_new, ]
models_weights
weights_val_2024 <- models_weights %>%
bind_cols()
colnames(weights_val_2024) <- fractions
weights_val_2024 <- models_weights %>%
bind_cols()
colnames(weights_val_2024) <- fractions
weights_val_2024 <- weights_val_2024[obs_texture$ID_new %in% texture_validation_obs$ID_new, ]
texture_validation_obs
extract_2014
df_tex_obs_val <- texture_validation_obs %>%
select(c(db, clay, silt, fine_sand, coarse_sand, SOC)) %>%
mutate(type = "observed")
df_tex_pred_2014 <- extract_2014 %>%
select(c(clay, silt, fine_sand, coarse_sand, SOC)) %>%
mutate(
type = "predicted",
db = df_tex_obs_val$db
)
predictions_2024_val
predictions_2024_val <- boot_predictions_mean[obs_texture$ID_new %in% texture_validation_obs$ID_new, ]
weights_val_2024 <- models_weights %>%
bind_cols()
colnames(weights_val_2024) <- fractions
weights_val_2024 <- weights_val_2024[obs_texture$ID_new %in% texture_validation_obs$ID_new, ]
df_tex_obs_val <- texture_validation_obs %>%
select(c(db, clay, silt, fine_sand, coarse_sand, SOC)) %>%
mutate(type = "observed")
df_tex_val_w <- weights_val_2024[1:5] %>%
mutate(
type = "predicted",
db = df_tex_obs_val$db
)
df_tex_pred_2014 <- extract_2014 %>%
select(c(clay, silt, fine_sand, coarse_sand, SOC)) %>%
mutate(
type = "predicted",
db = df_tex_obs_val$db
)
df_tex_pred_2024 <- predictions_2024_val[, 1:5] %>%
mutate(
type = "predicted",
db = df_tex_obs_val$db
)
predictions_2024_val
df_tex_pred_2024 <- predictions_2024_val[, 1:5] %>%
as.data.frame() %>%
mutate(
type = "predicted",
db = df_tex_obs_val$db
)
df_val_2014 <-
bind_rows(
df_tex_obs_val,
df_tex_val_w,
df_tex_pred_2014
)
df_val_2014 <-
bind_rows(
df_tex_obs_val,
df_tex_val_w,
df_tex_pred_2014
) %>%
mutate(year == 2014)
df_val_2014 <- bind_rows(
df_tex_obs_val,
df_tex_val_w,
df_tex_pred_2014
) %>%
mutate(year = 2014)
df_val_2024 <- bind_rows(
df_tex_obs_val,
df_tex_val_w,
df_tex_pred_2024
) %>%
mutate(year = 2024)
df_val_all <- bind_rows(df_val_2014, df_val_2024)
df_val_all
bind_rows(df_val_2014, df_val_2024) %>%
pivot_longer(
c(clay, silt, fine_sand, coarse_sand, SOC),
values_to = value,
names_to = "fraction"
)
bind_rows(df_val_2014, df_val_2024) %>%
pivot_longer(
c(clay, silt, fine_sand, coarse_sand, SOC),
values_to = "value",
names_to = "fraction"
)
?pivot_wider
df_val_all <- bind_rows(df_val_2014, df_val_2024) %>%
pivot_longer(
c(clay, silt, fine_sand, coarse_sand, SOC),
values_to = "value",
names_to = "fraction"
) %>%
pivot_wider(
names_from = "type",
values_from = "value",
id_cols = c(db, type, year)
)
df_val_all <- bind_rows(df_val_2014, df_val_2024) %>%
pivot_longer(
c(clay, silt, fine_sand, coarse_sand, SOC),
values_to = "value",
names_to = "fraction"
) %>%
pivot_wider(
names_from = "type",
values_from = "value",
id_cols = c(db, year, fraction)
)
df_val_all
df_tex_obs_val <- texture_validation_obs %>%
select(c(db, clay, silt, fine_sand, coarse_sand, SOC)) %>%
mutate(type = "observed")
df_tex_val_w <- weights_val_2024[1:5] %>%
mutate(
type = "w",
db = df_tex_obs_val$db
)
df_tex_pred_2014 <- extract_2014 %>%
select(c(clay, silt, fine_sand, coarse_sand, SOC)) %>%
mutate(
type = "predicted",
db = df_tex_obs_val$db
)
df_tex_pred_2024 <- predictions_2024_val[, 1:5] %>%
as.data.frame() %>%
mutate(
type = "predicted",
db = df_tex_obs_val$db
)
df_val_2014 <- bind_rows(
df_tex_obs_val,
df_tex_val_w,
df_tex_pred_2014
) %>%
mutate(year = 2014)
df_val_2024 <- bind_rows(
df_tex_obs_val,
df_tex_val_w,
df_tex_pred_2024
) %>%
mutate(year = 2024)
df_val_all <- bind_rows(df_val_2014, df_val_2024) %>%
pivot_longer(
c(clay, silt, fine_sand, coarse_sand, SOC),
values_to = "value",
names_to = "fraction"
) %>%
pivot_wider(
names_from = "type",
values_from = "value",
id_cols = c(db, year, fraction)
)
bind_rows(df_val_2014, df_val_2024) %>%
pivot_longer(
c(clay, silt, fine_sand, coarse_sand, SOC),
values_to = "value",
names_to = "fraction"
)
df_tex_obs_val <- texture_validation_obs %>%
select(c(ID_new, db, clay, silt, fine_sand, coarse_sand, SOC)) %>%
mutate(type = "observed")
df_tex_obs_val <- texture_validation_obs %>%
select(c(ID_new, db, clay, silt, fine_sand, coarse_sand, SOC)) %>%
mutate(type = "observed")
df_tex_val_w <- weights_val_2024[1:5] %>%
mutate(
type = "w",
db = df_tex_obs_val$db,
ID_new = df_tex_obs_val$ID_new
)
df_tex_pred_2014 <- extract_2014 %>%
select(c(clay, silt, fine_sand, coarse_sand, SOC)) %>%
mutate(
type = "predicted",
db = df_tex_obs_val$db,
ID_new = df_tex_obs_val$ID_new
)
df_tex_pred_2024 <- predictions_2024_val[, 1:5] %>%
as.data.frame() %>%
mutate(
type = "predicted",
db = df_tex_obs_val$db,
ID_new = df_tex_obs_val$ID_new
)
df_val_2014 <- bind_rows(
df_tex_obs_val,
df_tex_val_w,
df_tex_pred_2014
) %>%
mutate(year = 2014)
df_val_2024 <- bind_rows(
df_tex_obs_val,
df_tex_val_w,
df_tex_pred_2024
) %>%
mutate(year = 2024)
df_val_all <- bind_rows(df_val_2014, df_val_2024) %>%
pivot_longer(
c(clay, silt, fine_sand, coarse_sand, SOC),
values_to = "value",
names_to = "fraction"
) %>%
pivot_wider(
names_from = "type",
values_from = "value",
id_cols = c(db, year, fraction, ID_new)
)
df_val_all
df_val_all <- bind_rows(df_val_2014, df_val_2024) %>%
pivot_longer(
c(clay, silt, fine_sand, coarse_sand, SOC),
values_to = "value",
names_to = "fraction"
) %>%
pivot_wider(
names_from = "type",
values_from = "value",
id_cols = c(db, year, fraction, ID_new)
) %>%
mutate(
db = case_when(
db != "SEGES" ~ "Forests",
.default = db
)
)
df_val_all %>%
drop_na() %>%
group_by(c(db, year, fraction)) %>%
summarise(
n = n(),
r2w = round(get_R2w(cbind(predicted, observed), w), digits = 3),
rmsew = round(get_RMSEw(cbind(predicted, observed), w), digits = 3)
)
df_val_all %>%
drop_na() %>%
group_by(db, year, fraction) %>%
summarise(
n = n(),
r2w = round(get_R2w(cbind(predicted, observed), w), digits = 3),
rmsew = round(get_RMSEw(cbind(predicted, observed), w), digits = 3)
)
source("f_weighted_summaries.R")
df_val_all %>%
drop_na() %>%
group_by(db, year, fraction) %>%
summarise(
n = n(),
r2w = round(get_R2w(cbind(predicted, observed), w), digits = 3),
rmsew = round(get_RMSEw(cbind(predicted, observed), w), digits = 3)
)
df_val_all %>%
drop_na() %>%
group_by(db, year, fraction) %>%
summarise(
n = n(),
r2w = round(get_R2w(cbind(predicted, observed), w), digits = 3),
rmsew = round(get_RMSEw(cbind(predicted, observed), w), digits = 3)
) %>%
arrange(fraction)
?arrange
df_val_all %>%
drop_na() %>%
group_by(db, year, fraction) %>%
summarise(
n = n(),
r2w = round(get_R2w(cbind(predicted, observed), w), digits = 3),
rmsew = round(get_RMSEw(cbind(predicted, observed), w), digits = 3)
) %>%
arrange(db, fraction)
df_val_all %>%
drop_na() %>%
group_by(db, year, fraction) %>%
summarise(
n = n(),
r2w = round(get_R2w(cbind(predicted, observed), w), digits = 3),
rmsew = round(get_RMSEw(cbind(predicted, observed), w), digits = 3)
) %>%
mutate(
fraction = factor(
fraction,
levels = fractions[1:5]
)
) %>%
arrange(db, fraction)
