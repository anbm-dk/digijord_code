root <- dirname(dir_code)
dir_dat <- paste0(root, "/digijord_data/")
testn <- 14
mycrs <- "EPSG:25832"
dir_results <- dir_dat %>%
paste0(., "/results_test_", testn, "/")
fractions_alt <- c("clay", "silt", "fine_sand", "coarse_sand", "SOC", "CaCO3")
fractions <- fractions_alt
frac_ind_mineral <- c(1:4)
frac_ind_predict <- c(1:length(fractions))[-3]  # Exclude fine sand
fraction_names <- c(
"Clay", "Silt", "Fine sand", "Coarse sand", "SOC", "CaCO3"
)
fraction_names_underscore <- c(
"Clay", "Silt", "Fine_sand", "Coarse_sand", "SOC", "CaCO3"
)
dir_cov <- dir_dat %>% paste0(., "/covariates")
cov_files <- dir_cov %>% list.files()
cov_names <- cov_files %>% tools::file_path_sans_ext()
cov_cats <- dir_code %>%
paste0(., "/cov_categories_20231110.csv") %>%
read.table(
sep = ",",
header = TRUE
)
# cov_selected <- cov_cats %>%
#   filter(anbm_use == 1) %>%
#   dplyr::select(., name) %>%
#   unlist() %>%
#   unname()
source("f_predict_passna.R")
# Path for loading bootstrap models
dir_boot <- dir_results %>%
paste0(., "/bootstrap/")
dir_boot_models <- dir_boot %>%
paste0(., "/models/")
dir_boot_models_fractions <- dir_boot_models %>%
paste0(., "/", fractions, "/")
models_boot_files <- lapply(
1:length(fractions),
function(x) {
out <- fractions[x] %>%
paste0(dir_boot_models, "/", ., "/") %>%
list.files(full.names = TRUE)
return(out)
}
)
# Set number of bootstrap repetitions to use
nboot <- lapply(
models_boot_files,
function(x) {
out <- length(x)
return(out)
}
) %>%
unlist() %>%
min()
nboot_final <- 100
nboot_max <- 3
# nboot_max <- 100
nboot <- min(c(nboot, nboot_max))
boot_all_chr <- c(1:nboot) %>%
str_pad(
.,
nchar(nboot_final),
pad = "0"
) %>%
paste0("boot_", .)
dir_pred_tileboot_raw <- dir_pred_tileboot_tmp %>%
paste0(., "/mineral_raw/") %T>%
dir.create(showWarnings = FALSE, recursive = TRUE)
numCores <- detectCores() - 1
numCores
dir_tiles <- dir_dat %>%
paste0(., "/tiles_591/")
subdir_tiles <- dir_tiles %>%
list.dirs() %>%
.[-1]
tilenames <- basename(subdir_tiles)
# Directory for saving bootstrap predictions
dir_pred_diff <- dir_boot %>%
paste0(., "/predictions_difference/") %T>%
dir.create(showWarnings = FALSE, recursive = TRUE)
# Folder for temporary bootstrap predictions for the current tile
dir_pred_tileboot_tmp <- dir_pred_diff %>%
paste0(., "/tile_x_tmp/") %T>%
dir.create(showWarnings = FALSE, recursive = TRUE)
# Folder for non-standardized mineral fraction predictions:
# Subfolders (3 files each):
# - with SOM removed
# - without SOM removal
dir_pred_tileboot_raw <- dir_pred_tileboot_tmp %>%
paste0(., "/mineral_raw/") %T>%
dir.create(showWarnings = FALSE, recursive = TRUE)
dir_pred_tileboot_raw_somrem <- dir_pred_tileboot_raw %>%
paste0(., "/somrem/") %T>%
dir.create(showWarnings = FALSE, recursive = TRUE)
dir_pred_tileboot_raw_norem <- dir_pred_tileboot_raw %>%
paste0(., "/norem/") %T>%
dir.create(showWarnings = FALSE, recursive = TRUE)
# Subfolders for bootstrap predictions
dir_pred_tileboot_raw_somrem %>%
paste0(., "/", boot_all_chr) %>%
dir.create(showWarnings = FALSE, recursive = TRUE)
dir_pred_tileboot_raw_somrem %>%
paste0(., "/", boot_all_chr)
dir_pred_tileboot_raw_somrem %>%
paste0(., "/", boot_all_chr) %>%
sapply(
function(x) {
dir.create(x, showWarnings = FALSE, recursive = TRUE)
}
)
dir_pred_tileboot_raw_norem %>%
paste0(., "/", boot_all_chr) %>%
sapply(
function(x) {
dir.create(x, showWarnings = FALSE, recursive = TRUE)
}
)
dir_pred_tileboot_final <- dir_pred_tileboot_tmp %>%
paste0(., "/standardized/") %T>%
dir.create(showWarnings = FALSE, recursive = TRUE)
# Subfolders for bootstrap predictions
dir_pred_tileboot_final %>%
paste0(., "/", boot_all_chr) %>%
sapply(
function(x) {
dir.create(x, showWarnings = FALSE, recursive = TRUE)
}
)
numCores <- detectCores() - 1
numCores
dir_tiles <- dir_dat %>%
paste0(., "/tiles_591/")
subdir_tiles <- dir_tiles %>%
list.dirs() %>%
.[-1]
tilenames <- basename(subdir_tiles)
n_tiles_use <- 19
# n_tiles_use <- length(subdir_tiles)
if (n_tiles_use < length(subdir_tiles)) {
tilenames <- tilenames[1:n_tiles_use]
}
paste0(
fraction_names_underscore[frac_ind_mineral], "_norem_mean.tiff"
)
paste0(
fraction_names_underscore[frac_ind_mineral], "_norem_SD.tiff"
)
paste0(
fraction_names_underscore[frac_ind_mineral], "_diff_mean.tiff"
)
paste0(
fraction_names_underscore[frac_ind_mineral], "_diff_SD.tiff"
)
paste0(
fraction_names_underscore[!frac_ind_predict %in% frac_ind_mineral],
"_mean.tiff"
)
"JB_norem_mean.tiff"
"JB_norem_unc.tiff"
"JB_diff_mean.tiff"
paste0(
fraction_names_underscore[frac_ind_predict[!frac_ind_predict %in% frac_ind_mineral]],
"_mean.tiff"
)
c(
paste0(fraction_names_underscore[frac_ind_mineral], "_norem_mean.tiff"),
paste0(fraction_names_underscore[frac_ind_mineral], "_norem_SD.tiff"),
paste0(fraction_names_underscore[frac_ind_mineral], "_diff_mean.tiff"),
paste0(fraction_names_underscore[frac_ind_mineral], "_diff_SD.tiff"),
paste0(fraction_names_underscore[5:6], "_mean.tiff"),
"JB_norem_mean.tiff",
"JB_norem_unc.tiff",
"JB_diff_mean.tiff"
)
names_summary <- c(
paste0(fraction_names_underscore[frac_ind_mineral], "_norem_mean.tiff"),
paste0(fraction_names_underscore[frac_ind_mineral], "_norem_SD.tiff"),
paste0(fraction_names_underscore[frac_ind_mineral], "_diff_mean.tiff"),
paste0(fraction_names_underscore[frac_ind_mineral], "_diff_SD.tiff"),
paste0(fraction_names_underscore[5:6], "_mean.tiff"),
"JB_norem_mean.tiff",
"JB_norem_unc.tiff",
"JB_diff_mean.tiff"
)
?grep
grep("SOC|CaCO3", names_summary)
names_merge <- grep("SOC|CaCO3", names_summary, value = TRUE, invert = TRUE)
names_merge
dir_pred_tileboot_final
# Procedure:
# For depth 1:
## For each tile:
### For each bootstrap iteration:
#### Predict texture fractions with and without som removal (tmp)
#### Standardize texture predictions (tmp)
#### Calculate differences for mineral texture fractions (tmp)
#### Predict SOC and CaCO3 only once (tmp)
#### Map soil texture class with and without som removal (tmp)
#### Calculate differences for texture classes (tmp)
### Summarize texture without SOM removal (save)
### Summarize only mean value for SOC and CaCO3 (save)
### Summarize texture classes without SOM removal (save)
### Summarize differences for texture with and without som removal (save)
### Summarize differences for texture classes (save)
## Merge maps of summarized mineral fractions classes (save)
library(parallel)
library(caret)
library(terra)
library(magrittr)
library(dplyr)
library(xgboost)
library(foreach)
library(stringr)
library(tools) # file_path_sans_ext
dir_code <- getwd()
root <- dirname(dir_code)
dir_dat <- paste0(root, "/digijord_data/")
testn <- 14
mycrs <- "EPSG:25832"
dir_results <- dir_dat %>%
paste0(., "/results_test_", testn, "/")
fractions_alt <- c("clay", "silt", "fine_sand", "coarse_sand", "SOC", "CaCO3")
fractions <- fractions_alt
frac_ind_mineral <- c(1:4)
frac_ind_predict <- c(1:length(fractions))[-3]  # Exclude fine sand
fraction_names <- c(
"Clay", "Silt", "Fine sand", "Coarse sand", "SOC", "CaCO3"
)
fraction_names_underscore <- c(
"Clay", "Silt", "Fine_sand", "Coarse_sand", "SOC", "CaCO3"
)
dir_cov <- dir_dat %>% paste0(., "/covariates")
cov_files <- dir_cov %>% list.files()
cov_names <- cov_files %>% tools::file_path_sans_ext()
cov_cats <- dir_code %>%
paste0(., "/cov_categories_20231110.csv") %>%
read.table(
sep = ",",
header = TRUE
)
# cov_selected <- cov_cats %>%
#   filter(anbm_use == 1) %>%
#   dplyr::select(., name) %>%
#   unlist() %>%
#   unname()
source("f_predict_passna.R")
# Path for loading bootstrap models
dir_boot <- dir_results %>%
paste0(., "/bootstrap/")
dir_boot_models <- dir_boot %>%
paste0(., "/models/")
dir_boot_models_fractions <- dir_boot_models %>%
paste0(., "/", fractions, "/")
models_boot_files <- lapply(
1:length(fractions),
function(x) {
out <- fractions[x] %>%
paste0(dir_boot_models, "/", ., "/") %>%
list.files(full.names = TRUE)
return(out)
}
)
# Set number of bootstrap repetitions to use
nboot <- lapply(
models_boot_files,
function(x) {
out <- length(x)
return(out)
}
) %>%
unlist() %>%
min()
nboot_final <- 100
nboot_max <- 19
# nboot_max <- 100
nboot <- min(c(nboot, nboot_max))
boot_all_chr <- c(1:nboot) %>%
str_pad(
.,
nchar(nboot_final),
pad = "0"
) %>%
paste0("boot_", .)
# Tiles for model prediction
numCores <- detectCores() - 1
numCores
dir_tiles <- dir_dat %>%
paste0(., "/tiles_591/")
subdir_tiles <- dir_tiles %>%
list.dirs() %>%
.[-1]
tilenames <- basename(subdir_tiles)
n_tiles_use <- 3
# n_tiles_use <- length(subdir_tiles)
if (n_tiles_use < length(subdir_tiles)) {
tilenames <- tilenames[1:n_tiles_use]
}
# Directory for saving bootstrap predictions
dir_pred_diff <- dir_boot %>%
paste0(., "/predictions_difference/") %T>%
dir.create(showWarnings = FALSE, recursive = TRUE)
# Folder for temporary bootstrap predictions for the current tile
dir_pred_tileboot_tmp <- dir_pred_diff %>%
paste0(., "/tile_x_tmp/") %T>%
dir.create(showWarnings = FALSE, recursive = TRUE)
# Folder for non-standardized mineral fraction predictions:
# Subfolders (3 files each):
# - with SOM removed
# - without SOM removal
dir_pred_tileboot_raw <- dir_pred_tileboot_tmp %>%
paste0(., "/mineral_raw/") %T>%
dir.create(showWarnings = FALSE, recursive = TRUE)
dir_pred_tileboot_raw_somrem <- dir_pred_tileboot_raw %>%
paste0(., "/somrem/") %T>%
dir.create(showWarnings = FALSE, recursive = TRUE)
dir_pred_tileboot_raw_norem <- dir_pred_tileboot_raw %>%
paste0(., "/norem/") %T>%
dir.create(showWarnings = FALSE, recursive = TRUE)
# Subfolders for bootstrap predictions
dir_pred_tileboot_raw_somrem %>%
paste0(., "/", boot_all_chr) %>%
sapply(
function(x) {
dir.create(x, showWarnings = FALSE, recursive = TRUE)
}
)
dir_pred_tileboot_raw_norem %>%
paste0(., "/", boot_all_chr) %>%
sapply(
function(x) {
dir.create(x, showWarnings = FALSE, recursive = TRUE)
}
)
# Folder for standardized predictions:
# Files:
# - mineral texture fractions (2x4 files):
# -- with SOM removed
# -- without SOM removal
# - mineral fraction differences (4 files)
# - SOC and CaCO3 (2 files)
# - texture class (2 files)
# -- with SOM removed
# -- without SOM removal
# - texture class difference (1 file)
dir_pred_tileboot_standard <- dir_pred_tileboot_tmp %>%
paste0(., "/standardized/") %T>%
dir.create(showWarnings = FALSE, recursive = TRUE)
# Subfolders for bootstrap predictions
dir_pred_tileboot_final %>%
paste0(., "/", boot_all_chr) %>%
sapply(
function(x) {
dir.create(x, showWarnings = FALSE, recursive = TRUE)
}
)
# Subfolders for bootstrap predictions
dir_pred_tileboot_standard %>%
paste0(., "/", boot_all_chr) %>%
sapply(
function(x) {
dir.create(x, showWarnings = FALSE, recursive = TRUE)
}
)
# Folder for tile summaries
dir_pred_tiles_sum <- dir_pred_diff %>%
paste0(., "/summarized/") %T>%
dir.create(showWarnings = FALSE, recursive = TRUE)
# Subfolder for each tile
dir_pred_tiles_sum %>%
paste0(., "/", tilenames) %>%
sapply(
function(x) {
dir.create(x, showWarnings = FALSE, recursive = TRUE)
}
)
# Files:
# - Mean and SD for each mineral fraction, without SOM removal (2x4 = 8 files)
# - Mean and SD for differences (2 x 4 files = 8 files)
# - Mean for SOC and CaCO3 (2 files)
# - Texture class for mean texture without SOM removal (1 file)
# - Uncertainty for texture class without SOM removal (1 file)
# - Sum of texture class differences (1 file)
names_summary <- c(
paste0(fraction_names_underscore[frac_ind_mineral], "_norem_mean.tiff"),
paste0(fraction_names_underscore[frac_ind_mineral], "_norem_SD.tiff"),
paste0(fraction_names_underscore[frac_ind_mineral], "_diff_mean.tiff"),
paste0(fraction_names_underscore[frac_ind_mineral], "_diff_SD.tiff"),
paste0(fraction_names_underscore[5:6], "_mean.tiff"),
"JB_norem_mean.tiff",
"JB_norem_unc.tiff",
"JB_diff_mean.tiff"
)
names_summary
# Merge tiles:
# Files:
# - Mean and SD for each mineral fraction, without SOM removal (2x4 = 8 files)
# - Mean and SD for differences (2 x 4 files = 8 files)
# - Texture class for mean texture without SOM removal (1 file)
# - Uncertainty for texture class without SOM removal (1 file)
# - Sum of texture class differences (1 file)
dir_pred_merged <- dir_pred_diff %>%
paste0(., "/final/") %T>%
dir.create(showWarnings = FALSE, recursive = TRUE)
names_merge <- grep("SOC|CaCO3", names_summary, value = TRUE, invert = TRUE)
names_merge
# Set up loop for predicting each soil depth
n_digits <- 1
breaks <- c(0, 30, 60, 100, 200)
max_char <- breaks %>%
as.character() %>%
nchar() %>%
max()
breaks_chr <- breaks %>%
str_pad(
.,
max_char,
pad = "0"
)
j_all_depths <- 1:(length(breaks) - 1)
j_only_top <- 1
only_top <- TRUE
# # only_top <- FALSE
if (only_top) {
j_depth <- j_only_top
} else {
j_depth <- j_all_depths
}
frac_ind_mineral_predict <- frac_ind_mineral[frac_ind_mineral %in% frac_ind_predict]
frac_ind_nonmineral <- frac_ind_predict[!frac_ind_predict %in% frac_ind_mineral]
models_boot_files
names_somremoval <- c("norem", "somrem")
numbers_somremoval <- 0:!
# Set number of bootstrap repetitions to use
nboot <- lapply(
models_boot_files,
function(x) {
out <- length(x)
return(out)
}
) %>%
unlist() %>%
min()
numbers_somremoval <- 0:1
names_somremoval <- c("norem", "somrem")
names_summary
dir_pred_tileboot_raw %>%
paste0(., "/", names_somremoval, "/")
dir_pred_tileboot_raw_subdirs <- dir_pred_tileboot_raw %>%
paste0(., "/", names_somremoval, "/") %T>%
sapply(
function(x) {
dir.create(x, showWarnings = FALSE, recursive = TRUE)
}
)
dir_pred_tileboot_raw <- dir_pred_tileboot_tmp %>%
paste0(., "/mineral_raw/") %T>%
dir.create(showWarnings = FALSE, recursive = TRUE)
dir_pred_tileboot_raw_subdirs <- dir_pred_tileboot_raw %>%
paste0(., "/", names_somremoval, "/") %T>%
sapply(
function(x) {
dir.create(x, showWarnings = FALSE, recursive = TRUE)
}
)
dir_pred_tileboot_raw_subdirs %>%
sapply(., function(x2) {
paste0(x2, "/", boot_all_chr) %>%
sapply(
function(x) {
dir.create(x, showWarnings = FALSE, recursive = TRUE)
}
)
}
)
?datatype
gdal()
names_summary
names_summary %>% grep("JB", invert = TRUE, value = TRUE)
names_summary %>% grep("JB", .,  invert = TRUE, value = TRUE)
names_summary_num <- names_summary %>%
grep("JB", .,  invert = TRUE, value = TRUE)
str_split()
?str_split
str_split(names_summary_num[1], "_")
names_summary_num[1] %>% file_path_sans_ext() %>% str_split(., "_")
splitname[length(splitname)]
splitname <- names_summary_num[1] %>% file_path_sans_ext() %>% str_split(., "_")
stat_i <- splitname[length(splitname)]
input_name <- splitname[-length(splitname)] %>% paste(collapse = "_")
stat_i
splitname <- names_summary_num[1] %>%
file_path_sans_ext() %>%
str_split(., "_") %>%
unlist()
stat_i <- splitname[length(splitname)]
input_name <- splitname[-length(splitname)] %>% paste(collapse = "_")
stat_i
input_name
splitname <- names_summary_num[4] %>%
file_path_sans_ext() %>%
str_split(., "_") %>%
unlist()
stat_i <- splitname[length(splitname)]
input_name <- splitname[-length(splitname)] %>% paste(collapse = "_")
stat_i
input_name
dir_pred_tiles_sum
dir_pred_merged
names_merge
