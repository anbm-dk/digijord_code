upper = DybFra,
lower = DybTil,
clay = Ler * 100 / (Ler + Silt + FinSD + GrovSD),
silt = Silt * 100 / (Ler + Silt + FinSD + GrovSD),
fine_sand = FinSD * 100 / (Ler + Silt + FinSD + GrovSD),
coarse_sand = GrovSD * 100 / (Ler + Silt + FinSD + GrovSD),
SOC = Humus*0.587,
SOM_removed = 0,
CaCO3_test = as.numeric(CaCO3 > 0)
) %>%
select(any_of(mycolnames))
# 2.2 SEGES
seges2 <- SEGES %>%
mutate(
db = "SEGES",
date = as.character(date),
ID_old = as.character(ID),
UTMX = UTME,
UTMY = UTMN,
upper = 0,
lower = 25,
tsum = LerPct + SiltPct + FinsandPct + GrovsandPct,
clay = case_when(
is.na(tsum) ~ LerPct,
!is.na(tsum) ~ LerPct*100 / tsum
),
silt = case_when(
is.na(tsum) ~ SiltPct,
!is.na(tsum) ~ SiltPct*100 / tsum
),
fine_sand = case_when(
is.na(tsum) ~ FinsandPct,
!is.na(tsum) ~ FinsandPct*100 / tsum
),
coarse_sand = case_when(
is.na(tsum) ~ GrovsandPct,
!is.na(tsum) ~ GrovsandPct*100 / tsum
),
SOM_removed = 1,
pH = Rt,
N = TotalNPct
) %>%
select(any_of(mycolnames))
# 2.3 SINKS
depths_A <- c("A1", "A2", "A3", "A4")
depths_S <- c("S1", "S2", "S3", "S4")
depths_D <- c("D1", "D2", "D3", "D4")
new_names <- stri_replace_all_fixed(
names(SINKS),
c(depths_A, depths_S),
c(depths_D, depths_D),
vectorize_all = FALSE
)
new_names <- stri_replace_all_fixed(
new_names,
"ID_DJF",
"IDDJF",
vectorize_all = FALSE
)
new_names <- stri_replace_all_fixed(new_names, "__", "_", vectorize_all = FALSE)
SINKS_newnames <- SINKS
names(SINKS_newnames) <- new_names
DX <- paste0(depths_D, "_")
D_cols <- depths_D %>%
paste(collapse = "|") %>%
grep(
names(SINKS_newnames),
value = TRUE
) %>%
unique() %>%
setdiff(DX)
newcols <- D_cols %>%
strsplit("_") %>%
unlist() %>%
unique() %>%
setdiff(depths_D)
sinks2 <- SINKS_newnames %>%
select(-any_of(DX)) %>%
pivot_longer(
all_of(D_cols),
names_to = c("depth", ".value"),
names_sep = "_"
)
rownas <- apply(sinks2, 1, function(x) sum(is.na(x)))
lapply(sinks2, function(x) sum(!is.na(x))) %>% unlist()
lapply(sinks2, function(x) length(unique(x))) %>% unlist()
sinks2 %>%
filter(!is.na(KunPro)) %>%
select(depth, PH, TOC1, TOC2, TOC3, NTotal)
# Field "KunPro" is the closest thing to a unique ID for each depth sample
sinks3 <- sinks2 %>%
filter(!is.na(KunPro))
sinks3 %>%
group_by(depth) %>%
summarise(
mean_TOC1 = mean(TOC1, na.rm = TRUE),
mean_TOC2 = mean(TOC2, na.rm = TRUE),
mean_TOC3 = mean(TOC3, na.rm = TRUE)
)
sinks3 %>% filter(!is.na(TOC2) & !is.na(TOC3))
# ^ None
sinks3 %>%
filter(!is.na(TOC1) & !is.na(TOC3)) %>%
select(depth, TOC1, TOC2, TOC3, NTotal) %>%
print(n = 100)
# ^ All depth one
# C/N OK, but one C value may be N
sinks3 %>%
filter(!is.na(TOC1) & !is.na(TOC2)) %>%
select(depth, TOC1, TOC2, TOC3, NTotal) %>%
print(n = 100)
# ^ Never depth one
# C/N OK, but one C value may be N
sinks3 %>%
filter(TOC1 != TOC3) %>%
select(depth, TOC1, TOC2, TOC3, NTotal) %>%
print(n = 100)
# Only two values, TOC3 is N
sinks3 %>%
filter(TOC1 != TOC2) %>%
select(depth, TOC1, TOC2, TOC3, NTotal) %>%
print(n = 100)
# Only one value, TOC2 is N
sinks3 %>% filter(
TOC1 < NTotal | TOC2 < NTotal | TOC3 < NTotal
) %>%
select(depth, TOC1, TOC2, TOC3, NTotal) %>%
print(n = 100)
n_unique <- sinks3 %>%
select(TOC1, TOC2, TOC3, NTotal) %>%
apply(1, function(x) length(unique(x)))
# All points have three unique values
maxvalue <- sinks3 %>%
select(TOC1, TOC2, TOC3, NTotal) %>%
apply(1, function(x) max(x, na.rm = TRUE))
minvalue <- sinks3 %>%
select(TOC1, TOC2, TOC3, NTotal) %>%
apply(1, function(x) min(x, na.rm = TRUE))
plot(log(minvalue), log(maxvalue))
plot(maxvalue/minvalue)
# I assume that maxvalue is always SOC, and minvalue is always N
sinks3$SOC <- maxvalue
sinks3$N <- minvalue
sinks3$date <- sinks3$SD_Dato %>%
as.character() %>%
stri_replace_all_fixed("-", "") %>%
substr(., 1, 8)
uppers <- c(0:3)*34
lowers <- uppers + 30
sinks_upperlower <- data.frame(
depth = depths_D,
upper = uppers,
lower = lowers
)
sinks4 <- sinks3 %>%
mutate(
db = "SINKS",
ID_old = paste0(IDBID, "_", depth),
UTMX = SD_X,
UTMY = SD_Y,
pH = PH
) %>%
right_join(sinks_upperlower) %>%
select(any_of(mycolnames))
allmydata <- bind_rows(dsc2, seges2, sinks4)
plot(allmydata$UTMX, allmydata$UTMY)
# 2.4: Profiles texture
profiles_texture %>% filter(PRFRA > PRTIL)
profiles_texture %>% filter(TEKTURSUM < 0)
# Replace negative values (ok)
# Fix PRFRA PRTIL (ok)
# Get upper and lower from horizons table when they are missing for the sample
# (Remove samples where upper and lower are still missing)
# Standardize texture sums
# Remove false zeroes
# - texture
# - BD
# - pH
# - SOC
# - CaCO3
# - CEC
# TEKSTURART Ingen analyse
tex_negs <- profiles_texture %>%
select(-c(PRFRA, PRTIL)) %>%
select_if(is.numeric) %>%
as.matrix() %>%
apply(., 1, function(x) {
out <- sum(x < 0, na.rm = TRUE)
return(out)
}
)
profiles_texture[tex_negs > 0, ]
profiles_texture %>% filter((PRTIL- PRFRA) > 100)
check_negs <- profiles_texture %>%
select(-c(PRFRA, PRTIL)) %>%
select_if(is.numeric) %>%
colnames()
profiles_tex2 <- profiles_texture %>%
mutate(
across(
any_of(check_negs),
function(x) replace(x, x < 0, NA))  # Remove negative measurements
) %>%
mutate(
PRFRA = case_when(
PRFRA > PRTIL & PROFILNR == 2517 ~ PRFRA*-1,
.default = PRFRA
),
PRTIL = case_when(
PRFRA > PRTIL & PROFILNR == 2531 ~ 170,
PRFRA > PRTIL & PROFILNR %in% c(2528, 2529, 2530) ~ PRFRA,
.default = PRTIL
)
) %>%
mutate(
PRFRA = case_when(
is.na(PRFRA) ~ PRTIL,
.default = PRFRA
),
PRTIL = case_when(
is.na(PRTIL) ~ PRFRA,
(PRTIL- PRFRA) > 100 & PROFILNR == 2539 ~ 30,
.default = PRTIL
)
)
profiles_tex2 %>%
filter(PROFILNR %in% c(2517, 2528, 2529, 2530, 2531, 2539)) %>%
select(c(PROFILNR, HORISONTNR, HORISONTPR, PRFRA, PRTIL))
plot(profiles_tex2$PRFRA, profiles_tex2$PRTIL)
install.packages("readxl")
profiles_shp <- dir_dat %>%
paste0(
.,
"/observations/profiles/Profiles_coordinates_new/Profiles_coordinates_new.shp"
) %>%
vect
profiles_shp
plot(profiles_shp)
library(readxl)
profiles_horizons <- dir_dat %>%
paste0(
.,
"/observations/profiles/DDJD_horizons/DDJD_HORISONT_FRA_TIL.xlsx"
) %>%
read_excel()
profiles_horizons
profiles_tex2
profiles_horizons %>%
mutate(
HOR_ID = paste0(PROFILNR, "_", HORISONTNR)
)
profiles_horizons %<>%
mutate(
HOR_ID = paste0(PROFILNR, "_", HORISONTNR)
)
?join_by
profiles_tex2 %>%
mutate(
HOR_ID = paste0(PROFILNR, "_", HORISONTNR)
) %>%
left_join(
profiles_horizons,
join_by(name == HOR_ID)
)
profiles_tex2 %>%
mutate(
HOR_ID = paste0(PROFILNR, "_", HORISONTNR)
) %>%
left_join(
profiles_horizons,
"HOR_ID"
)
profiles_horizons_small <- profiles_horizons %>%
mutate(
HOR_ID = paste0(PROFILNR, "_", HORISONTNR)
) %>%
select(-c(PROFILNR, HORISONTNR))
profiles_horizons_small
profiles_horizons_small <- profiles_horizons %>%
mutate(
HOR_ID = paste0(PROFILNR, "_", HORISONTNR)
) %>%
select(-c(PROFILNR, HORISONTNR, HORISONT))
profiles_horizons_small
profiles_tex2 %>%
mutate(
HOR_ID = paste0(PROFILNR, "_", HORISONTNR)
) %>%
left_join(
profiles_horizons,
"HOR_ID"
)
profiles_tex2 %>%
mutate(
HOR_ID = paste0(PROFILNR, "_", HORISONTNR)
) %>%
left_join(
profiles_horizons_small,
"HOR_ID"
)
profiles_tex2 %>%
mutate(
HOR_ID = paste0(PROFILNR, "_", HORISONTNR)
) %>%
left_join(
profiles_horizons_small,
"HOR_ID"
) %>%
mutate(
PRFRA = case_when(
is.na(PRFRA) ~ FRA,
.default = PRFRA
),
PRTIL = case_when(
is.na(PRTIL) ~ TIL,
.default = PRTIL
)
) %>%
select(-c(HOR_ID, FRA, TIL))
profiles_tex2 %<>%
mutate(
HOR_ID = paste0(PROFILNR, "_", HORISONTNR)
) %>%
left_join(
profiles_horizons_small,
"HOR_ID"
) %>%
mutate(
PRFRA = case_when(
is.na(PRFRA) ~ FRA,
.default = PRFRA
),
PRTIL = case_when(
is.na(PRTIL) ~ TIL,
.default = PRTIL
)
) %>%
select(-c(HOR_ID, FRA, TIL))
plot(profiles_tex2$PRFRA, profiles_tex2$PRTIL)
plot(profiles_tex2$LER)
plot(profiles_tex2$HUMUS)
plot(log(profiles_tex2$HUMUS))
plot(sqrt(profiles_tex2$HUMUS))
plot(profiles_tex2$PHCACL2)
plot(profiles_tex2$PHH2O)
plot(profiles_tex2$PHCACL2)
plot(profiles_tex2$CEC)
plot(profiles_tex2$CEC == 0)
plot(profiles_tex2$VOLVGT)
plot(profiles_tex2$LER)
plot(profiles_tex2$CACO3)
profiles_tex2 %>%
mutate(
tminsum = LER + SILT + GRVSILT + S63 + S125 + S200 + S500
)
profiles_tex2 %<>%
mutate(
tminsum = LER + SILT + GRVSILT + S63 + S125 + S200 + S500
)
profiles_tex2 %>% filter(tminsum == 0)
plot(sqrt(profiles_tex2$CACO3))
profiles_tex2 %>% filter(tminsum != 0 & LER == 0)
profiles_tex3 <- profiles_tex2 %>%
mutate(claysilt = LER/(LER + SILT))
plot(profiles_tex3$HUMUS, profiles_tex3$claysilt)
plot(log(profiles_tex3$HUMUS), profiles_tex3$claysilt)
plot(profiles_tex3$HUMUS, profiles_tex3$claysilt)
?plot
plot(profiles_tex3$HUMUS, profiles_tex3$claysilt, xlim = c(0, 10))
plot(
profiles_tex3$HUMUS,
profiles_tex3$claysilt,
xlim = c(0, 10),
abline(v = 5, col="blue")
)
profiles_tex2
unique(profiles_tex2$TEKSTURART)
profiles_tex2 %>% filter(HUMUS == 0)
profiles_tex2 %>% filter(HUMUS == 0 & TEKSTURART != "Ingen analyse")
plot(sqrt(profiles_tex2$HUMUS))
?summarise
profiles_tex2 %>%
group_by(PROFILNR) %>%
summarise(humsum = sum(HUMUS, na.rm = TRUE))
profiles_tex2 %>%
group_by(PROFILNR) %>%
summarise(humsum = sum(HUMUS, na.rm = TRUE)) %>%
plot()
profiles_tex2 %>%
group_by(PROFILNR) %>%
summarise(humsum = sum(HUMUS, na.rm = TRUE)) %>%
filter(humsum == 0)
profiles_tex2 %>% filter(PROFILNR == 280)
profiles_tex2 %>%
group_by(PROFILNR) %>%
summarise(humsum = sum(HUMUS, na.rm = TRUE)) %>%
filter(humsum == 0)
profiles_zerosom <- profiles_tex2 %>%
group_by(PROFILNR) %>%
summarise(humsum = sum(HUMUS, na.rm = TRUE)) %>%
filter(humsum == 0)
profiles_tex2 %>%
filter(
PROFILNR %in% profiles_zerosom$PROFILNR
)
profiles_tex2 %>%
filter(
PROFILNR %in% profiles_zerosom$PROFILNR & TEKSTURART != "Ingen analyse")
profiles_tex2 %>% filter(tminsum != 0 & LER == 0)
profiles_tex2 %>%
mutate(
PHCACL2 = case_when(
PHCACL2 == 0 ~ NA,
.default = PHCACL2
)
)
profiles_tex2 %>%
mutate(
PHCACL2 = case_when(
PHCACL2 == 0 ~ NA,
.default = PHCACL2
),
CEC = case_when(
CEC == 0 ~ NA,
.default = CEC
),
VOLVGT = case_when(
VOLVGT == 0 ~ NA,
.default = VOLVGT
)
)
profiles_tex2 %<>%
mutate(
PHCACL2 = case_when(
PHCACL2 == 0 ~ NA,
.default = PHCACL2
),
CEC = case_when(
CEC == 0 ~ NA,
.default = CEC
),
VOLVGT = case_when(
VOLVGT == 0 ~ NA,
.default = VOLVGT
)
)
plot(profiles_tex2$PHCACL2)
profiles_tex2 %<>%
mutate(
PHCACL2 = case_when(
PHCACL2 < 1 ~ NA,
.default = PHCACL2
),
CEC = case_when(
CEC == 0 ~ NA,
.default = CEC
),
VOLVGT = case_when(
VOLVGT == 0 ~ NA,
.default = VOLVGT
)
)
plot(profiles_tex2$PHCACL2)
plot(profiles_tex2$CEC)
plot(profiles_tex2$VOLVGT)
profiles_tex2 %>% filter(CACO3 == 0 & TEKSTURART == "Kalk")
profiles_tex2 %>% filter(CACO3 == 0 & TEKSTURART == "kalk")
profiles_tex2 %>% filter(CACO3 == 0 & TEKSTURART == "Humus/kalk")
profiles_tex2 %>% filter(CACO3 == 0 & TEKSTURART == "tekstur/kalk")
profiles_tex2 %>% filter(CACO3 == 0 & TEKSTURART == " ")
profiles_tex2 %>% filter(CACO3 == 0 & TEKSTURART == "0,0")
profiles_tex2 %>% filter(TEKSTURART == "0,0")
profiles_tex2 %>% filter(TEKSTURART == " ")
profiles_tex2 %>% filter(is.na(TEKSTURART))
profiles_tex2 %>% filter(is.na(TEKSTURART) & HUMUS == 0)
profiles_tex2 %>% filter(is.na(TEKSTURART) & LER == 0)
profiles_tex2 %>% filter(is.na(TEKSTURART) & TEKTURSUM == 0)
profiles_tex2 %>% filter(TEKSTURART == "tekstur/kalk")
profiles_tex2 %>% filter(TEKSTURART == "Humus/kalk")
profiles_tex2 %>% filter(TEKSTURART == "Humus/kalk" & LER > 0)
profiles_tex2 %>% filter(TEKSTURART == "Humus/kalk")
profiles_tex2 %>% filter(TEKSTURART == "kalk")
profiles_tex2 %>% filter(TEKSTURART == "Kalk")
profiles_tex2 %>% filter(TEKSTURART == "ingen analyse")
profiles_tex2 %>% filter(TEKSTURART == "Ingen analyse")
profiles_tex2 %>% filter(TEKSTURART == "tekstur")
profiles_tex2 %>% filter(TEKSTURART == "tekstur" & LER == 0)
profiles_tex2 %>% filter(TEKSTURART == "tekstur" & HUMUS == 0)
profiles_tex2 %>% filter(TEKSTURART == "tekstur" & CACO3 == 0)
profiles_tex2 %>% filter(TEKSTURART == "tekstur")
profiles_tex2 %>% filter(TEKSTURART == "Ingen analyse")
profiles_tex2 %>% filter(TEKSTURART == "tekstur" & LER = 0)
profiles_tex2 %>% filter(TEKSTURART == "tekstur" & LER == 0)
profiles_tex2 %>% filter(TEKSTURART == "Tekstur" & LER == 0)
profiles_tex2 %>% filter(TEKSTURART == "Tekstur" & HUMUS == 0)
profiles_tex2 %>% filter(TEKSTURART == "Tekstur" & CACO3== 0)
profiles_tex2 %>% filter(TEKSTURART == "Tekstur")
profiles_tex2 %>% filter(TEKSTURART == "humus")
profiles_tex2 %>% filter(TEKSTURART == "Humus")
profiles_tex2 %>% filter(TEKSTURART == "Humus" & LER > 0)
profiles_tex2 %>% filter(TEKSTURART == "Humus" & CACO3 > 0)
profiles_tex2 %>% filter(TEKSTURART == "0,0")
profiles_tex2 %>%
filter(
PROFILNR %in% profiles_zerosom$PROFILNR & TEKSTURART != "Ingen analyse")
profiles_tex2 %<>%
rowwise() %>%
mutate(
tminsum = sum(LER, SILT, GRVSILT, S63, S125, S200, S500, na.rm = TRUE)
) %>%
ungroup()
plot(profiles_tex2$tminsum)
