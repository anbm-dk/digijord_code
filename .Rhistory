col = viridis(100),
nr = 2,
axes = FALSE,
box = TRUE,
mar = c(0, 0.5, 2, 4),
cex.main = 1
)
try(dev.off())
tiff(
paste0(dir_results, "/cov_10km_test_", testn, ".tiff"),
width = 22,
height = 10,
units = "cm",
res = 300
)
plot(
cov_mapplot_10km,
col = viridis(100),
nr = 2,
axes = FALSE,
box = TRUE,
mar = c(0, 0.5, 2, 4),
cex.main = 0.8
)
try(dev.off())
tiff(
paste0(dir_results, "/cov_10km_test_", testn, ".tiff"),
width = 22,
height = 10,
units = "cm",
res = 300
)
plot(
cov_mapplot_10km,
col = viridis(100),
nr = 2,
axes = FALSE,
box = TRUE,
mar = c(0, 0.5, 2, 4),
cex.main = 0.9
)
try(dev.off())
tiff(
paste0(dir_results, "/cov_10km_test_", testn, ".tiff"),
width = 22,
height = 10,
units = "cm",
res = 300
)
plot(
cov_mapplot_10km,
col = viridis(100),
nr = 2,
axes = FALSE,
box = TRUE,
mar = c(0, 0.5, 2, 4),
cex.main = 0.8
)
try(dev.off())
tiff(
paste0(dir_results, "/cov_10km_test_", testn, ".tiff"),
width = 22,
height = 10,
units = "cm",
res = 300
)
plot(
cov_mapplot_10km,
col = viridis(100),
nr = 2,
axes = FALSE,
box = TRUE,
mar = c(0, 0.5, 2, 4),
cex.main = 0.8,
loc.main = "topleft"
)
try(dev.off())
plot(
cov_mapplot_10km,
col = viridis(100),
nr = 2,
axes = FALSE,
box = TRUE,
mar = c(0, 0.5, 2, 4),
cex.main = 0.8,
loc.main = c(0,0)
)
tiff(
paste0(dir_results, "/cov_10km_test_", testn, ".tiff"),
width = 22,
height = 10,
units = "cm",
res = 300
)
plot(
cov_mapplot_10km,
col = viridis(100),
nr = 2,
axes = FALSE,
box = TRUE,
mar = c(0, 0.5, 2, 4),
cex.main = 0.8
)
try(dev.off())
tiff(
paste0(dir_results, "/cov_10km_test_", testn, ".tiff"),
width = 23,
height = 10,
units = "cm",
res = 300
)
plot(
cov_mapplot_10km,
col = viridis(100),
nr = 2,
axes = FALSE,
box = TRUE,
mar = c(0, 0.1, 2, 4),
cex.main = 0.8
)
try(dev.off())
tiff(
paste0(dir_results, "/cov_10km_test_", testn, ".tiff"),
width = 23,
height = 10,
units = "cm",
res = 300
)
plot(
cov_mapplot_10km,
col = viridis(100),
nr = 2,
axes = FALSE,
box = TRUE,
mar = c(0.1, 0.1, 1, 4),
cex.main = 0.8
)
try(dev.off())
library(terra)
library(magrittr)
library(tools)
library(dplyr)
library(caret)
library(tibble)
library(tidyr)
dir_code <- getwd()
root <- dirname(dir_code)
dir_dat <- paste0(root, "/digijord_data/")
testn <- 14
mycrs <- "EPSG:25832"
# Results folder
dir_results <- dir_dat %>%
paste0(., "/results_test_", testn, "/")
predfolder <- dir_results %>%
paste0(., "/predictions_testarea/SOM_remov/depth_1/sum/")
# Load Vindum data
vindum_obs <- dir_dat %>%
paste0(., "/observations/Vindum/Vindum_everything.csv") %>%
read.table(
header = TRUE,
sep = ";"
) %>%
filter(DEPTH == 25) %>%
vect(
geom = c("UTMX", "UTMY"),
crs = mycrs,
keepgeom = TRUE
)
predictions <- predfolder %>%
list.files(full.names = TRUE) %>%
rast()
names(predictions) <- predfolder %>%
list.files() %>%
file_path_sans_ext()
plot(predictions)
plot(predictions[[1]], ext = ext(vindum_obs))
plot(vindum_obs, "LER", add = TRUE)
vindum_extr <- terra::extract(predictions, vindum_obs)
vindum_extr
fractions_alt <- c("clay", "silt", "fine_sand", "coarse_sand", "SOC", "CaCO3")
fractions <- fractions_alt
?extract
names(predictions) <- fractions
# Extract predictions
vindum_extr <- terra::extract(predictions, vindum_obs, ID = FALSE)
vindum_extr
vindum_obs
names(vindum_obs)
vindum_obs %>%
values() %>%
mutate(
clay = LER,
silt = SILT,
fine_sand = C_SILT + C_FSAND + FSAND,
coarse_sand = C_SAND
)
vindum_obs %>%
values() %>%
mutate(
clay = LER,
silt = SILT,
fine_sand = C_SILT + C_FSAND + FSAND,
coarse_sand = C_SAND
) %>%
select(any_of(fractions))
vindum_fractions <- vindum_obs %>%
values() %>%
mutate(
clay = LER,
silt = SILT,
fine_sand = C_SILT + C_FSAND + FSAND,
coarse_sand = C_SAND
) %>%
select(any_of(fractions))
vindum_extr <- terra::extract(predictions, vindum_obs, ID = FALSE)[, 1:5]
vindum_extr %<>% mutate(
source = "prediction"
)
# Plot
vindum_fractions <- vindum_obs %>%
values() %>%
mutate(
clay = LER,
silt = SILT,
fine_sand = C_SILT + C_FSAND + FSAND,
coarse_sand = C_SAND
) %>%
select(any_of(fractions)) %>%
mutate(
source = "observation"
)
library(dplyr)
vindum_comparison <- bind_rows(
vindum_fractions,
vindum_extr
)
vindum_comparison
vindum_comparison <- bind_rows(
vindum_fractions,
vindum_extr
) %>%
pivot_longer(
cols = -source,
names_to = fraction,
values_to = value
)
vindum_comparison <- bind_rows(
vindum_fractions,
vindum_extr
) %>%
pivot_longer(
cols = -source,
names_to = "fraction",
values_to = value
)
vindum_comparison <- bind_rows(
vindum_fractions,
vindum_extr
) %>%
pivot_longer(
cols = -source,
names_to = "fraction",
values_to = "value"
)
vindum_comparison
vindum_comparison <- bind_rows(
vindum_fractions,
vindum_extr
) %>%
pivot_longer(
cols = -source,
names_to = "fraction",
values_to = "value"
) %>%
pivot_wider(
id_cols = c(source, fraction)
)
?pivot_wider
vindum_comparison <- bind_rows(
vindum_fractions,
vindum_extr
) %>%
pivot_longer(
cols = -source,
names_to = "fraction",
values_to = "value"
) %>%
pivot_wider(
id_cols = fraction,
names_from = source
)
vindum_comparison
vindum_comparison <- bind_rows(
vindum_fractions,
vindum_extr
) %>%
pivot_longer(
cols = -source,
names_to = "fraction",
values_to = "value"
) %>%
pivot_wider(
id_cols = c(fraction, source),
names_from = source
)
vindum_comparison <- bind_rows(
vindum_fractions,
vindum_extr
) %>%
pivot_longer(
cols = -source,
names_to = "fraction",
values_to = "value"
) %>%
pivot_wider(
id_cols = c(fraction),
id_expand = TRUE,
names_from = source
)
vindum_comparison
vindum_comparison <- bind_rows(
vindum_fractions,
vindum_extr
) %>%
mutate(
id = c(1:nrow(vindum_fractions))
)
?replace_na
?rep
vindum_comparison <- bind_rows(
vindum_fractions,
vindum_extr
) %>%
mutate(
id = rep(1:nrow(vindum_fractions), times = 2)
)
vindum_comparison <- bind_rows(
vindum_fractions,
vindum_extr
) %>%
mutate(
id = rep(1:nrow(vindum_fractions), times = 2)
) %>%
pivot_longer(
cols = -source,
names_to = "fraction",
values_to = "value"
) %>%
pivot_wider(
id_cols = c(fraction, id),
names_from = source
)
vindum_comparison <- bind_rows(
vindum_fractions,
vindum_extr
) %>%
mutate(
id = rep(1:nrow(vindum_fractions), times = 2)
) %>%
pivot_longer(
cols = -c(source, id),
names_to = "fraction",
values_to = "value"
) %>%
pivot_wider(
id_cols = c(fraction, id),
names_from = source
)
vindum_comparison
ggplot(aes(x = observation, y = prediction)) +
geom_point() +
facet_wrap(~ fraction)
vindum_comparison <- bind_rows(
vindum_fractions,
vindum_extr
) %>%
mutate(
id = rep(1:nrow(vindum_fractions), times = 2)
) %>%
pivot_longer(
cols = -c(source, id),
names_to = "fraction",
values_to = "value"
) %>%
pivot_wider(
id_cols = c(fraction, id),
names_from = source
)
vindum_comparison
vindum_comparison <- bind_rows(
vindum_fractions,
vindum_extr
) %>%
mutate(
id = rep(1:nrow(vindum_fractions), times = 2)
) %>%
pivot_longer(
cols = -c(source, id),
names_to = "fraction",
values_to = "value"
) %>%
pivot_wider(
id_cols = c(fraction, id),
names_from = source
) %>%
as.data.frame()
ggplot(aes(x = observation, y = prediction)) +
geom_point() +
facet_wrap(~ fraction)
ggplot(vindum_comparison, aes(x = observation, y = prediction)) +
geom_point() +
facet_wrap(~ fraction) +
coord_equal()
ggplot(vindum_comparison, aes(x = observation, y = prediction)) +
geom_point() +
facet_wrap(~ fraction) +
coord_equal() +
geom_abline()
ggplot(vindum_comparison, aes(x = observation, y = prediction)) +
geom_point(alpha = 0.1) +
facet_wrap(~ fraction) +
coord_equal() +
geom_abline()
vindum_comparison <- bind_rows(
vindum_fractions,
vindum_extr
) %>%
mutate(
id = rep(1:nrow(vindum_fractions), times = 2)
) %>%
pivot_longer(
cols = -c(source, id),
names_to = "fraction",
values_to = "value"
) %>%
pivot_wider(
id_cols = c(fraction, id),
names_from = source
) %>%
mutate(
fraction = factor(fraction, levels = fractions[1:5])
) %>%
as.data.frame()
ggplot(vindum_comparison, aes(x = observation, y = prediction)) +
geom_point(alpha = 0.1) +
facet_wrap(~ fraction) +
coord_equal() +
geom_abline()
tiff(
paste0(dir_results, "/cov_10km_test_", testn, ".tiff"),
width = 23,
height = 10,
units = "cm",
res = 300
)
ggplot(vindum_comparison, aes(x = observation, y = prediction)) +
geom_point(alpha = 0.1) +
facet_wrap(~ fraction) +
coord_equal() +
geom_abline()
try(dev.off())
tiff(
paste0(dir_results, "/vindum_test_", testn, ".tiff"),
width = 23,
height = 10,
units = "cm",
res = 300
)
ggplot(vindum_comparison, aes(x = observation, y = prediction)) +
geom_point(alpha = 0.1) +
facet_wrap(~ fraction) +
coord_equal() +
geom_abline()
try(dev.off())
library(viridisLite)
tiff(
paste0(dir_results, "/vindum_pred_test_", testn, ".tiff"),
width = 23,
height = 10,
units = "cm",
res = 300
)
plot(predictions, ext = ext(vindum_obs), col = cividis(100))
try(dev.off())
?plot
tiff(
paste0(dir_results, "/vindum_pred_test_", testn, ".tiff"),
width = 23,
height = 10,
units = "cm",
res = 300
)
plot(predictions, y = 1:5, ext = ext(vindum_obs), col = cividis(100))
try(dev.off())
?summarise
vindum_comparison
?rmse
vindum_comparison %>%
drop_na() %>%
group_by(fraction) %>%
summarise(
r2 = cor(observation, prediction, use = "pairwise.complete.obs")^2,
rmse = RMSE(prediction, observation)
)
vindum_comparison %>%
drop_na() %>%
group_by(fraction) %>%
summarise(
r2 = cor(observation, prediction, use = "pairwise.complete.obs")^2,
rmse = RMSE(prediction, observation)
) %>%
as.data.frame()
