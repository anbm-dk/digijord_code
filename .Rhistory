library(terra)
library(magrittr)
library(raster)
library(tools)
root <- getwd()
dirname(root)
dir_code <- getwd()
root <- dirname(dir_code)
dir_code <- getwd()
root <- dirname(dir_code)
dir_dat <- paste0(root, "/digijord_data/")
library(terra)
dsc <- dir_dat %>%
paste0(
.,
'/observations/DanishSoilClassification/DLJ/DLJmDecimaler_DKBH.shp'
) %>%
vect
library(magrittr)
dsc <- dir_dat %>%
paste0(
.,
'/observations/DanishSoilClassification/DLJ/DLJmDecimaler_DKBH.shp'
) %>%
vect
dir_code <- getwd()
root <- dirname(dir_code)
dir_dat <- paste0(root, "/digijord_data/")
dsc <- dir_dat %>%
paste0(
.,
'/observations/DanishSoilClassification/DLJ/DLJmDecimaler_DKBH.shp'
) %>%
vect
dsc
values(dsc)
SEGES <- dir_dat %>%
paste0(
.,
"/observations/SEGES_samples/SEGES_samples_cleaned.csv"
) %>%
read.table(
sep = ";",
header = TRUE
)
seges
SEGES
library(RODBC)
library(dplyr)
library(tidyr)
SINKS_db <- dir_dat %>%
paste0(., "/observations/SINKS/SinksDatabase_V2.mdb")
con2 <- odbcConnectAccess2007(SINKS_db)
sqlTables(con2, tableType = "TABLE")$TABLE_NAME
sqlFetch(con2, "bMHG_RODALTDETDUVIL_01JAN2011")
SINKS <- sqlFetch(con2, "bMHG_RODALTDETDUVIL_01JAN2011")
# To do :
# 1: Load datasets
# - DSC (OK)
# - SEGES (OK)
# - SINKS (OK)
# - Profiles: Texture (not right now)
# - Profiles: Water retention (later)
# - Profiles: Drainage (later)
# - Lucas database?
# 2: Standardize
# - Uniform column names
# - Scale texture fractions to a sum of 100.
# 3: Merge
# 4: Extract covariates
# 5: Get folds
# 6: Write to table
# What fields should the final dataset contain?
# - General ID, "ID_new"
# - Database origin, "db"
# - Original ID "ID_old"
# - Date "date"
# - UTMX
# - UTMY
# - Upper boundary "upper"
# - Lower boundary "lower"
# - Clay
# - Silt
# - Fine sand
# - Coarse sand
# - SOC
# - CaCO3
# - Indicate removal of SOM for texture analyses
# - BD (later)
# - pH (later)
# - Nutrients: Pt, Kt, Mgt, CUT (later)
# - Water retention (later)
# - Texture sub-fractions: Gsilt, GfinSD (later)
mycolnames <- c(
"ID_new",
"db",
"ID_old",
"date",
"UTMX",
"UTMY",
"upper",
"lower",
"clay",
"silt",
"fine_sand",
"coarse_sand",
"SOC",
"CaCO3",
"SOM_removed"
)
# Start up
library(terra)
library(magrittr)
library(RODBC)
library(dplyr)
library(tidyr)
dir_code <- getwd()
root <- dirname(dir_code)
dir_dat <- paste0(root, "/digijord_data/")
# 1.1: Load DSC observations
dsc <- dir_dat %>%
paste0(
.,
"/observations/DanishSoilClassification/DLJ/DLJmDecimaler_DKBH.shp"
) %>%
vect
# 1.2: Load SEGES samples
SEGES <- dir_dat %>%
paste0(
.,
"/observations/SEGES_samples/SEGES_samples_cleaned.csv"
) %>%
read.table(
sep = ";",
header = TRUE
)
# 1.3: Load SINKS data
# In the long run I should use all the data.
# However, I will use the topsoil until the dataset has been fixed.
# Use pivot_longer to get a row for each sample.
SINKS_db <- dir_dat %>%
paste0(., "/observations/SINKS/SinksDatabase_V2.mdb")
con2 <- odbcConnectAccess2007(SINKS_db)
SINKS <- sqlFetch(con2, "bMHG_RODALTDETDUVIL_01JAN2011")
mycolnames
values(dsc)
values(dsc) %>% str()
dsc$provenr
dsc$provenr %>% as.numeric()
dsc$provenr %>% as.numeric() %>% plot
dsc$provenr %>% as.numeric() %>% max
dsc$provenr %>% as.numeric() %>% max(na.rm = TRUE)
?as.numeric
?gsub
dsc$provenr %>% gsub(" ", "", .)
dsc$provenr %>% gsub(" ", "", .) %>% unique()
dsc$provenr %>% gsub(" ", "0", .) %>% unique()
dsc$provenr %>% unique()
dsc
dsc$provenr %>% is.na() %>% sum()
dsc$provenr %>% gsub(" ", "", .) %>% as.numeric() %>% plot()
mycolnames
names(dsc)
plot(dsc$Tsum1)
plot(dsc$Tsum2)
plot(dsc$Ler + dsc$Silt + dsc$FinSD + dsc$GrovSD)
values(dsc)
values(dsc) %>% filter(Tsum1 != 100)
dsc2 <- dsc %>%
values() %>%
mutate(
db = "Danish Soil Classification",
ID_old = provenr,
date = paste0("19", Dato),
upper = DybFra,
lower = DybTil,
clay = Ler * 100 / (Ler + Silt + FinSD + GrovSD),
silt = Silt * 100 / (Ler + Silt + FinSD + GrovSD),
fine_sand = FinSD * 100 / (Ler + Silt + FinSD + GrovSD),
coarse_sand = GrovSD * 100 / (Ler + Silt + FinSD + GrovSD),
logSOM = log(Humus),
logCaCO3 = log(CaCO3)
)
dsc2
plot(dsc2$coarse_sand)
dsc2 %>% filter(coarse_sand < 0)
dsc2 %>% filter(clay < 0)
dsc2 %>% filter(silt < 0)
dsc2 %>% filter(fine_sand < 0)
dsc2 %>% filter(Humus < 0)
dsc2 %>% filter(CaCO3 < 0)
dsc2 %>% filter(upper < 0)
dsc2 %>% filter(lower < 0)
plot(dsc2$upper, dsc2$lower)
dsc2 %>% filter(Gsilt < 0)
dsc2 %>% filter(Gsilt < 0 & Gsilt != -1)
dsc2 %>% filter(GfinSD < 0 & GfinSD != -1)
