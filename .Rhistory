paste0(., "/", tilename_x, "/JB_no11.tif")
tmpfolder <- paste0(dir_dat, "/Temp/")
terraOptions(memfrac = 0.02, tempdir = tmpfolder)
r_frac_tile_means <- terra::subset(r_frac_tile_means, c(1, 2, 3, 5, 6))
names(r_frac_tile_means) <- c("clay", "silt", "sand_f", "SOM", "CaCO3")
# JB texture class for mean texture
lapp(
r_frac_tile_means,
classify_soil_JB,
SOM_factor = 0,  ## NB, no JB11
filename = outname_x_JB_no11,
overwrite = TRUE,
wopt = list(
datatype = "INT1U",
NAflag = 13
)
)
return(NULL)
}
)
stopCluster(cl)
foreach::registerDoSEQ()
rm(cl)
# Merge summary rasters
dir_merged_depth <- dir_pred_boot %>%
paste0(
., "/final_maps/depth_", breaks_j_chr[1], "_", breaks_j_chr[2], "_cm/"
) %T>%
dir.create(showWarnings = FALSE, recursive = TRUE)
summary_tiles_i <- paste0(
dir_sum_depth_tiles, "/", tilenames, "/JB_no11.tif"
)
tile1_i <- summary_tiles_i[1] %>% rast()
dtyp_i <- datatype(tile1_i)
naflag_i <- NAflag(tile1_i)
outtiles_sprc <- summary_tiles_i %>% sprc()
merge(
outtiles_sprc,
filename = paste0(dir_merged_depth, "/JB_no11.tif"),
overwrite = TRUE,
gdal = "TILED=YES",
datatype = dtyp_i,
NAflag = naflag_i,
names = "JB_no11"
)
}
library(parallel)
library(caret)
library(terra)
library(magrittr)
library(dplyr)
library(xgboost)
library(foreach)
library(stringr)
library(tools) # file_path_sans_ext
dir_code <- getwd()
root <- dirname(dir_code)
dir_dat <- paste0(root, "/digijord_data/")
testn <- 14
mycrs <- "EPSG:25832"
dir_results <- dir_dat %>%
paste0(., "/results_test_", testn, "/")
fractions_alt <- c("clay", "silt", "fine_sand", "coarse_sand", "SOC", "CaCO3")
fractions <- fractions_alt
frac_ind_mineral <- c(1:4)
frac_ind_predict <- c(1:length(fractions))[-3]  # Exclude fine sand
fraction_names <- c(
"Clay", "Silt", "Fine sand", "Coarse sand", "SOC", "CaCO3"
)
fraction_names_underscore <- c(
"Clay", "Silt", "Fine_sand", "Coarse_sand", "SOC", "CaCO3"
)
dir_cov <- dir_dat %>% paste0(., "/covariates")
cov_files <- dir_cov %>% list.files()
cov_names <- cov_files %>% tools::file_path_sans_ext()
cov_cats <- dir_code %>%
paste0(., "/cov_categories_20231110.csv") %>%
read.table(
sep = ",",
header = TRUE
)
# cov_selected <- cov_cats %>%
#   filter(anbm_use == 1) %>%
#   dplyr::select(., name) %>%
#   unlist() %>%
#   unname()
source("f_predict_passna.R")
# Path for loading bootstrap models
dir_boot <- dir_results %>%
paste0(., "/bootstrap/")
dir_boot_models <- dir_boot %>%
paste0(., "/models/")
dir_boot_models_fractions <- dir_boot_models %>%
paste0(., "/", fractions, "/")
models_boot_files <- lapply(
1:length(fractions),
function(x) {
out <- fractions[x] %>%
paste0(dir_boot_models, "/", ., "/") %>%
list.files(full.names = TRUE)
return(out)
}
)
# Tiles for model prediction
numCores <- detectCores() - 1
numCores
dir_tiles <- dir_dat %>%
paste0(., "/tiles_591/")
subdir_tiles <- dir_tiles %>%
list.dirs() %>%
.[-1]
tilenames <- basename(subdir_tiles)
# Directory for saving bootstrap predictions
dir_pred_boot <- dir_boot %>%
paste0(., "/predictions/") %T>%
dir.create(showWarnings = FALSE, recursive = TRUE)
dir_pred_tiles <- dir_pred_boot %>%
paste0(., "/tiles/") %T>%
dir.create(showWarnings = FALSE, recursive = TRUE)
# Directory for temporary texture predictions, for standardization
# Overwrite for each depth + bootstrap repetition
dir_pred_tiles_tmp <- dir_pred_tiles %>%
paste0(., "/tmp_fractions/") %T>%
dir.create(showWarnings = FALSE, recursive = TRUE)
for (x in 1:length(tilenames)) {
dir_pred_tiles_tmp %>%
paste0(., "/", tilenames[x], "/") %T>%
dir.create(showWarnings = FALSE, recursive = TRUE)
}
dir_boot_sum_tiles <- dir_pred_boot %>%
paste0(., "/summary/") %T>%
dir.create(showWarnings = FALSE)
# Set number of bootstrap repetitions to use
nboot <- lapply(
models_boot_files,
function(x) {
out <- length(x)
return(out)
}
) %>%
unlist() %>%
min()
nboot_final <- 100
nboot_max <- 100
# nboot_max <- 100
nboot <- min(c(nboot, nboot_max))
boot_all_chr <- c(1:nboot) %>%
str_pad(
.,
nchar(nboot_final),
pad = "0"
) %>%
paste0("boot_", .)
# Set up loop for predicting each soil depth
n_digits <- 1
breaks <- c(0, 30, 60, 100, 200)
max_char <- breaks %>%
as.character() %>%
nchar() %>%
max()
breaks_chr <- breaks %>%
str_pad(
.,
max_char,
pad = "0"
)
j_all_depths <- 1:(length(breaks) - 1)
j_only_top <- 1
only_top <- TRUE
# only_top <- FALSE
if (only_top) {
j_depth <- j_only_top
} else {
j_depth <- j_all_depths
}
for (j in j_depth) {
breaks_j <- breaks[j:(j + 1)]
breaks_j_chr <- breaks_chr[j:(j + 1)]
print(paste0("Depth ", paste(breaks_j_chr, collapse = " - "), " cm"))
dir_pred_tiles_depth <- dir_pred_tiles %>%
paste0(
., "/depth_", breaks_j_chr[1], "_", breaks_j_chr[2], "_cm/"
) %T>%
dir.create(showWarnings = FALSE, recursive = TRUE)
# Calculate mean soil class and soil class uncertainties
print("Summarizing texture classes")
source("f_classify_soil_JB.R")
showConnections()
cl <- makeCluster(numCores)
clusterEvalQ(
cl,
{
library(terra)
library(magrittr)
library(dplyr)
library(tools)
}
)
clusterExport(
cl,
c(
"boot_all_chr",
"subdir_tiles",
"dir_pred_tiles_tmp",
"dir_dat",
"n_digits",
"breaks_j",
"breaks_j_chr",
"dir_sum_depth_tiles",
"fraction_names_underscore",
"nboot",
"dir_pred_tiles_depth",
"classify_soil_JB"
)
)
parSapplyLB(
cl,
1:length(subdir_tiles),
function(x) {
tilename_x <- basename(subdir_tiles[x])
r_frac_tile_means <- paste0(
dir_sum_depth_tiles, "/", tilename_x, "/",
fraction_names_underscore, "_mean.tif") %>%
rast()
outname_x_JB_no11 <- dir_sum_depth_tiles %>%
paste0(., "/", tilename_x, "/JB_no11.tif")
tmpfolder <- paste0(dir_dat, "/Temp/")
terraOptions(memfrac = 0.02, tempdir = tmpfolder)
r_frac_tile_means <- terra::subset(r_frac_tile_means, c(1, 2, 3, 5, 6))
names(r_frac_tile_means) <- c("clay", "silt", "sand_f", "SOM", "CaCO3")
# JB texture class for mean texture
lapp(
r_frac_tile_means,
classify_soil_JB,
SOM_factor = 0,  ## NB, no JB11
filename = outname_x_JB_no11,
overwrite = TRUE,
wopt = list(
datatype = "INT1U",
NAflag = 13
)
)
return(NULL)
}
)
stopCluster(cl)
foreach::registerDoSEQ()
rm(cl)
# Merge summary rasters
dir_merged_depth <- dir_pred_boot %>%
paste0(
., "/final_maps/depth_", breaks_j_chr[1], "_", breaks_j_chr[2], "_cm/"
) %T>%
dir.create(showWarnings = FALSE, recursive = TRUE)
summary_tiles_i <- paste0(
dir_sum_depth_tiles, "/", tilenames, "/JB_no11.tif"
)
tile1_i <- summary_tiles_i[1] %>% rast()
dtyp_i <- datatype(tile1_i)
naflag_i <- NAflag(tile1_i)
outtiles_sprc <- summary_tiles_i %>% sprc()
merge(
outtiles_sprc,
filename = paste0(dir_merged_depth, "/JB_no11.tif"),
overwrite = TRUE,
gdal = "TILED=YES",
datatype = dtyp_i,
NAflag = naflag_i,
names = "JB_no11"
)
}
# Steps for mapping:
# 1st Level: Depth interval (topsoils first). Summarize across bootstrap
# repetitions and merge tiles before mapping the next depth interval.
# 2nd Level: Bootstrap repetitions. One repetition at a time, across all texture
# fractions for the depth in question, using tiles. Standardize texture
# fractions and calculate the soil class for the repetition in question before
# continuing to the next repetition.
# 3rd Level: Fraction. Map texture fractions one at a time for the given
# repetition and depth interval.
# Omit the predictive model for fine sand. Calculate it as the residual of the
# other fractions, relative to a sum of 100.
library(parallel)
library(caret)
library(terra)
library(magrittr)
library(dplyr)
library(xgboost)
library(foreach)
library(stringr)
library(tools) # file_path_sans_ext
dir_code <- getwd()
root <- dirname(dir_code)
dir_dat <- paste0(root, "/digijord_data/")
testn <- 14
mycrs <- "EPSG:25832"
dir_results <- dir_dat %>%
paste0(., "/results_test_", testn, "/")
fractions_alt <- c("clay", "silt", "fine_sand", "coarse_sand", "SOC", "CaCO3")
fractions <- fractions_alt
frac_ind_mineral <- c(1:4)
frac_ind_predict <- c(1:length(fractions))[-3]  # Exclude fine sand
fraction_names <- c(
"Clay", "Silt", "Fine sand", "Coarse sand", "SOC", "CaCO3"
)
fraction_names_underscore <- c(
"Clay", "Silt", "Fine_sand", "Coarse_sand", "SOC", "CaCO3"
)
dir_cov <- dir_dat %>% paste0(., "/covariates")
cov_files <- dir_cov %>% list.files()
cov_names <- cov_files %>% tools::file_path_sans_ext()
cov_cats <- dir_code %>%
paste0(., "/cov_categories_20231110.csv") %>%
read.table(
sep = ",",
header = TRUE
)
# cov_selected <- cov_cats %>%
#   filter(anbm_use == 1) %>%
#   dplyr::select(., name) %>%
#   unlist() %>%
#   unname()
source("f_predict_passna.R")
# Path for loading bootstrap models
dir_boot <- dir_results %>%
paste0(., "/bootstrap/")
dir_boot_models <- dir_boot %>%
paste0(., "/models/")
dir_boot_models_fractions <- dir_boot_models %>%
paste0(., "/", fractions, "/")
models_boot_files <- lapply(
1:length(fractions),
function(x) {
out <- fractions[x] %>%
paste0(dir_boot_models, "/", ., "/") %>%
list.files(full.names = TRUE)
return(out)
}
)
# Tiles for model prediction
numCores <- detectCores() - 1
numCores
dir_tiles <- dir_dat %>%
paste0(., "/tiles_591/")
subdir_tiles <- dir_tiles %>%
list.dirs() %>%
.[-1]
tilenames <- basename(subdir_tiles)
# Directory for saving bootstrap predictions
dir_pred_boot <- dir_boot %>%
paste0(., "/predictions/") %T>%
dir.create(showWarnings = FALSE, recursive = TRUE)
dir_pred_tiles <- dir_pred_boot %>%
paste0(., "/tiles/") %T>%
dir.create(showWarnings = FALSE, recursive = TRUE)
# Directory for temporary texture predictions, for standardization
# Overwrite for each depth + bootstrap repetition
dir_pred_tiles_tmp <- dir_pred_tiles %>%
paste0(., "/tmp_fractions/") %T>%
dir.create(showWarnings = FALSE, recursive = TRUE)
for (x in 1:length(tilenames)) {
dir_pred_tiles_tmp %>%
paste0(., "/", tilenames[x], "/") %T>%
dir.create(showWarnings = FALSE, recursive = TRUE)
}
dir_boot_sum_tiles <- dir_pred_boot %>%
paste0(., "/summary/") %T>%
dir.create(showWarnings = FALSE)
# Set number of bootstrap repetitions to use
nboot <- lapply(
models_boot_files,
function(x) {
out <- length(x)
return(out)
}
) %>%
unlist() %>%
min()
nboot_final <- 100
nboot_max <- 100
# nboot_max <- 100
nboot <- min(c(nboot, nboot_max))
boot_all_chr <- c(1:nboot) %>%
str_pad(
.,
nchar(nboot_final),
pad = "0"
) %>%
paste0("boot_", .)
# Set up loop for predicting each soil depth
n_digits <- 1
breaks <- c(0, 30, 60, 100, 200)
max_char <- breaks %>%
as.character() %>%
nchar() %>%
max()
breaks_chr <- breaks %>%
str_pad(
.,
max_char,
pad = "0"
)
j_all_depths <- 1:(length(breaks) - 1)
j_only_top <- 1
only_top <- TRUE
# only_top <- FALSE
if (only_top) {
j_depth <- j_only_top
} else {
j_depth <- j_all_depths
}
for (j in j_depth) {
breaks_j <- breaks[j:(j + 1)]
breaks_j_chr <- breaks_chr[j:(j + 1)]
print(paste0("Depth ", paste(breaks_j_chr, collapse = " - "), " cm"))
dir_pred_tiles_depth <- dir_pred_tiles %>%
paste0(
., "/depth_", breaks_j_chr[1], "_", breaks_j_chr[2], "_cm/"
) %T>%
dir.create(showWarnings = FALSE, recursive = TRUE)
dir_sum_depth_tiles <- dir_boot_sum_tiles %>%
paste0(
., "/depth_", breaks_j_chr[1], "_", breaks_j_chr[2], "_cm/"
)
# Calculate mean soil class and soil class uncertainties
print("Summarizing texture classes")
source("f_classify_soil_JB.R")
showConnections()
cl <- makeCluster(numCores)
clusterEvalQ(
cl,
{
library(terra)
library(magrittr)
library(dplyr)
library(tools)
}
)
clusterExport(
cl,
c(
"boot_all_chr",
"subdir_tiles",
"dir_pred_tiles_tmp",
"dir_dat",
"n_digits",
"breaks_j",
"breaks_j_chr",
"dir_sum_depth_tiles",
"fraction_names_underscore",
"nboot",
"dir_pred_tiles_depth",
"classify_soil_JB"
)
)
parSapplyLB(
cl,
1:length(subdir_tiles),
function(x) {
tilename_x <- basename(subdir_tiles[x])
r_frac_tile_means <- paste0(
dir_sum_depth_tiles, "/", tilename_x, "/",
fraction_names_underscore, "_mean.tif") %>%
rast()
outname_x_JB_no11 <- dir_sum_depth_tiles %>%
paste0(., "/", tilename_x, "/JB_no11.tif")
tmpfolder <- paste0(dir_dat, "/Temp/")
terraOptions(memfrac = 0.02, tempdir = tmpfolder)
r_frac_tile_means <- terra::subset(r_frac_tile_means, c(1, 2, 3, 5, 6))
names(r_frac_tile_means) <- c("clay", "silt", "sand_f", "SOM", "CaCO3")
# JB texture class for mean texture
lapp(
r_frac_tile_means,
classify_soil_JB,
SOM_factor = 0,  ## NB, no JB11
filename = outname_x_JB_no11,
overwrite = TRUE,
wopt = list(
datatype = "INT1U",
NAflag = 13
)
)
return(NULL)
}
)
stopCluster(cl)
foreach::registerDoSEQ()
rm(cl)
# Merge summary rasters
dir_merged_depth <- dir_pred_boot %>%
paste0(
., "/final_maps/depth_", breaks_j_chr[1], "_", breaks_j_chr[2], "_cm/"
) %T>%
dir.create(showWarnings = FALSE, recursive = TRUE)
summary_tiles_i <- paste0(
dir_sum_depth_tiles, "/", tilenames, "/JB_no11.tif"
)
tile1_i <- summary_tiles_i[1] %>% rast()
dtyp_i <- datatype(tile1_i)
naflag_i <- NAflag(tile1_i)
outtiles_sprc <- summary_tiles_i %>% sprc()
merge(
outtiles_sprc,
filename = paste0(dir_merged_depth, "/JB_no11.tif"),
overwrite = TRUE,
gdal = "TILED=YES",
datatype = dtyp_i,
NAflag = naflag_i,
names = "JB_no11"
)
}
# Finished calculating texture class without JB11
