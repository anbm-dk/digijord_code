1:4, function(i) {
mineral_raw <- c(
maps_10_km[[1]][[i]],
maps_10_km[[2]][[i]],
maps_10_km[[3]][[i]],
maps_10_km[[4]][[i]]
)
mineral_sum_r <- mineral_raw %>% sum()
mineral_final <- mineral_raw*100 / mineral_sum_r
mineral_final %<>% round(., digits = 1)
return(mineral_final)
}
)
maps_10_km_mineral_fin_frac <- lapply(
1:4, function(x) {
out <- c(
maps_10_km_mineral_fin[[1]][[x]],
maps_10_km_mineral_fin[[2]][[x]],
maps_10_km_mineral_fin[[3]][[x]],
maps_10_km_mineral_fin[[4]][[x]]
)
}
)
for (i in 1:length(maps_10_km_mineral_fin_frac)) {
maps_10_km[[i]] <- maps_10_km_mineral_fin_frac[[i]]
}
maps_10_km
c(maps_10_km)
rast(maps_10_km)
texture_10km <- rast(maps_10_km)
tex_pred
names(texture_10km)
names(tex_pred)
max_char <- breaks %>%
as.character() %>%
nchar() %>%
max()
breaks_chr <- breaks %>%
str_pad(
.,
max_char,
pad = "0"
)
paste0(fraction_names_underscore, "_", breaks_chr[1:4], "_", breaks_chr[2:5], "_cm")
max_char <- breaks %>%
as.character() %>%
nchar() %>%
max()
breaks_chr <- breaks %>%
str_pad(
.,
max_char,
pad = "0"
)
library(stringr)
max_char <- breaks %>%
as.character() %>%
nchar() %>%
max()
breaks_chr <- breaks %>%
str_pad(
.,
max_char,
pad = "0"
)
paste0(fraction_names_underscore, "_", breaks_chr[1:4], "_", breaks_chr[2:5], "_cm")
?paste0
depth_int_chr <- paste0(breaks_chr[1:4], "_", breaks_chr[2:5], "_cm")
paste0(fraction_names_underscore, "_", depth_int_chr)
?paste0
sapply(depth_int_chr, function(x) paste0(fraction_names_underscore, "_", x))
sapply(depth_int_chr, function(x) paste0(fraction_names_underscore, "_", x), simplify = TRUE)
sapply(depth_int_chr, function(x) paste0(fraction_names_underscore, "_", x)) %>% as.vector()
sapply(fraction_names_underscore, function(x) paste0(x, "_", depth_int_chr)) %>% as.vector()
texture_10km <- rast(maps_10_km)
names(texture_10km) <- sapply(
fraction_names_underscore,
function(x) paste0(x, "_", depth_int_chr)
) %>% as.vector()
cov_10km <- dir_cov_10km %>%
list.files(full.names = TRUE) %>%
rast() %>%
subset(cov_selected)
cov_10km_DC <- c(cov_10km, texture_10km)
cov_10km_DC <- c(cov_10km, texture_10km) %>%
subset(., colnames(varImp(model_DCfac$model)))
?subset
cov_10km_DC <- c(cov_10km, texture_10km) %>%
terra::subset(., colnames(varImp(model_DCfac$model)))
c(cov_10km, texture_10km)
c(cov_10km, texture_10km) %>% names()
cov_10km_DC <- c(cov_10km, texture_10km) %>%
terra::subset(., rownames(varImp(model_DCfac$model)))
rownames(varImp(model_DCfac$model))
rownames(varImp(model_DCfac$model)$importance)
cov_10km_DC <- c(cov_10km, texture_10km) %>%
terra::subset(., rownames(varImp(model_DCfac$model)$importance))
cov_10km_DC
pred_DC <- predict(
cov_10km_DC,
model_DCfac,
fun = predict_passna,
na.rm = FALSE,
const = data.frame(
dummy = NA
),
n_const = 0,
n_digits = 1
# ,
# filename = outname,
# overwrite = TRUE
)
pred_DC <- predict(
cov_10km_DC,
model_DCfac$model,
fun = predict_passna,
na.rm = FALSE,
const = data.frame(
dummy = NA
),
n_const = 0,
n_digits = 1
# ,
# filename = outname,
# overwrite = TRUE
)
pred_DC
plot(pred_DC)
?predict
?predict.train
?predict
?predict.train
pred_DC_prob <- predict(
cov_10km_DC,
model_DCfac$model,
fun = predict_passna,
na.rm = FALSE,
const = data.frame(
dummy = NA
),
n_const = 0,
n_digits = 0,
type = "prob"
# ,
# filename = outname,
# overwrite = TRUE
)
pred_DC_prob <- predict(
cov_10km_DC,
model_DCfac$model,
fun = predict_passna,
na.rm = FALSE,
const = data.frame(
dummy = NA
),
n_const = 0,
n_digits = 2,
type = "prob"
# ,
# filename = outname,
# overwrite = TRUE
)
model_DCfac
model_DCfac$model
model_DCfac$model$levels
model_DCfac$model$levels %>% length()
source("f_predict_passna.R")
pred_DC_prob <- predict(
cov_10km_DC,
model_DCfac$model,
fun = predict_passna_,
na.rm = FALSE,
const = data.frame(
dummy = NA
),
n_const = 0,
n_digits = 2,
type = "prob"
# ,
# filename = outname,
# overwrite = TRUE
)
pred_DC_prob <- predict(
cov_10km_DC,
model_DCfac$model,
fun = predict_passna_prob,
na.rm = FALSE,
const = data.frame(
dummy = NA
),
n_const = 0,
n_digits = 2,
type = "prob"
# ,
# filename = outname,
# overwrite = TRUE
)
pred_DC_prob <- predict(
cov_10km_DC,
model_DCfac$model,
fun = predict_passna_prob,
na.rm = FALSE,
const = data.frame(
dummy = NA
),
n_const = 0,
n_digits = 2,
# ,
# filename = outname,
# overwrite = TRUE
)
pred_DC_prob
plot(pred_DC_prob)
predict(model_DCfac, trdat_DC)
predict(model_DCfac$model, trdat_DC)
predict(model_DCfac$model, trdat_DC, type = "prob")
predict(model_DCfac$model, trdat_DC, type = "prob") %>% as.matrix()
predict_passna_prob(model_DCfac, trdat_DC, n_digits = 2)
predict_passna_prob(model_DCfac$model, trdat_DC, n_digits = 2)
predict_passna_prob(model_DCfac$model, trdat_DC, n_digits = NULL)
source("f_predict_passna.R")
predict_passna_prob(model_DCfac$model, trdat_DC, n_digits = NULL)
source("f_predict_passna.R")
predict_passna_prob(model_DCfac$model, trdat_DC, n_digits = NULL)
predict_passna_prob(model_DCfac$model, trdat_DC, n_digits = 2)
pred_DC_prob <- predict(
cov_10km_DC,
model_DCfac$model,
fun = predict_passna_prob,
na.rm = FALSE,
const = data.frame(
dummy = NA
),
n_const = 0,
n_digits = 2
# ,
# filename = outname,
# overwrite = TRUE
)
plot(pred_DC_prob)
pred_DC_mean <- app(
pred_DC_prob,
function(x) {
out <- stats::weighted.mean(1:5, x, na.rm = TRUE)
return(out)
}
)
plot(dc_mean)
plot(pred_DC_mean)
pred_DC_median <- app(
pred_DC_prob,
function(x) {
out <- spatstat::weighted.median(1:5, x, na.rm = TRUE)
return(out)
}
)
pred_DC_median <- app(
pred_DC_prob,
function(x) {
out <- weighted.median(1:5, x, na.rm = TRUE)
return(out)
}
)
plot(pred_DC, col = cividis(5))
plot(pred_DC, col = rev(cividis(5)))
plot(pred_DC_prob)
plot(pred_DC_prob, col = viridis(100))
plot(pred_DC_mean, col = rev(cividis(100)))
plot(pred_DC, col = rev(cividis(100)))
plot(pred_DC_median, col = rev(cividis(100)))
plot(pred_DC, col = rev(cividis(100)))
?weighted.mean
?weighted.mean
?weighted.median
pred_DC_median <- app(
pred_DC_prob,
function(x) {
out <- weighted.median(1:5, x, na.rm = TRUE, type = 4)
return(out)
}
)
plot(pred_DC_median, col = rev(cividis(100)))
plot(pred_DC_mean, col = rev(cividis(100)))
plot(pred_DC_median, col = rev(cividis(100)))
plot(pred_DC, col = rev(cividis(100)))
plot(pred_DC_mean, col = rev(cividis(100)))
plot(pred_DC_median, col = rev(cividis(100)))
library(terra)
dir_code <- getwd()
root <- dirname(dir_code)
dir_dat <- paste0(root, "/digijord_data/")
testn <- 13
mycrs <- "EPSG:25832"
fractions_alt <- c("clay", "silt", "fine_sand", "coarse_sand", "SOC", "CaCO3")
fractions <- fractions_alt
fraction_names_underscore <- c(
"Clay", "Silt", "Fine_sand", "Coarse_sand", "SOC", "CaCO3"
)
dir_results <- dir_dat %>%
paste0(., "/results_test_", testn, "/") %T>%
dir.create()
library(magrittr)
dir_results <- dir_dat %>%
paste0(., "/results_test_", testn, "/") %T>%
dir.create()
dir_pred_all <- dir_results %>%
paste0(., "/predictions/")
tex_pred <- dir_pred_all %>% list.files(
pattern = ".tif",
full.names = TRUE
) %>%
grep(".ovr", ., names(cov), value = TRUE, invert = TRUE) %>%
grep(".aux.xml", ., names(cov), value = TRUE, invert = TRUE) %>%
grep(".vat.cpg", ., names(cov), value = TRUE, invert = TRUE) %>%
grep(".vat.dbf", ., names(cov), value = TRUE, invert = TRUE) %>%
grep(
pattern = paste(fraction_names_underscore, collapse = "|"),
.,
value = TRUE
) %>%
rast()
tex_pred
tex_pred %>% names()
dir_dat %>%
paste0(
., "observations/validation/Validation_Points_RootZone.csv") %>%
read.table(header = TRUE, sep = ";")
?vect
dir_dat %>%
paste0(
., "observations/validation/Validation_Points_RootZone.csv") %>%
read.table(header = TRUE, sep = ";") %>%
vect(
geom = c("Longitude", "Latitude"),
crs = mycrs,
keepgeom = TRUE
)
dir_dat %>%
paste0(
., "observations/validation/Validation_Points_RootZone.csv") %>%
read.table(header = TRUE, sep = ";") %>%
vect(
geom = c("Longitude", "Latitude"),
crs = mycrs,
keepgeom = TRUE
) %>% plot()
tex_pred <- dir_pred_all %>% list.files(
pattern = ".tif",
full.names = TRUE
) %>%
grep(".ovr", ., names(cov), value = TRUE, invert = TRUE) %>%
grep(".aux.xml", ., names(cov), value = TRUE, invert = TRUE) %>%
grep(".vat.cpg", ., names(cov), value = TRUE, invert = TRUE) %>%
grep(".vat.dbf", ., names(cov), value = TRUE, invert = TRUE) %>%
grep(
pattern = paste(fraction_names_underscore, collapse = "|"),
.,
value = TRUE
) %>%
rast()
tex_pred
val_pts <- dir_dat %>%
paste0(
., "observations/validation/Validation_Points_RootZone.csv") %>%
read.table(header = TRUE, sep = ";") %>%
vect(
geom = c("Longitude", "Latitude"),
crs = mycrs,
keepgeom = TRUE
)
extract()
?extract
val_extr <- terra::extract(
tex_pred,
val_pts,
ID = FALSE,
bind = TRUE
) %>%
values()
val_extr
?subset
breaks <- c(0, 30, 60, 100, 200)
max_char <- breaks %>%
as.character() %>%
nchar() %>%
max()
breaks_chr <- breaks %>%
str_pad(
.,
max_char,
pad = "0"
)
library(stringr)
paste0(
fraction_names_underscore, "_", breaks_chr[1:4], "_", breaks_chr[2:5], "_cm/"
)
breaks <- c(0, 30, 60, 100, 200)
max_char <- breaks %>%
as.character() %>%
nchar() %>%
max()
breaks_chr <- breaks %>%
str_pad(
.,
max_char,
pad = "0"
)
paste0(
fraction_names_underscore, "_", breaks_chr[1:4], "_", breaks_chr[2:5], "_cm/"
)
paste0(
breaks_chr[1:4], "_", breaks_chr[2:5], "_cm"
)
paste0(
breaks_chr[1:4], "_", breaks_chr[2:5], "_cm"
) %>%
paste0(
fraction_names_underscore, "_", .
)
?paste0
paste0(
breaks_chr[1:4], "_", breaks_chr[2:5], "_cm"
) %>%
c(
fraction_names_underscore, .
)
paste0(
breaks_chr[1:4], "_", breaks_chr[2:5], "_cm"
) %>%
expand.grid(fraction_names_underscore, .) %>%
apply(., 1, paste, collapse = "_")
paste0(
breaks_chr[1:4], "_", breaks_chr[2:5], "_cm"
) %>%
expand.grid(fraction_names_underscore, .)
aste0(
breaks_chr[1:4], "_", breaks_chr[2:5], "_cm"
) %>%
expand.grid(fraction_names_underscore, .) %>%
arrange(var1)
paste0(
breaks_chr[1:4], "_", breaks_chr[2:5], "_cm"
) %>%
expand.grid(fraction_names_underscore, .) %>%
arrange(var1)
library(dplyr)
paste0(
breaks_chr[1:4], "_", breaks_chr[2:5], "_cm"
) %>%
expand.grid(fraction_names_underscore, .) %>%
arrange(var1)
paste0(
breaks_chr[1:4], "_", breaks_chr[2:5], "_cm"
) %>%
expand.grid(fraction_names_underscore, .) %>%
as.data.frame() %>%
arrange(var1)
?arrange
paste0(
breaks_chr[1:4], "_", breaks_chr[2:5], "_cm"
) %>%
expand.grid(fraction_names_underscore, .) %>%
as.data.frame()
paste0(
breaks_chr[1:4], "_", breaks_chr[2:5], "_cm"
) %>%
expand.grid(fraction_names_underscore, .) %>%
arrange(Var1)
paste0(
breaks_chr[1:4], "_", breaks_chr[2:5], "_cm"
) %>%
expand.grid(fraction_names_underscore, .) %>%
arrange(Var1) %>%
apply(., 1, paste, collapse = "_")
tex_lyr_order <- paste0(
breaks_chr[1:4], "_", breaks_chr[2:5], "_cm"
) %>%
expand.grid(fraction_names_underscore, .) %>%
arrange(Var1) %>%
apply(., 1, paste, collapse = "_")
tex_pred %>% subset(tex_lyr_order)
tex_pred %<>% subset(tex_lyr_order)
val_pts <- dir_dat %>%
paste0(
., "observations/validation/Validation_Points_RootZone.csv") %>%
read.table(header = TRUE, sep = ";") %>%
vect(
geom = c("Longitude", "Latitude"),
crs = mycrs,
keepgeom = TRUE
)
# Extract values
val_extr <- terra::extract(
tex_pred,
val_pts,
ID = FALSE,
bind = TRUE
) %>%
values()
val_extr
val_tex %>%
write.table(
paste0(dir_results, "/validation_point_predictions.csv"),
sep = ";",
row.names = FALSE
)
val_extr %>%
write.table(
paste0(dir_results, "/validation_point_predictions.csv"),
sep = ";",
row.names = FALSE
)
