aes(x = vdtochn, y = value)
) +
geom_smooth()
obs %>%
select(any_of(c(fractions, "s2_count_max10_fuzzy"))) %>%
tidyr::pivot_longer(
cols = any_of(fractions),
names_to = "fraction",
values_to = "value",
values_drop_na = TRUE
) %>%
filter(fraction == "SOC") %>%
# mutate(value = log(value)) %>%
ggplot(
aes(x = s2_count_max10_fuzzy, y = value)
) +
geom_smooth()
obs %>%
select(any_of(c(fractions, "s2_geomedian_20180701_20180731_b4"))) %>%
tidyr::pivot_longer(
cols = any_of(fractions),
names_to = "fraction",
values_to = "value",
values_drop_na = TRUE
) %>%
filter(fraction == "SOC") %>%
# mutate(value = log(value)) %>%
ggplot(
aes(x = s2_geomedian_20180701_20180731_b4, y = value)
) +
geom_smooth()
obs %>%
select(any_of(c(fractions, "vdtochn"))) %>%
tidyr::pivot_longer(
cols = any_of(fractions),
names_to = "fraction",
values_to = "value",
values_drop_na = TRUE
) %>%
filter(fraction == "CaCO3") %>%
# mutate(value = log(value)) %>%
ggplot(
aes(x = vdtochn, y = value)
) +
geom_smooth()
obs %>%
select(any_of(c(fractions, "standardized_height"))) %>%
tidyr::pivot_longer(
cols = any_of(fractions),
names_to = "fraction",
values_to = "value",
values_drop_na = TRUE
) %>%
filter(fraction == "CaCO3") %>%
# mutate(value = log(value)) %>%
ggplot(
aes(x = standardized_height, y = value)
) +
geom_smooth()
obs %>%
select(any_of(c(fractions, "dhm2015_terraen_10m"))) %>%
tidyr::pivot_longer(
cols = any_of(fractions),
names_to = "fraction",
values_to = "value",
values_drop_na = TRUE
) %>%
filter(fraction == "CaCO3") %>%
# mutate(value = log(value)) %>%
ggplot(
aes(x = dhm2015_terraen_10m, y = value)
) +
geom_smooth()
obs %>%
select(any_of(c(fractions, "dhm2015_terraen_10m"))) %>%
tidyr::pivot_longer(
cols = any_of(fractions),
names_to = "fraction",
values_to = "value",
values_drop_na = TRUE
) %>%
filter(fraction == "CaCO3") %>%
# mutate(value = log(value)) %>%
ggplot(
aes(x = dhm2015_terraen_10m, y = value)
) +
geom_smooth() +
geom_point()
obs %>%
select(any_of(c(fractions, "dhm2015_terraen_10m"))) %>%
tidyr::pivot_longer(
cols = any_of(fractions),
names_to = "fraction",
values_to = "value",
values_drop_na = TRUE
) %>%
filter(fraction == "CaCO3") %>%
mutate(value = sqrt(value)) %>%
ggplot(
aes(x = dhm2015_terraen_10m, y = value)
) +
geom_smooth() +
geom_point()
obs %>%
select(any_of(c(fractions, "vdtochn"))) %>%
tidyr::pivot_longer(
cols = any_of(fractions),
names_to = "fraction",
values_to = "value",
values_drop_na = TRUE
) %>%
filter(fraction == "CaCO3") %>%
mutate(value = sqrt(value)) %>%
ggplot(
aes(x = vdtochn, y = value)
) +
geom_smooth() +
geom_point()
obs %>%
select(any_of(c(fractions, "vdtochn"))) %>%
tidyr::pivot_longer(
cols = any_of(fractions),
names_to = "fraction",
values_to = "value",
values_drop_na = TRUE
) %>%
filter(fraction == "CaCO3") %>%
mutate(value = value > 0) %>%
ggplot(
aes(x = vdtochn, y = value)
) +
geom_smooth() +
geom_point()
obs %>%
select(any_of(c(fractions, "vdtochn"))) %>%
tidyr::pivot_longer(
cols = any_of(fractions),
names_to = "fraction",
values_to = "value",
values_drop_na = TRUE
) %>%
filter(fraction == "CaCO3") %>%
mutate(value = (value > 0)*1) %>%
ggplot(
aes(x = vdtochn, y = value)
) +
geom_smooth() +
geom_point()
obs %>%
select(any_of(c(fractions, "vdtochn"))) %>%
tidyr::pivot_longer(
cols = any_of(fractions),
names_to = "fraction",
values_to = "value",
values_drop_na = TRUE
) %>%
filter(fraction == "CaCO3") %>%
mutate(value = (value > 0)*1) %>%
ggplot(
aes(x = vdtochn, y = value)
) +
geom_smooth()
obs %>%
select(any_of(c(fractions, "vdtochn"))) %>%
tidyr::pivot_longer(
cols = any_of(fractions),
names_to = "fraction",
values_to = "value",
values_drop_na = TRUE
) %>%
filter(fraction == "CaCO3") %>%
filter(value > 0) %>%
# mutate(value = (value > 0)*1) %>%
ggplot(
aes(x = vdtochn, y = value)
) +
geom_smooth()
pdp_depth_mean %>%
mutate(
S1_VH_spring = filled_s1_baresoil_composite_vh_8_days/10^4
) %>%
filter(Fraction == "CaCO3") %>%
ggplot() +
geom_raster(aes(x = S1_VH_spring, y = Depth, fill = yhat)) +
scale_fill_viridis_c() +
coord_fixed(ratio = plotratio/10^4, expand = FALSE) +
scale_y_reverse()
pdp_depth_mean %>%
mutate(
S1_VH_spring = filled_s1_baresoil_composite_vh_8_days/10^4
) %>%
filter(Fraction == "clay") %>%
ggplot() +
geom_raster(aes(x = S1_VH_spring, y = Depth, fill = yhat)) +
scale_fill_viridis_c() +
coord_fixed(ratio = plotratio/10^4, expand = FALSE) +
scale_y_reverse()
pdp_depth_mean %>%
mutate(
S1_VH_spring = filled_s1_baresoil_composite_vh_8_days/10^4
) %>%
filter(Fraction == "silt") %>%
ggplot() +
geom_raster(aes(x = S1_VH_spring, y = Depth, fill = yhat)) +
scale_fill_viridis_c() +
coord_fixed(ratio = plotratio/10^4, expand = FALSE) +
scale_y_reverse()
pdp_depth_mean %>%
mutate(
S1_VH_spring = filled_s1_baresoil_composite_vh_8_days/10^4
) %>%
filter(Fraction == "coarse_sand") %>%
ggplot() +
geom_raster(aes(x = S1_VH_spring, y = Depth, fill = yhat)) +
scale_fill_viridis_c() +
coord_fixed(ratio = plotratio/10^4, expand = FALSE) +
scale_y_reverse()
pdp_depth_mean %>%
mutate(
S1_VH_spring = filled_s1_baresoil_composite_vh_8_days/10^4
) %>%
filter(Fraction == "SOC") %>%
ggplot() +
geom_raster(aes(x = S1_VH_spring, y = Depth, fill = yhat)) +
scale_fill_viridis_c() +
coord_fixed(ratio = plotratio/10^4, expand = FALSE) +
scale_y_reverse()
pdp_depth_raw %>% filter(fraction == "SOC")
pdp_depth_raw %>% filter(Fraction == "SOC")
pdp_depth_mean %>%
mutate(
S1_VH_spring = filled_s1_baresoil_composite_vh_8_days/10^4
) %>%
filter(Fraction == "SOC") %>%
ggplot() +
geom_raster(aes(x = S1_VH_spring, y = Depth, fill = log(yhat))) +
scale_fill_viridis_c() +
coord_fixed(ratio = plotratio/10^4, expand = FALSE) +
scale_y_reverse()
pdp_depth_mean %>% filter(Fraction == "SOC")
pdp_depth_mean %>% filter(Fraction == "SOC") %>% arrange(Depth)
pdp_depth_raw %>% filter(Fraction == "SOC") %>% arrange(Depth)
pdp_depth_raw %>% filter(Fraction == "SOC", Depth == 5)
pdp_depth_raw %>% filter(Fraction == "SOC", Depth == 5) %>% arrange(filled_s1_baresoil_composite_vh_8_days)
pdp_depth_raw %>% filter(Fraction == "SOC", Depth == 5) %>% ggplot(aes(x = filled_s1_baresoil_composite_vh_8_days, y = yhat)) + geom_point()
cov_pts_q
cov_pts_q2 <- cov_pts %>%
lapply(
function(x) {
out <- seq(
from = quantile(
x,
probs = 0.01, na.rm = TRUE, names = FALSE),
to = quantile(
x,
probs = 0.99, na.rm = TRUE, names = FALSE),
length.out = 32
)
return(out)
}
) %>%
bind_cols()
cov_pts_q2
combinations_pdp <- data.frame(
c("clay", "clay", "silt", "silt", "coarse_sand", "coarse_sand", "SOC", "SOC",
"SOC", "SOC", "CaCO3", "CaCO3", "CaCO3", "CaCO3"
),
c("filled_s2_geomedian_b12", "s2_geomedian_20180408_20180515_b8a",
"dhm2015_terraen_10m", "s2_geomedian_20180408_20180515_b3",
"dhm2015_terraen_10m", "s2_geomedian_20180601_20180630_b8", "vdtochn",
"s2_count_max10_fuzzy", "filled_s2_geomedian_b3",
"s2_geomedian_20180701_20180731_b4", "vdtochn", "standardized_height",
"dhm2015_terraen_10m"
)
)
combinations_pdp <- data.frame(
c("clay", "clay", "silt", "silt", "coarse_sand", "coarse_sand", "SOC", "SOC",
"SOC", "SOC", "CaCO3", "CaCO3", "CaCO3"
),
c("filled_s2_geomedian_b12", "s2_geomedian_20180408_20180515_b8a",
"dhm2015_terraen_10m", "s2_geomedian_20180408_20180515_b3",
"dhm2015_terraen_10m", "s2_geomedian_20180601_20180630_b8", "vdtochn",
"s2_count_max10_fuzzy", "filled_s2_geomedian_b3",
"s2_geomedian_20180701_20180731_b4", "vdtochn", "standardized_height",
"dhm2015_terraen_10m"
)
)
combinations_pdp
combinations_pdp <- data.frame(
fraction = c("clay", "clay", "silt", "silt", "coarse_sand", "coarse_sand", "SOC", "SOC",
"SOC", "SOC", "CaCO3", "CaCO3", "CaCO3"
),
covaritate = c("filled_s2_geomedian_b12", "s2_geomedian_20180408_20180515_b8a",
"dhm2015_terraen_10m", "s2_geomedian_20180408_20180515_b3",
"dhm2015_terraen_10m", "s2_geomedian_20180601_20180630_b8", "vdtochn",
"s2_count_max10_fuzzy", "filled_s2_geomedian_b3",
"s2_geomedian_20180701_20180731_b4", "vdtochn", "standardized_height",
"dhm2015_terraen_10m"
)
)
combinations_pdp
j <- 1
i <- which(fractions %in% combinations_pdp$fraction[j])
predvars_full_j <- c("upper", "lower", combinations_pdp$covaritate[j])
predvars_full_j
expand.grid(
upper = seq(0, 190, 10),
x = select(cov_pts_q2, any_of(combinations_pdp$covaritate[j]))
)
select(cov_pts_q2, any_of(combinations_pdp$covaritate[j]))
select(cov_pts_q2, any_of(combinations_pdp$covaritate[j])) %>% unlist()
cov_pts_q2 %>%
select(any_of(combinations_pdp$covaritate[j])) %>%
unlist() %>%
unname()
pgrid_j <- expand.grid(
upper = seq(0, 190, 10),
x = cov_pts_q2 %>%
select(any_of(combinations_pdp$covaritate[j])) %>%
unlist() %>%
unname()
)
expand.grid(
upper = seq(0, 190, 10),
x = cov_pts_q2 %>%
select(any_of(combinations_pdp$covaritate[j])) %>%
unlist() %>%
unname()
)
pgrid_j <- expand.grid(
upper = seq(0, 190, 10),
x = cov_pts_q2 %>%
select(any_of(combinations_pdp$covaritate[j])) %>%
unlist() %>%
unname()
) %>%
mutate(lower = upper + 10)
pgrid_j
pgrid_j %>% rename_with(~ function(x) {return(combinations_pdp$covaritate[j])}, x)
pgrid_j %>% rename_with(~ combinations_pdp$covaritate[j], x)
pgrid_j <- expand.grid(
upper = seq(0, 190, 10),
x = cov_pts_q2 %>%
select(any_of(combinations_pdp$covaritate[j])) %>%
unlist() %>%
unname()
) %>%
mutate(lower = upper + 10) %>%
rename_with(~ combinations_pdp$covaritate[j], x)
pgrid_j
combinations_pdp <- data.frame(
fraction = c("clay", "clay", "silt", "silt", "coarse_sand", "coarse_sand", "SOC", "SOC",
"SOC", "SOC", "CaCO3", "CaCO3", "CaCO3"
),
covaritate = c("filled_s2_geomedian_b12", "s2_geomedian_20180408_20180515_b8a",
"dhm2015_terraen_10m", "s2_geomedian_20180408_20180515_b3",
"dhm2015_terraen_10m", "s2_geomedian_20180601_20180630_b8", "vdtochn",
"s2_count_max10_fuzzy", "filled_s2_geomedian_b3",
"s2_geomedian_20180701_20180731_b4", "vdtochn", "standardized_height",
"dhm2015_terraen_10m"
)
)
cov_pts_q2 <- cov_pts %>%
lapply(
function(x) {
out <- seq(
from = quantile(
x,
probs = 0.01, na.rm = TRUE, names = FALSE),
to = quantile(
x,
probs = 0.99, na.rm = TRUE, names = FALSE),
length.out = 32
)
return(out)
}
) %>%
bind_cols()
pdp_outlist_combo <- list()
j <- 1
i <- which(fractions %in% combinations_pdp$fraction[j])
predvars_full_j <- c("upper", "lower", combinations_pdp$covaritate[j])
pgrid_j <- expand.grid(
upper = seq(0, 190, 10),
x = cov_pts_q2 %>%
select(any_of(combinations_pdp$covaritate[j])) %>%
unlist() %>%
unname()
) %>%
mutate(lower = upper + 10) %>%
rename_with(~ combinations_pdp$covaritate[j], x)
plotratio_j <- ((max(pgrid_j[, 2]) - min(pgrid_j[, 2])) / 200) * (20 / 32)
pdp_outlist_j <- list()
for (bootr in 1:2) {
model_ib <- models_boot_files[[i]][bootr] %>% readRDS()
names_model_i <- varImp(model_ib)$importance %>% rownames()
print(paste(fractions[i], combinations_pdp$covaritate[j], "model", bootr))
ok1 <- c("upper", "lower") %>%
is_in(names_model_i) %>%
sum() %>%
is_greater_than(0)
ok2 <- combinations_pdp$covaritate[j] %>%
is_in(names_model_i) %>%
add(ok1) %>%
is_greater_than(1)
if (ok2) {
predvars_ib <- predvars_full_j %>%
magrittr::extract(. %in% names_model_i)
pgrid_ib <- pgrid %>% select(any_of(predvars_ib))
p1xv <- pdp::partial(
model_ib,
pred.var = predvars_ib,
pred.grid = pgrid_ib,
type = "regression"
)
p1xv %<>%
add_column(
!!!pgrid[setdiff(names(pgrid), names(.))]
) %>%
mutate(
Depth = (upper + lower)/2
)
pdp_outlist_j[[length(pdp_outlist_j) + 1]] <- p1xv
}
}
pdp_outlist_j <- list()
for (bootr in 1:2) {
model_ib <- models_boot_files[[i]][bootr] %>% readRDS()
names_model_i <- varImp(model_ib)$importance %>% rownames()
print(paste(fractions[i], combinations_pdp$covaritate[j], "model", bootr))
ok1 <- c("upper", "lower") %>%
is_in(names_model_i) %>%
sum() %>%
is_greater_than(0)
ok2 <- combinations_pdp$covaritate[j] %>%
is_in(names_model_i) %>%
add(ok1) %>%
is_greater_than(1)
if (ok2) {
predvars_ib <- predvars_full_j %>%
magrittr::extract(. %in% names_model_i)
pgrid_ib <- pgrid_j %>% select(any_of(predvars_ib))
p1xv <- pdp::partial(
model_ib,
pred.var = predvars_ib,
pred.grid = pgrid_ib,
type = "regression"
)
p1xv %<>%
add_column(
!!!pgrid[setdiff(names(pgrid), names(.))]
) %>%
mutate(
Depth = (upper + lower)/2
)
pdp_outlist_j[[length(pdp_outlist_j) + 1]] <- p1xv
}
}
pdp_df_raw_j <- pdp_outlist_j %>%
bind_rows()
pdp_depth_mean_j <- pdp_df_raw_j %>%
group_by(Depth, .data[[combinations_pdp$covaritate[j]]]) %>%
summarise(yhat = mean(yhat, na.rm = TRUE)) %>%
ungroup()
pdp_depth_mean_j
pdp_depth_mean_j %<>%
arrange(.data[[combinations_pdp$covaritate[j]]])
pdp_depth_mean_j
pgrid_j
pgrid_j
pdp_depth_mean_j <- pdp_df_raw_j %>%
group_by(Depth, .data[[combinations_pdp$covaritate[j]]]) %>%
summarise(yhat = mean(yhat, na.rm = TRUE)) %>%
ungroup() %>%
arrange(.data[[combinations_pdp$covaritate[j]]])
pdp_depth_mean_j
pdp_depth_mean_j <- pdp_outlist_j %>%
bind_rows() %>%
group_by(Depth, .data[[combinations_pdp$covaritate[j]]]) %>%
summarise(yhat = mean(yhat, na.rm = TRUE)) %>%
ungroup() %>%
arrange(.data[[combinations_pdp$covaritate[j]]])
pdp_depth_mean_j$x <- pgrid_j[, 2]
pdp_depth_mean_j %<>%
mutate(
Fraction = fractions[i],
covariate = combinations_pdp$covaritate[j],
plotratio = plotratio_j
) %>%
select(Fraction, covariate, Depth, x, plotratio)
pdp_depth_mean_j
pdp_depth_mean_j$x
pdp_depth_mean_j <- pdp_outlist_j %>%
bind_rows() %>%
group_by(Depth, .data[[combinations_pdp$covaritate[j]]]) %>%
summarise(yhat = mean(yhat, na.rm = TRUE)) %>%
ungroup() %>%
arrange(.data[[combinations_pdp$covaritate[j]]])
pdp_depth_mean_j$x <- pgrid_j[, 2]
pdp_depth_mean_j %<>%
mutate(
Fraction = fractions[i],
covariate = combinations_pdp$covaritate[j],
plotratio = plotratio_j
) %>%
select(Fraction, covariate, Depth, x, plotratio, yhat)
pdp_depth_mean_j %>%
ggplot() +
geom_raster(aes(x = x, y = Depth, fill = yhat)) +
scale_fill_viridis_c() +
coord_fixed(ratio = pdp_depth_mean_j$plotratio[1], expand = FALSE) +
scale_y_reverse()
