#
# obs_top %>%
#   select(all_of(figure_cols)) %>%
#   # sample_frac(0.1) %>%
#   mutate(
#     s1_baresoil_composite_vh_8_days = ifelse(
#       s1_baresoil_composite_vh_8_days == 0 | s1_baresoil_composite_vh_8_days < -3000,
#       NA,
#       s1_baresoil_composite_vh_8_days
#     ),
#     s2_geomedian_b3 = ifelse(
#       s2_geomedian_b3 > 2000,
#       NA,
#       s2_geomedian_b3
#     ),
#     logCaCO3 = ifelse(
#       is.finite(logCaCO3),
#       logCaCO3,
#       NA
#     ),
#     logSOC = ifelse(
#       logSOC > -2.5,
#       logSOC,
#       NA
#     ),
#     clay = ifelse(
#       clay < 30,
#       clay,
#       NA
#     ),
#     silt = ifelse(
#       silt < 30,
#       silt,
#       NA
#     )
#   ) %>%
#   rename(
#     DEM = dhm2015_terraen_10m,
#     UTMX = ogc_lite_pi0000,
#     S1_bare_vh = s1_baresoil_composite_vh_8_days,
#     S2_summer_b7 = s2_geomedian_20180501_20180731_b7,
#     S2_bare_b3 = s2_geomedian_b3
#   ) %>%
#   pivot_longer(
#     all_of(short_names),
#     names_to = "Covariate",
#     values_to = "x_value"
#   ) %>%
#   pivot_longer(
#     all_of(fractions),
#     names_to = "Fraction",
#     values_to = "y_value",
#   ) %>%
#   ggplot(
#     aes(
#       x = x_value,
#       y = y_value
#     )
#   ) +
#   geom_point(alpha = .01, shape = 16) +
#   facet_grid(
#     factor(Fraction, levels = fractions) ~ Covariate,
#     scales = "free"
#   ) +
#   geom_smooth(
#     se = FALSE,
#     color = "red"
#     ) +
#   labs(
#     x = "Covariate value",
#     y = "Observation (%)"
#   ) +
#   scale_x_continuous(
#     n.breaks = 3,
#     labels = label_number(scale_cut = cut_short_scale())
#     ) +
#   scale_y_continuous(n.breaks = 3) +
#   theme(strip.text.y.right = element_text(angle = 0))
#
# dev.off()
# Maps for all of Denmark
cov2 <- subset(cov, cov_selected)
predfolder2 <- paste0(dir_dat, "/predictions_", testn, "/") %T>% dir.create()
tmpfolder <- paste0(dir_dat, "/Temp/")
terraOptions(memfrac = 0.15, tempdir = tmpfolder)
maps <- list()
for(i in 1:length(fractions))
{
frac <- fractions[i]
showConnections()
maps[[i]] <- predict(
cov2,
models[[i]],
fun = rfun,
na.rm = FALSE,
cores = 19,
filename = paste0(predfolder2, frac,  ".tif"),
overwrite = TRUE,
const = data.frame(
SOM_removed = TRUE,
year = 2010
)
)
}
library(terra)
library(magrittr)
library(tools)
library(dplyr)
library(caret)
library(tibble)
library(tidyr)
dir_code <- getwd()
root <- dirname(dir_code)
dir_dat <- paste0(root, "/digijord_data/")
testn <- 6
mycrs <- "EPSG:25832"
# Results folder
dir_results <- dir_dat %>%
paste0(., "/results_test_", testn, "/")
outfolder <- dir_dat %>%
paste0(., "/testarea_10km/covariates/")
predfolder <- dir_dat %>%
paste0(., "/testarea_10km/predictions_", testn, "/")
# Load Vindum data
vindum_obs <- dir_dat %>%
paste0(., "/observations/Vindum/Vindum_everything.csv") %>%
read.table(
header = TRUE,
sep = ";"
) %>%
filter(DEPTH == 25) %>%
vect(
geom = c("UTMX", "UTMY"),
crs = mycrs,
keepgeom = TRUE
)
# Load predictions
predictions <- predfolder %>%
list.files(full.names = TRUE) %>%
rast()
names(predictions) <- predfolder %>%
list.files() %>%
file_path_sans_ext()
# Extract predictions
vindum_extr <- terra::extract(predictions, vindum_obs)
# Plot
plot(predictions[[1]], ext = ext(vindum_obs))
plot(vindum_obs, "LER", add = TRUE)
plot(vindum_extr$clay_10km, vindum_obs$LER)
abline(1,1)
cor(vindum_extr$clay_10km, vindum_obs$LER, use =  "pairwise.complete.obs")
plot(vindum_extr$logSOC_10km, log(vindum_obs$SOC))
abline(1,1)
plot(exp(vindum_extr$logSOC_10km), vindum_obs$SOC)
abline(1,1)
cor(exp(vindum_extr$logSOC_10km), vindum_obs$SOC, use =  "pairwise.complete.obs")^2
predictions
plot(predictions[[5]], ext = ext(vindum_obs))
plot(vindum_obs, "SOC", add = TRUE)
plot(exp(predictions[[5]]), ext = ext(vindum_obs))
plot(vindum_obs, "SOC", add = TRUE)
cor(vindum_extr$clay_10km, vindum_obs$LER, use =  "pairwise.complete.obs")
cor(vindum_extr$clay_10km, vindum_obs$LER, use =  "pairwise.complete.obs")^2
cor(exp(vindum_extr$logSOC_10km), vindum_obs$SOC, use =  "pairwise.complete.obs")^2
dir_cov <- dir_dat %>% paste0(., "/covariates")
library(terra)
library(magrittr)
library(graphics)
library(cluster)
library(randomcoloR)
library(dplyr)
library(MultivariateRandomForest)
dir_code <- getwd()
root <- dirname(dir_code)
dir_dat <- paste0(root, "/digijord_data/")
dir_cov <- dir_dat %>% paste0(., "/covariates")
testn <- 6
mycrs <- "EPSG:25832"
dem <- dir_cov %>%
paste0('/dhm2015_terraen_10m.tif') %>%
rast()
dem1km <- paste0(dir_dat, '/layers/dhm2015_terraen_1km.tif') %>% rast()
dem1km
plot(dem1km)
coords <- crds(dem1km)
distances <- dist(coords, method = 'maximum')
clustering <- hclust(distances, method = 'single')
groups <- cutree(clustering, k = 5)
groups_df <- cbind(coords, groups) %>%
as.data.frame()
groups_r <- rast(groups_df)
set.seed(1)
myrandomcolors <- randomColor(length(unique(groups)))
plot(groups_r, col = myrandomcolors)
dem4km <- dem1km %>%
is.na(.) %>%
ifel(., NA, 1) %>%
aggregate(
fact = 4,
na.rm = TRUE,
overwrite = TRUE,
fun = 'sum'
) %T>%
plot
dem4km_df <- as.data.frame(dem4km, xy = TRUE, cells = TRUE)
coords_4km <- dem4km_df %>%
select(c(x, y)) %>%
as.matrix()
nrows <- nrow(coords_4km)
nrows <- nrow(coords_4km)
nrows <- 1000
solve(cov(coords_4km[1:nrows, ])) %>% plot
mytree <- build_single_tree(
coords_4km[1:nrows, ],
coords_4km[1:nrows, ],
min_leaf = nrows/40,
m_feature = 2,
Command = 2,
Inv_Cov_Y = solve(cov(coords_4km[1:nrows, ]))
)
mypred <- single_tree_prediction(
mytree,
coords_4km[1:nrows, ],
2
)
mypred <- paste(mypred[, 1], mypred[, 2])
mydf <- as.data.frame(coords_4km[1:nrows, ])
mydf$pred <- as.factor(mypred) %>% as.numeric()
set.seed(1)
myrandomcolors2 <- randomColor(length(unique(mydf$pred)))
mydf %>% rast %>% plot(col = myrandomcolors2)
mypred <- single_tree_prediction(
mytree,
coords,
2
)
mypred <- paste(mypred[, 1], mypred[, 2])
mydf <- as.data.frame(coords)
mydf$pred <- as.factor(mypred) %>% as.numeric()
set.seed(1)
myrandomcolors2 <- randomColor(length(unique(mydf$pred)))
mydf %>% rast %>% plot(col = myrandomcolors2)
?build_single_tree
nrows <- nrow(coords_4km)
# nrows <- 1000
mytree <- build_single_tree(
coords_4km[1:nrows, ],
coords_4km[1:nrows, ],
min_leaf = nrows/40,
m_feature = 2,
Command = 2,
Inv_Cov_Y = solve(cov(coords_4km[1:nrows, ]))
)
mypred <- single_tree_prediction(
mytree,
coords,
2
)
mypred <- paste(mypred[, 1], mypred[, 2])
mydf <- as.data.frame(coords)
mydf$pred <- as.factor(mypred) %>% as.numeric()
set.seed(1)
myrandomcolors2 <- randomColor(length(unique(mydf$pred)))
mydf %>% rast %>% plot(col = myrandomcolors2)
mydf
groups_df
cbind(groups_df, mydf)
df_all <- cbind(groups_df, mydf[, 3])
df_all %>% mutate(
group_final = ifelse(
groups == 1,
pred,
groups*100
)
)
df_all <- cbind(groups_df, mydf)
df_all %>% mutate(
group_final = ifelse(
groups == 1,
pred,
groups*100
)
)
df_all <- cbind(groups_df, mydf$pred)
df_all %>% mutate(
group_final = ifelse(
groups == 1,
pred,
groups*100
)
)
df_all
df_all <- mydf %>%
select(pred) %>%
bind_cols(groups_df, .)
df_all %>% mutate(
group_final = ifelse(
groups == 1,
pred,
groups*100
)
)
df_all %>% mutate(
group_final = ifelse(
groups == 1,
pred,
groups*100
)
) %>% select(
c(x, y, group_final)
)
df_all %>% mutate(
group_final = ifelse(
groups == 1,
pred,
groups*100
)
) %>% select(
c(x, y, group_final)
) %>% rast() %>% plot()
df_all %>% mutate(
group_final = ifelse(
groups == 1,
pred,
groups*100
)
) %>% select(
c(x, y, group_final)
) %>% rast() %>% as.factor() %>% plot()
df_all <- mydf %>%
select(pred) %>%
bind_cols(groups_df, .) %>%
mutate(
group_final = ifelse(
groups == 1,
pred,
groups*100
)
) %>% select(
c(x, y, group_final)
)
df_all <- mydf %>%
select(pred) %>%
bind_cols(groups_df, .) %>%
mutate(
group_final = ifelse(
groups == 1,
pred,
groups*100
)
) %>% select(
c(x, y, group_final)
) %>%
mutate(
group_final = group_final %>% as.factor() %>% as.numeric()
)
myrandomcolors3 <- randomColor(max(df_all$group_final))
df_all %>% rast() %>% as.factor() %>% plot(col = myrandomcolors3)
rast_all <- rast(df_all)
crs(rast_all) <- mycrs
as.polygons(rast_all)
as.polygons(rast_all) %>% plot()
as.polygons(rast_all) %>% plot("group_final")
polygons_all <- as.polygons(rast_all) %>% plot("group_final")
exts <- list()
exts <- list()
for (i in 1:length(unique(df_all$group_final))) {
exts[[i]] <- ext(polygons_all[i])
}
polygons_all <- as.polygons(rast_all) %T>% plot("group_final")
exts <- list()
for (i in 1:length(unique(df_all$group_final))) {
exts[[i]] <- ext(polygons_all[i])
}
exts
exts <- list()
for (i in 1:length(unique(df_all$group_final))) {
exts[[i]] <- ext(polygons_all[i]) %>% vect()
}
exts <- list()
for (i in 1:length(unique(df_all$group_final))) {
exts[[i]] <- ext(polygons_all[i]) %>% as.polygons(crs = mycrs)
}
final_boxes <- vect(exts)
plot(final_boxes)
plot(rast_all, col = myrandomcolors3)
plot(final_boxes, add = TRUE)
dir_tiles <- dir_dat %>%
paste0(., "/tiles_", length(myrandomcolors3), "/")
dir_tiles
dir_tiles <- dir_dat %>%
paste0(., "/tiles_", length(myrandomcolors3), "/") %T>%
dir.create()
final_boxes
writeVector(
final_boxes,
filename = paste0(dir_tiles, "tiles.shp"),
filetype = "ESRI Shapefile"
)
library(terra)
library(magrittr)
library(dplyr)
dir_code <- getwd()
root <- dirname(dir_code)
dir_dat <- paste0(root, "/digijord_data/")
dir_cov <- dir_dat %>% paste0(., "/covariates")
testn <- 6
mycrs <- "EPSG:25832"
dir_tiles <- dir_dat %>%
paste0(., "/tiles_60/")
?vect
tile_shapes <- dir_tiles %>%
paste0(., "/tiles.shp") %>%
vect()
plot(tile_shapes)
for (i in 1:length(tile_shapes)) {
}
library(stringr)
nchar(as.character(1:10))
length(tile_shapes) %>% c(1:.)
max_char <- length(tile_shapes) %>%
c(1:.) %>%
as.character() %>%
nchar() %>%
max()
tile_numbers <- length(tile_shapes) %>%
c(1:.) %>%
str_pad(
.,
max_char,
pad = "0"
)
length(tile_shapes) %>% 1:.
max_char <- length(tile_shapes) %>%
1:. %>%
as.character() %>%
nchar() %>%
max()
tile_numbers <- length(tile_shapes) %>%
1:. %>%
str_pad(
.,
max_char,
pad = "0"
)
for (i in 1:length(tile_shapes)) {
dir_tile_i <- dir_tiles %>%
paste0(., "/tile", tile_numbers[[i]], "/") %T>%
dir.create()
}
for (i in 1:length(tile_shapes)) {
dir_tile_i <- dir_tiles %>%
paste0(., "/tile_", tile_numbers[[i]], "/") %T>%
dir.create()
}
cov_files <- dir_cov %>%
list.files(
pattern = ".tif",
full.names = TRUE
)
# Make names for tiles
max_char <- length(tile_shapes) %>%
1:. %>%
as.character() %>%
nchar() %>%
max()
tile_numbers <- length(tile_shapes) %>%
1:. %>%
str_pad(
.,
max_char,
pad = "0"
)
# Cropping function
cropstack <- function(
x,  # list of files
y,  # extent
folder # target folder
) {
for(i in 1:length(x)) {
r <- x[i] %>% rast
dtype <- r %>%
sources %>%
raster::raster(.) %>%
raster::dataType(.)
outname <- r %>%
sources %>%
basename %>%
tools::file_path_sans_ext(.) %>%
make.names %>%
paste0(folder, ., ".tif")
r %>%
crop(y = y) %>%
writeRaster(
datatype = dtype,
filename = outname,
overwrite = TRUE
)
}
}
# Loop for tile creation
for (i in 1:length(tile_shapes)) {
print(i)
dir_tile_i <- dir_tiles %>%
paste0(., "/tile_", tile_numbers[i], "/") %T>%
dir.create()
cov_files %>%
cropstack(
y = tile_shapes[i],
folder = dir_tile_i
)
}
