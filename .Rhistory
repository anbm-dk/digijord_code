# Analyse results
# Make map for test area
# Make national map
# 1: Start up
library(terra)
library(magrittr)
library(tools)
library(dplyr)
library(caret)
library(tibble)
library(tidyr)
library(sf)
library(exactextractr)
library(party)
library(rpart)
library(doParallel)
library(spatstat) # weights
library(RODBC)
dir_code <- getwd()
root <- dirname(dir_code)
dir_dat <- paste0(root, "/digijord_data/")
testn <- 13
mycrs <- "EPSG:25832"
# Results folder
dir_results <- dir_dat %>%
paste0(., "/results_test_", testn, "/") %T>%
dir.create()
# Part 1: Soil drainage classes
profiles_shp <- dir_dat %>%
paste0(
.,
"/observations/profiles/Profiles_coordinates_new/",
"Profiles_coordinates_new.shp"
) %>%
vect()
# 1.1: Correct coordinates for profiles
profiles_db <- dir_dat %>%
paste0(., "/observations/profiles/DDJD2023.accdb")
con3 <- odbcConnectAccess2007(profiles_db)
profiles_DC <- sqlFetch(con3, "PROFIL") %>%
select(c(PROFILNR, DRAENKL)) %>%
drop_na() %>%
filter(DRAENKL %in% 1:5)
profiles_DC %<>% inner_join(
x = values(profiles_shp),
y = .,
by = "PROFILNR"
) %>% arrange(
PROFILNR
) %>% vect(
geom = c("x", "y"),
crs = mycrs,
keepgeom = TRUE
)
library(viridisLite)
plot(profiles_DC, "DRAENKL", col = rev(cividis(5)))
# 1.2:  Load covariates
cov_dir <- dir_dat %>% paste0(., "/covariates")
cov_files <- cov_dir %>% list.files()
cov_names <- cov_files %>% tools::file_path_sans_ext()
cov <- paste0(cov_dir, "/", cov_files) %>%
rast()
names(cov) <- cov_names
crs(cov) <- mycrs
cov_cats <- dir_code %>%
paste0(., "/cov_categories_20230712.csv") %>%
read.table(
sep = ";",
header = TRUE
)
cov_selected <- cov_cats %>%
filter(anbm_use == 1) %>%
dplyr::select(., name) %>%
unlist() %>%
unname()
cov %<>% subset(cov_selected)
# 1.3 Load texture predictions
?list.files
dir_results %>% list.files(
pattern = ".tif",
full.names = TRUE
)
tex_pred <-
dir_pred_all <- dir_results %>%
paste0(., "/predictions/")
dir_pred_all %>% list.files(
pattern = ".tif",
full.names = TRUE
)
?grep
dir_pred_all %>% list.files(
pattern = ".tif",
full.names = TRUE
) %>%
grep(".ovr", ., names(cov), value = TRUE, invert = TRUE)
dir_pred_all %>% list.files(
pattern = ".tif",
full.names = TRUE
) %>%
grep(".ovr", ., names(cov), value = TRUE, invert = TRUE) %>%
grep(".aux.xml", ., names(cov), value = TRUE, invert = TRUE)
dir_pred_all %>% list.files(
pattern = ".tif",
full.names = TRUE
) %>%
grep(".ovr", ., names(cov), value = TRUE, invert = TRUE) %>%
grep(".aux.xml", ., names(cov), value = TRUE, invert = TRUE) %>%
grep(".vat.cpg", ., names(cov), value = TRUE, invert = TRUE) %>%
grep(".vat.dbf", ., names(cov), value = TRUE, invert = TRUE)
fraction_names_underscore <- c(
"Clay", "Silt", "Fine_sand", "Coarse_sand", "SOC", "CaCO3"
)
x <- c("A and B", "A, B and C", "A, B, C and D", "foobar")
pattern <- "[[:space:]]*(,|and)[[:space:]]"
## Match data from regexpr()
m <- regexpr(pattern, x)
regmatches(x, m)
regmatches(x, m) %>% str()
tex_pred <- dir_pred_all %>% list.files(
pattern = ".tif",
full.names = TRUE
) %>%
grep(".ovr", ., names(cov), value = TRUE, invert = TRUE) %>%
grep(".aux.xml", ., names(cov), value = TRUE, invert = TRUE) %>%
grep(".vat.cpg", ., names(cov), value = TRUE, invert = TRUE) %>%
grep(".vat.dbf", ., names(cov), value = TRUE, invert = TRUE)
grep(
pattern = paste(fraction_names_underscore, collapse = "|"),
tex_pred,
value = TRUE
)
tex_pred <- dir_pred_all %>% list.files(
pattern = ".tif",
full.names = TRUE
) %>%
grep(".ovr", ., names(cov), value = TRUE, invert = TRUE) %>%
grep(".aux.xml", ., names(cov), value = TRUE, invert = TRUE) %>%
grep(".vat.cpg", ., names(cov), value = TRUE, invert = TRUE) %>%
grep(".vat.dbf", ., names(cov), value = TRUE, invert = TRUE) %>%
grep(
pattern = paste(fraction_names_underscore, collapse = "|"),
tex_pred,
value = TRUE
) %>%
rast()
tex_pred
profiles_DC
?extract
cov_DC <- c(cov, tex_pred)
cov_DC
cov_DC %>% names
obs_DC <- extract(
cov_DC,
profiles_DC,
bind = TRUE,
ID = FALSE
)
obs_DC <- terra::extract(
cov_DC,
profiles_DC,
bind = TRUE,
ID = FALSE
)
obs_DC
obs_DC %>% values()
dir_extr <- dir_dat %>%
paste0(., "/extracts/")
obs_DC %>%
values() %>%
write.table(
file = paste0(dir_extr, "obs_DC_extr.csv"),
row.names = FALSE,
col.names = TRUE,
sep = ";"
)
read.table(
paste0(dir_extr, "obs_DC_extr.csv")
)
read.table(
paste0(dir_extr, "obs_DC_extr.csv"),
header = TRUE
)
read.table(
paste0(dir_extr, "obs_DC_extr.csv"),
header = TRUE,
row.names = FALSE
)
read.table(
paste0(dir_extr, "obs_DC_extr.csv"),
header = TRUE,
row.names = FALSE,
sep = ";"
)
read.table(
paste0(dir_extr, "obs_DC_extr.csv"),
header = TRUE,
sep = ";"
)
obs_DC <- read.table(
paste0(dir_extr, "obs_DC_extr.csv"),
header = TRUE,
sep = ";"
)
dir_folds <- dir_dat %>%
paste0(., "/folds/")
file_folds_10_100m <- paste0(dir_folds, "/folds_10_100m.tif")
folds_10_100m <- rast(file_folds_10_100m)
folds_DC <- terra::extract(
x = folds_10_100m,
y = profiles_DC,
ID = FALSE,
) %>% unlist() %>% unname()
mask_LU <- paste0(dir_dat, "/layers/Mask_LU.tif") %>% rast()
mask_LU_DC <- terra::extract(
mask_LU,
profiles_DC,
ID = FALSE
) %>% unlist() %>% unname()
obs_DC %<>%
values() %>%
mutate(
fold = folds_DC,
mask_LU = mask_LU_extr
)
obs_DC %<>%
mutate(
fold = folds_DC,
mask_LU = mask_LU_extr
)
obs_DC %<>%
mutate(
fold = folds_DC,
mask_LU = mask_LU_DC
)
obs_DC
obs_DC <- read.table(
paste0(dir_extr, "obs_DC_extr.csv"),
header = TRUE,
sep = ";"
)
# 3: Extract folds and mask
dir_folds <- dir_dat %>%
paste0(., "/folds/")
file_folds_10_100m <- paste0(dir_folds, "/folds_10_100m.tif")
folds_10_100m <- rast(file_folds_10_100m)
folds_DC <- terra::extract(
x = folds_10_100m,
y = profiles_DC,
ID = FALSE,
) %>% unlist() %>% unname()
mask_LU <- paste0(dir_dat, "/layers/Mask_LU.tif") %>% rast()
mask_LU_DC <- terra::extract(
mask_LU,
profiles_DC,
ID = FALSE
) %>% unlist() %>% unname()
obs_DC %<>%
mutate(
fold = folds_DC,
mask_LU = mask_LU_DC
) %>%
filter(
!is.na(mask_LU)
)
profiles_DC
# 07: Train texture models
# 1: Start up
# library(Cubist)
library(terra)
library(magrittr)
library(tools)
library(dplyr)
library(caret)
library(tibble)
library(tidyr)
library(xgboost)
library(doParallel)
library(spatstat) # weights
dir_code <- getwd()
root <- dirname(dir_code)
dir_dat <- paste0(root, "/digijord_data/")
source("f_predict_passna.R")
train_models <- FALSE
# To do:
# Pdp with depth
# Profile examples
# Test 1 - 8: Cubist
# Test 8: New covariates (chelsa, river valley bottoms, hillyness)
# Test 9: xgboost
# Test 10: Predicted row and column (poor accuracy)
# Test 11: Fever data, more
# Test 12: Depth boundaries as covariates, stepwise xgb optimization
# Test 13: Bayesian optimization
# Test 14: Test gravity of error in covariate selection
testn <- 13
mycrs <- "EPSG:25832"
# Results folder
dir_results <- dir_dat %>%
paste0(., "/results_test_", testn, "/") %T>%
dir.create()
# 2: Load observations
dir_obs_proc <- dir_dat %>%
paste0(., "/observations/processed/")
dsc <- dir_obs_proc %>%
paste0(., "dsc.csv") %>%
read.table(
header = TRUE,
sep = ";"
) %>%
vect(
geom = c("UTMX", "UTMY"),
crs = mycrs,
keepgeom = TRUE
)
SEGES <- dir_obs_proc %>%
paste0(., "SEGES.csv") %>%
read.table(
header = TRUE,
sep = ";"
) %>%
vect(
geom = c("UTMX", "UTMY"),
crs = mycrs,
keepgeom = TRUE
)
SINKS <- dir_obs_proc %>%
paste0(., "SINKS.csv") %>%
read.table(
header = TRUE,
sep = ";"
) %>%
vect(
geom = c("UTMX", "UTMY"),
crs = mycrs,
keepgeom = TRUE
)
profiles_texture <- dir_obs_proc %>%
paste0(., "profiles_texture.csv") %>%
read.table(
header = TRUE,
sep = ";"
) %>%
vect(
geom = c("UTMX", "UTMY"),
crs = mycrs,
keepgeom = TRUE
)
forest_samples <- dir_obs_proc %>%
paste0(., "forest_samples.csv") %>%
read.table(
header = TRUE,
sep = ";"
) %>%
vect(
geom = c("UTMX", "UTMY"),
crs = mycrs,
keepgeom = TRUE
)
# 3: Load folds
dir_folds <- dir_dat %>%
paste0(., "/folds/")
dsc_folds <- dir_folds %>%
paste0(., "dsc_folds.csv") %>%
read.table(
header = TRUE,
sep = ";"
)
SEGES_folds <- dir_folds %>%
paste0(., "SEGES_folds.csv") %>%
read.table(
header = TRUE,
sep = ";"
)
SINKS_folds <- dir_folds %>%
paste0(., "SINKS_folds.csv") %>%
read.table(
header = TRUE,
sep = ";"
)
profiles_folds <- dir_folds %>%
paste0(., "profiles_folds.csv") %>%
read.table(
header = TRUE,
sep = ";"
) %>%
right_join(values(profiles_texture)) %>%
select(lyr.1)
forest_folds <- dir_folds %>%
paste0(., "forest_folds.csv") %>%
read.table(
header = TRUE,
sep = ";"
)
# 4: Load covariate data
dir_cov <- dir_dat %>% paste0(., "/covariates")
cov_cats <- dir_code %>%
paste0(., "/cov_categories_20230712.csv") %>%
read.table(
sep = ";",
header = TRUE
)
cov_files <- dir_cov %>% list.files()
cov_names <- cov_files %>% tools::file_path_sans_ext()
cov_names %>%
write.table(
paste0("cov_names_", Sys.Date(), ".csv")
)
cov_names[!cov_names %in% cov_cats$name]
# 5: Load extracted covariates
dir_extr <- dir_dat %>%
paste0(., "/extracts/")
usebuffer <- FALSE
if (usebuffer) {
dsc_extr <- dir_extr %>%
paste0(., "/buffer_dsc_extr.csv") %>%
read.table(
header = TRUE,
sep = ";"
)
SEGES_extr <- dir_extr %>%
paste0(., "/buffer_SEGES_extr.csv") %>%
read.table(
header = TRUE,
sep = ";"
)
} else {
dsc_extr <- dir_extr %>%
paste0(., "/dsc_extr.rds") %>%
readRDS()
SEGES_extr <- dir_extr %>%
paste0(., "/SEGES_extr.rds") %>%
readRDS()
}
SINKS_extr <- dir_extr %>%
paste0(., "/SINKS_extr.rds") %>%
readRDS()
profiles_extr <- dir_extr %>%
paste0(., "profiles_extr.rds") %>%
readRDS() %>%
right_join(values(profiles_texture)) %>%
select(any_of(cov_names))
SINKS_extr <- dir_extr %>%
paste0(., "/SINKS_extr.rds") %>%
readRDS()
forests_extr <- dir_extr %>%
paste0(., "/forests_extr.rds") %>%
readRDS()
# 6: Merge data
obs_v <- list(dsc, SEGES, SINKS, profiles_texture, forest_samples) %>%
vect()
# Extract mask values for all the observations
mask_LU <- paste0(dir_dat, "/layers/Mask_LU.tif") %>% rast()
mask_LU_extr <- terra::extract(
mask_LU,
obs_v,
ID = FALSE
)
mask_LU_extr %<>% unlist() %>% unname()
obs_data <- obs_v %>%
values() %>%
mutate(
# logSOC = log(SOC),
# logCaCO3 = log(CaCO3),
year = date %>%
as.character() %>%
substr(start = 1, stop = 4) %>%
as.numeric(),
mask_LU = mask_LU_extr
)
# fractions <- c("clay", "silt", "fine_sand", "coarse_sand", "logSOC", "logCaCO3")
fractions_alt <- c("clay", "silt", "fine_sand", "coarse_sand", "SOC", "CaCO3")
fractions <- fractions_alt
fraction_names <- c(
"Clay", "Silt", "Fine sand", "Coarse sand", "SOC", "CaCO3"
)
bounds_lower <- rep(0, 6)
bounds_upper <- rep(100, 6)
# 7: Make training data
folds <- bind_rows(
dsc_folds,
SEGES_folds,
SINKS_folds,
profiles_folds,
forest_folds
)
names(folds) <- "fold"
extr <- bind_rows(
dsc_extr,
SEGES_extr,
SINKS_extr,
profiles_extr,
forests_extr
)
obs <- cbind(obs_data, extr, folds) %>%
filter(
!is.na(UTMX),
!is.na(UTMY),
!is.na(mask_LU),
is.finite(fold)
)
# Make new ID
obs %<>%
rownames_to_column() %>%
mutate(ID_new = rowname, .before = everything()) %>%
select(-rowname)
write.table(
obs,
paste0(dir_results, "observations_texture.csv"),
row.names = FALSE,
col.names = TRUE,
sep = ";"
)
