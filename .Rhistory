# Use pivot_longer to get a row for each sample.
SINKS_db <- dir_dat %>%
paste0(., "/observations/SINKS/SinksDatabase_V2.mdb")
con2 <- odbcConnectAccess2007(SINKS_db)
SINKS <- sqlFetch(con2, "bMHG_RODALTDETDUVIL_01JAN2011")
# 1.4: Profiles: Texture (not right now)
# 1.5: Profiles: Water retention (later)
# 1.6: Profiles: Drainage (later)
# 1.7 Lucas database?
# 2: Data standardization
# 2.1: DSC
dsc_coords <- geom(dsc) %>%
as.data.frame() %>%
select(c(x, y))
dsc_oldcoords <- dsc %>%
values() %>%
select(c(UTMX, UTMY))
dsc2 <- dsc %>%
values() %>%
mutate(
across(
where(is.numeric),
function(x) replace(x, x == -1, NA))  # Remove negative texture fraction measurements
) %>%
bind_cols(dsc_coords) %>%
select(-c(UTMX, UTMY)) %>%
mutate(
db = "Danish Soil Classification",
UTMX = x,
UTMY = y,
ID_old = provenr,
date = paste0("19", Dato),
upper = DybFra,
lower = DybTil,
clay = Ler * 100 / (Ler + Silt + FinSD + GrovSD),
silt = Silt * 100 / (Ler + Silt + FinSD + GrovSD),
fine_sand = FinSD * 100 / (Ler + Silt + FinSD + GrovSD),
coarse_sand = GrovSD * 100 / (Ler + Silt + FinSD + GrovSD),
SOC = Humus*0.587,
SOM_removed = FALSE
) %>%
select(any_of(mycolnames))
# 2.2 SEGES
seges2 <- SEGES %>%
mutate(
db = "SEGES",
date = as.character(date),
ID_old = as.character(ID),
UTMX = UTME,
UTMY = UTMN,
upper = 0,
lower = 25,
tsum = LerPct + SiltPct + FinsandPct + GrovsandPct,
clay = case_when(
is.na(tsum) ~ LerPct,
!is.na(tsum) ~ LerPct*100 / tsum
),
silt = case_when(
is.na(tsum) ~ SiltPct,
!is.na(tsum) ~ SiltPct*100 / tsum
),
fine_sand = case_when(
is.na(tsum) ~ FinsandPct,
!is.na(tsum) ~ FinsandPct*100 / tsum
),
coarse_sand = case_when(
is.na(tsum) ~ GrovsandPct,
!is.na(tsum) ~ GrovsandPct*100 / tsum
),
SOM_removed = TRUE,
pH = Rt,
N = TotalNPct
) %>%
select(any_of(mycolnames))
# 2.3 SINKS
depths_A <- c("A1", "A2", "A3", "A4")
depths_S <- c("S1", "S2", "S3", "S4")
depths_D <- c("D1", "D2", "D3", "D4")
new_names <- stri_replace_all_fixed(
names(SINKS),
c(depths_A, depths_S),
c(depths_D, depths_D),
vectorize_all = FALSE
)
new_names <- stri_replace_all_fixed(
new_names,
"ID_DJF",
"IDDJF",
vectorize_all = FALSE
)
new_names <- stri_replace_all_fixed(new_names, "__", "_", vectorize_all = FALSE)
SINKS_newnames <- SINKS
names(SINKS_newnames) <- new_names
DX <- paste0(depths_D, "_")
D_cols <- depths_D %>%
paste(collapse = "|") %>%
grep(
names(SINKS_newnames),
value = TRUE
) %>%
unique() %>%
setdiff(DX)
newcols <- D_cols %>%
strsplit("_") %>%
unlist() %>%
unique() %>%
setdiff(depths_D)
sinks2 <- SINKS_newnames %>%
select(-any_of(DX)) %>%
pivot_longer(
all_of(D_cols),
names_to = c("depth", ".value"),
names_sep = "_"
)
rownas <- apply(sinks2, 1, function(x) sum(is.na(x)))
lapply(sinks2, function(x) sum(!is.na(x))) %>% unlist()
lapply(sinks2, function(x) length(unique(x))) %>% unlist()
sinks2 %>%
filter(!is.na(KunPro)) %>%
select(depth, PH, TOC1, TOC2, TOC3, NTotal)
# Field "KunPro" is the closest thing to a unique ID for each depth sample
sinks3 <- sinks2 %>%
filter(!is.na(KunPro))
sinks3 %>%
group_by(depth) %>%
summarise(
mean_TOC1 = mean(TOC1, na.rm = TRUE),
mean_TOC2 = mean(TOC2, na.rm = TRUE),
mean_TOC3 = mean(TOC3, na.rm = TRUE)
)
sinks3 %>% filter(!is.na(TOC2) & !is.na(TOC3))
# ^ None
sinks3 %>%
filter(!is.na(TOC1) & !is.na(TOC3)) %>%
select(depth, TOC1, TOC2, TOC3, NTotal) %>%
print(n = 100)
# ^ All depth one
# C/N OK, but one C value may be N
sinks3 %>%
filter(!is.na(TOC1) & !is.na(TOC2)) %>%
select(depth, TOC1, TOC2, TOC3, NTotal) %>%
print(n = 100)
# ^ Never depth one
# C/N OK, but one C value may be N
sinks3 %>%
filter(TOC1 != TOC3) %>%
select(depth, TOC1, TOC2, TOC3, NTotal) %>%
print(n = 100)
# Only two values, TOC3 is N
sinks3 %>%
filter(TOC1 != TOC2) %>%
select(depth, TOC1, TOC2, TOC3, NTotal) %>%
print(n = 100)
# Only one value, TOC2 is N
sinks3 %>% filter(
TOC1 < NTotal | TOC2 < NTotal | TOC3 < NTotal
) %>%
select(depth, TOC1, TOC2, TOC3, NTotal) %>%
print(n = 100)
n_unique <- sinks3 %>%
select(TOC1, TOC2, TOC3, NTotal) %>%
apply(1, function(x) length(unique(x)))
# All points have three unique values
maxvalue <- sinks3 %>%
select(TOC1, TOC2, TOC3, NTotal) %>%
apply(1, function(x) max(x, na.rm = TRUE))
minvalue <- sinks3 %>%
select(TOC1, TOC2, TOC3, NTotal) %>%
apply(1, function(x) min(x, na.rm = TRUE))
plot(log(minvalue), log(maxvalue))
plot(maxvalue/minvalue)
# I assume that maxvalue is always SOC, and minvalue is always N
sinks3$SOC <- maxvalue
sinks3$N <- minvalue
sinks3$date <- as.character(sinks3$SD_Dato) %>%
stri_replace_all_fixed("-", "") %>%
strsplit(" ") %>%
unlist() %>%
matrix(nrow = 2) %>%
.[1, ]
uppers <- c(0:3)*34
lowers <- uppers + 30
sinks_upperlower <- data.frame(
depth = depths_D,
upper = uppers,
lower = lowers
)
sinks4 <- sinks3 %>%
mutate(
db = "SINKS",
ID_old = paste0(IDBID, "_", depth),
UTMX = SD_X,
UTMY = SD_Y,
pH = PH,
SOM_removed = NA
) %>%
right_join(sinks_upperlower) %>%
select(any_of(mycolnames))
allmydata <- bind_rows(dsc2, seges2, sinks4)
plot(allmydata$UTMX, allmydata$UTMY)
# Write files
dir_obs_proc <- dir_dat %>%
paste0(., "/observations/processed/") %T>%
dir.create()
write.table(
dsc2,
paste0(dir_obs_proc, "dsc.csv"),
row.names = FALSE,
sep = ";"
)
write.table(
seges2,
paste0(dir_obs_proc, "seges.csv"),
row.names = FALSE,
sep = ";"
)
write.table(
sinks4,
paste0(dir_obs_proc, "SINKS.csv"),
row.names = FALSE,
sep = ";"
)
# END
library(terra)
library(magrittr)
dir_code <- getwd()
root <- dirname(dir_code)
dir_dat <- paste0(root, "/digijord_data/")
mycrs <- "EPSG:25832"
# 1 Load observations
dir_obs_proc <- dir_dat %>%
paste0(., "/observations/processed/")
dsc <- dir_obs_proc %>%
paste0(., "dsc.csv") %>%
read.table(
header = TRUE,
sep = ";",
) %>%
vect(
geom = c("UTMX", "UTMY"),
crs = mycrs,
keepgeom = TRUE
)
SEGES <- dir_obs_proc %>%
paste0(., "SEGES.csv") %>%
read.table(
header = TRUE,
sep = ";",
) %>%
vect(
geom = c("UTMX", "UTMY"),
crs = mycrs,
keepgeom = TRUE
)
SINKS <- dir_obs_proc %>%
paste0(., "SINKS.csv") %>%
read.table(
header = TRUE,
sep = ";",
) %>%
vect(
geom = c("UTMX", "UTMY"),
crs = mycrs,
keepgeom = TRUE
)
cov_dir <- dir_dat %>% paste0(., "/covariates")
cov_files <- cov_dir %>% list.files
cov <- paste0(cov_dir, "/", cov_files) %>%
rast()
cov
names(cov)
cov_names <- cov_files %>% tools::file_path_sans_ext()
crs(cov) <- mycrs
cov
cov_dir <- dir_dat %>% paste0(., "/covariates")
cov_files <- cov_dir %>% list.files
cov_names <- cov_files %>% tools::file_path_sans_ext()
cov <- paste0(cov_dir, "/", cov_files) %>%
rast()
names(cov) <- cov_names
crs(cov) <- mycrs
names(cov)
cov
?extract
library(terra)
library(magrittr)
dir_code <- getwd()
root <- dirname(dir_code)
dir_dat <- paste0(root, "/digijord_data/")
mycrs <- "EPSG:25832"
dir_obs_proc <- dir_dat %>%
paste0(., "/observations/processed/")
dsc <- dir_obs_proc %>%
paste0(., "dsc.csv") %>%
read.table(
header = TRUE,
sep = ";",
) %>%
vect(
geom = c("UTMX", "UTMY"),
crs = mycrs,
keepgeom = TRUE
)
SEGES <- dir_obs_proc %>%
paste0(., "SEGES.csv") %>%
read.table(
header = TRUE,
sep = ";",
) %>%
vect(
geom = c("UTMX", "UTMY"),
crs = mycrs,
keepgeom = TRUE
)
SINKS <- dir_obs_proc %>%
paste0(., "SINKS.csv") %>%
read.table(
header = TRUE,
sep = ";",
) %>%
vect(
geom = c("UTMX", "UTMY"),
crs = mycrs,
keepgeom = TRUE
)
cov_dir <- dir_dat %>% paste0(., "/covariates")
cov_files <- cov_dir %>% list.files
cov_names <- cov_files %>% tools::file_path_sans_ext()
cov <- paste0(cov_dir, "/", cov_files) %>%
rast()
names(cov) <- cov_names
crs(cov) <- mycrs
cov
dsc_extr <- dsc %>%
extract(
cov,
.,
ID = FALSE,
)
dsc_extr <- dsc %>%
terra::extract(
x = cov,
y = .,
ID = FALSE,
)
dsc_extr
# Extract covariates
library(terra)
library(magrittr)
dir_code <- getwd()
root <- dirname(dir_code)
dir_dat <- paste0(root, "/digijord_data/")
mycrs <- "EPSG:25832"
# 1 Load observations
dir_obs_proc <- dir_dat %>%
paste0(., "/observations/processed/")
dsc <- dir_obs_proc %>%
paste0(., "dsc.csv") %>%
read.table(
header = TRUE,
sep = ";",
) %>%
vect(
geom = c("UTMX", "UTMY"),
crs = mycrs,
keepgeom = TRUE
)
SEGES <- dir_obs_proc %>%
paste0(., "SEGES.csv") %>%
read.table(
header = TRUE,
sep = ";",
) %>%
vect(
geom = c("UTMX", "UTMY"),
crs = mycrs,
keepgeom = TRUE
)
SINKS <- dir_obs_proc %>%
paste0(., "SINKS.csv") %>%
read.table(
header = TRUE,
sep = ";",
) %>%
vect(
geom = c("UTMX", "UTMY"),
crs = mycrs,
keepgeom = TRUE
)
# 2 Load covariates
cov_dir <- dir_dat %>% paste0(., "/covariates")
cov_files <- cov_dir %>% list.files
cov_names <- cov_files %>% tools::file_path_sans_ext()
cov <- paste0(cov_dir, "/", cov_files) %>%
rast()
names(cov) <- cov_names
crs(cov) <- mycrs
# 3 Extract
dsc_extr <- extract(
x = cov,
y = dsc,
ID = FALSE,
)
dsc_extr <- terra::extract(
x = cov,
y = dsc,
ID = FALSE,
)
sessionInfo()
install.packages("Rcpp")
install.packages("Rcpp")
install.packages("Rcpp")
library(terra)
library(magrittr)
sessionInfo()
dir_code <- getwd()
root <- dirname(dir_code)
dir_dat <- paste0(root, "/digijord_data/")
mycrs <- "EPSG:25832"
# 1 Load observations
dir_obs_proc <- dir_dat %>%
paste0(., "/observations/processed/")
dsc <- dir_obs_proc %>%
paste0(., "dsc.csv") %>%
read.table(
header = TRUE,
sep = ";",
) %>%
vect(
geom = c("UTMX", "UTMY"),
crs = mycrs,
keepgeom = TRUE
)
SEGES <- dir_obs_proc %>%
paste0(., "SEGES.csv") %>%
read.table(
header = TRUE,
sep = ";",
) %>%
vect(
geom = c("UTMX", "UTMY"),
crs = mycrs,
keepgeom = TRUE
)
SINKS <- dir_obs_proc %>%
paste0(., "SINKS.csv") %>%
read.table(
header = TRUE,
sep = ";",
) %>%
vect(
geom = c("UTMX", "UTMY"),
crs = mycrs,
keepgeom = TRUE
)
# 2 Load covariates
cov_dir <- dir_dat %>% paste0(., "/covariates")
cov_files <- cov_dir %>% list.files
cov_names <- cov_files %>% tools::file_path_sans_ext()
cov <- paste0(cov_dir, "/", cov_files) %>%
rast()
names(cov) <- cov_names
crs(cov) <- mycrs
small_extr <- dsc_extr <- terra::extract(
x = cov,
y = dsc[1:100],
ID = FALSE,
)
small_extr
rm(small_extr)
rm(dsc_extr)
dsc_extr <- terra::extract(
x = cov,
y = dsc,
ID = FALSE,
)
SEGES_extr <- terra::extract(
x = cov,
y = SEGES,
ID = FALSE,
)
SINKS_extr <- terra::extract(
x = cov,
y = SINKS,
ID = FALSE,
)
# 4 Write to file
dir_extr <- dir_dat %>%
paste0(., "/extracts/")
write.table(
dsc_extr,
paste0(dir_extr, "dsc_extr.csv"),
row.names = FALSE,
sep = ";"
)
write.table(
SEGES_extr,
paste0(dir_extr, "SEGES_extr.csv"),
row.names = FALSE,
sep = ";"
)
write.table(
SINKS_extr,
paste0(dir_extr, "SINKS_extr.csv"),
row.names = FALSE,
sep = ";"
)
bind_rows(dsc, SEGES, SINKS)
library(dplyr)
bind_rows(dsc, SEGES, SINKS)
bind_rows(values(dsc), values(SEGES), values(SINKS))
bind_rows(dsc_extr, SEGES_extr, SINKS_extr)
