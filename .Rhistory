plot(is.na(dem1km))
plot(square_groups, add = TRUE)
plot(square_groups, col = myrandomcolors_boxes)
plot(square_groups, "id")
dir_tiles <- dir_dat %>%
paste0(., "/tiles_", length(square_groups), "/") %T>%
dir.create()
writeVector(
square_groups,
filename = paste0(dir_tiles, "tiles.shp"),
filetype = "ESRI Shapefile"
)
library(terra)
library(magrittr)
library(dplyr)
library(stringr)
dir_code <- getwd()
root <- dirname(dir_code)
dir_dat <- paste0(root, "/digijord_data/")
dir_cov <- dir_dat %>% paste0(., "/covariates")
testn <- 6
mycrs <- "EPSG:25832"
dir_tiles <- dir_dat %>%
paste0(., "/tiles_591/")
tile_shapes <- dir_tiles %>%
paste0(., "/tiles.shp") %>%
vect()
cov_files <- dir_cov %>%
list.files(
pattern = ".tif",
full.names = TRUE
)
max_char <- length(tile_shapes) %>%
1:. %>%
as.character() %>%
nchar() %>%
max()
tile_numbers <- length(tile_shapes) %>%
1:. %>%
str_pad(
.,
max_char,
pad = "0"
)
source("f_cropstack.R")
source("f_cropstack.R")
library(parallel)
numCores <- detectCores()
numCores
showConnections()
cl <- makeCluster(numCores)
clusterEvalQ(
cl,
{
library(raster)
library(terra)
library(magrittr)
library(dplyr)
library(tools)
}
)
clusterExport(
cl,
c("dir_dat",
"tmpfolder",
"dir_tiles",
"tile_numbers",
"cov_files",
"tile_shapes",
"cropstack"
)
)
clusterExport(
cl,
c("dir_dat",
"dir_tiles",
"tile_numbers",
"cov_files",
"tile_shapes",
"cropstack"
)
)
parSapplyLB(
cl,
1:length(subdir_tiles),
function(j) {
tmpfolder <- paste0(dir_dat, "/Temp/")
terraOptions(memfrac = 0.02, tempdir = tmpfolder)
dir_tile_j <- dir_tiles %>%
paste0(., "/tile_", tile_numbers[j], "/") %T>%
dir.create()
cov_files %>%
cropstack(
y = tile_shapes[j],
folder = dir_tile_j
)
}
)
parSapplyLB(
cl,
1:length(tile_shapes),
function(j) {
tmpfolder <- paste0(dir_dat, "/Temp/")
terraOptions(memfrac = 0.02, tempdir = tmpfolder)
dir_tile_j <- dir_tiles %>%
paste0(., "/tile_", tile_numbers[j], "/") %T>%
dir.create()
cov_files %>%
cropstack(
y = tile_shapes[j],
folder = dir_tile_j
)
}
)
stopCluster(cl)
registerDoSEQ()
rm(cl)
showConnections()
cl <- makeCluster(numCores)
clusterEvalQ(
cl,
{
library(raster)
library(terra)
library(magrittr)
library(dplyr)
library(tools)
}
)
clusterExport(
cl,
c("dir_dat",
"dir_tiles",
"tile_numbers",
"cov_files",
"tile_shapes",
"cropstack"
)
)
parSapplyLB(
cl,
1:length(tile_shapes),
function(j) {
tmpfolder <- paste0(dir_dat, "/Temp/")
terraOptions(memfrac = 0.02, tempdir = tmpfolder)
dir_tile_j <- dir_tiles %>%
paste0(., "/tile_", tile_numbers[j], "/") %T>%
dir.create()
cov_files %>%
cropstack(
y = tile_shapes[j],
folder = dir_tile_j
)
}
)
stopCluster(cl)
registerDoSEQ()
rm(cl)
library(parallel)
numCores <- detectCores()
numCores
showConnections()
cl <- makeCluster(numCores)
clusterEvalQ(
cl,
{
library(raster)
library(terra)
library(magrittr)
library(dplyr)
library(tools)
}
)
clusterExport(
cl,
c("dir_dat",
"dir_tiles",
"tile_numbers",
"cov_files",
"tile_shapes",
"cropstack"
)
)
parSapplyLB(
cl,
1:length(tile_shapes),
function(j) {
tmpfolder <- paste0(dir_dat, "/Temp/")
terraOptions(memfrac = 0.02, tempdir = tmpfolder)
dir_tile_j <- dir_tiles %>%
paste0(., "/tile_", tile_numbers[j], "/") %T>%
dir.create()
cov_files %>%
cropstack(
y = tile_shapes[j],
folder = dir_tile_j
)
}
)
1:length(tile_shapes)
tile_numbers
for (j in 1) {
print(j)
dir_tile_j <- dir_tiles %>%
paste0(., "/tile_", tile_numbers[j], "/") %T>%
dir.create()
cov_files %>%
cropstack(
y = tile_shapes[j],
folder = dir_tile_j
)
}
stopCluster(cl)
registerDoSEQ()
rm(cl)
source("f_cropstack.R")
# for (j in 1:length(tile_shapes)) {
for (j in 1) {
print(j)
dir_tile_j <- dir_tiles %>%
paste0(., "/tile_", tile_numbers[j], "/") %T>%
dir.create()
cov_files %>%
cropstack(
y = tile_shapes[j],
folder = dir_tile_j
)
}
for (j in 1) {
print(j)
dir_tile_j <- dir_tiles %>%
paste0(., "/tile_", tile_numbers[j], "/") %T>%
dir.create()
cov_files %>%
cropstack(
x = .,
y = tile_shapes[j],
folder = dir_tile_j
)
}
# for (j in 1:length(tile_shapes)) {
for (j in 1) {
print(j)
dir_tile_j <- dir_tiles %>%
paste0(., "/tile_", tile_numbers[j], "/") %T>%
dir.create()
cropstack(
x = cov_files,
y = tile_shapes[j],
folder = dir_tile_j
)
# cov_files %>%
#   cropstack(
#     x = .,
#     y = tile_shapes[j],
#     folder = dir_tile_j
#   )
}
source("f_cropstack.R")
source("f_cropstack.R")
# for (j in 1:length(tile_shapes)) {
for (j in 1) {
print(j)
dir_tile_j <- dir_tiles %>%
paste0(., "/tile_", tile_numbers[j], "/") %T>%
dir.create()
cropstack(
x = cov_files,
y = tile_shapes[j],
folder = dir_tile_j
)
# cov_files %>%
#   cropstack(
#     x = .,
#     y = tile_shapes[j],
#     folder = dir_tile_j
#   )
}
cov_files
source("f_cropstack.R")
# for (j in 1:length(tile_shapes)) {
for (j in 1) {
print(j)
dir_tile_j <- dir_tiles %>%
paste0(., "/tile_", tile_numbers[j], "/") %T>%
dir.create()
cropstack(
x = cov_files,
y = tile_shapes[j],
folder = dir_tile_j
)
# cov_files %>%
#   cropstack(
#     x = .,
#     y = tile_shapes[j],
#     folder = dir_tile_j
#   )
}
library(terra)
library(magrittr)
library(raster)
library(tools)
dir_code <- getwd()
root <- dirname(dir_code)
dir_dat <- paste0(root, "/digijord_data/")
mycrs <- "EPSG:25832"
dir_cov <- dir_dat %>%
paste0(., "/covariates/")
cov_files <- dir_cov %>%
list.files(
pattern = ".tif",
full.names = TRUE
)
tmpfolder <- paste0(dir_dat, "/Temp/")
terraOptions(tempdir = tmpfolder)
dem_ind <- grepl(
"dhm",
cov_files
)
dem <- cov_files[dem_ind] %>% rast
crs(dem) <- mycrs
r <- dir_dat %>%
paste0(., "/hillyness.tif") %>%
rast()
r
# hillyness <- dir_dat %>%
#   paste0(., "/hillyness/hillyness.tif") %>%
#   rast()
#
# names(hillyness) <- "hillyness"
# NAflag(hillyness) <- 128
#
outname_hillyness <- dir_cov %>%
paste0(., "/hillyness.tif")
outname_hillyness
r <- dir_dat %>%
paste0(., "/hillyness.tif") %>%
rast()
terra::mask(
r,
mask = dem,
filename = outname_hillyness,
datatype = "INT1U",
overwrite = TRUE
)
library(terra)
library(magrittr)
library(dplyr)
library(stringr)
dir_code <- getwd()
root <- dirname(dir_code)
dir_dat <- paste0(root, "/digijord_data/")
dir_cov <- dir_dat %>% paste0(., "/covariates")
mycrs <- "EPSG:25832"
dir_tiles <- dir_dat %>%
paste0(., "/tiles_591/")
tile_shapes <- dir_tiles %>%
paste0(., "/tiles.shp") %>%
vect()
cov_files <- dir_cov %>%
list.files(
pattern = ".tif",
full.names = TRUE
)
max_char <- length(tile_shapes) %>%
1:. %>%
as.character() %>%
nchar() %>%
max()
tile_numbers <- length(tile_shapes) %>%
1:. %>%
str_pad(
.,
max_char,
pad = "0"
)
source("f_cropstack.R")
library(parallel)
numCores <- detectCores()
numCores
showConnections()
cl <- makeCluster(numCores)
clusterEvalQ(
cl,
{
library(raster)
library(terra)
library(magrittr)
library(dplyr)
library(tools)
}
)
clusterExport(
cl,
c("dir_dat",
"dir_tiles",
"tile_numbers",
"cov_files",
"tile_shapes",
"cropstack"
)
)
parSapplyLB(
cl,
1:length(tile_shapes),
function(j) {
tmpfolder <- paste0(dir_dat, "/Temp/")
terraOptions(memfrac = 0.02, tempdir = tmpfolder)
dir_tile_j <- dir_tiles %>%
paste0(., "/tile_", tile_numbers[j], "/") %T>%
dir.create()
cropstack(
x = cov_files,
y = tile_shapes[j],
folder = dir_tile_j
)
}
)
stopCluster(cl)
registerDoSEQ()
rm(cl)
foreach::registerDoSEQ()
rm(cl)
showConnections()
cl <- makeCluster(numCores)
clusterEvalQ(
cl,
{
library(raster)
library(terra)
library(magrittr)
library(dplyr)
library(tools)
}
)
clusterExport(
cl,
c("dir_dat",
"dir_tiles",
"dir_code",
"tile_numbers",
"cov_files",
"tile_shapes"
)
)
parSapplyLB(
cl,
1:length(tile_shapes),
function(j) {
tmpfolder <- paste0(dir_dat, "/Temp/")
terraOptions(memfrac = 0.02, tempdir = tmpfolder)
dir_tile_j <- dir_tiles %>%
paste0(., "/tile_", tile_numbers[j], "/") %T>%
dir.create()
source(paste0(dir_code, "/f_cropstack.R"))
cropstack(
x = cov_files,
y = tile_shapes[j],
folder = dir_tile_j
)
}
)
stopCluster(cl)
foreach::registerDoSEQ()
rm(cl)
library(parallel)
numCores <- detectCores()
numCores
showConnections()
cl <- makeCluster(numCores)
clusterEvalQ(
cl,
{
library(raster)
library(terra)
library(magrittr)
library(dplyr)
library(tools)
}
)
clusterExport(
cl,
c("dir_dat",
"dir_tiles",
"dir_code",
"tile_numbers",
"cov_files"
)
)
parSapplyLB(
cl,
1:length(tile_shapes),
function(j) {
tmpfolder <- paste0(dir_dat, "/Temp/")
terraOptions(memfrac = 0.02, tempdir = tmpfolder)
dir_tile_j <- dir_tiles %>%
paste0(., "/tile_", tile_numbers[j], "/") %T>%
dir.create()
tile_shapes <- dir_tiles %>%
base::paste0(., "/tiles.shp") %>%
terra::vect()
source(paste0(dir_code, "/f_cropstack.R"))
cropstack(
x = cov_files,
y = tile_shapes[j],
folder = dir_tile_j
)
}
)
stopCluster(cl)
foreach::registerDoSEQ()
rm(cl)
