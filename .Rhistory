#   grep('aspect_radians', ., value = TRUE)
#
# dir_cov_renamed <- dir_dat %>%
#   paste0(., "/covariates_renamed/") %T>%
#   dir.create()
#
# for (i in 1:length(aspect_files)) {
#   r <- aspect_files[i] %>% rast()
#   dtyp <- datatype(r)
#   newname_x <- sources(r) %>%
#     basename() %>%
#     file_path_sans_ext() %>%
#     gsub("\\.", "_", .) %>%
#     gsub("-", "_", .) %>%
#     tolower()
#   crs(r) <- mycrs
#   names(r) <- newname_x
#   outname_x <- dir_cov_renamed %>%
#     paste0(., "/", newname_x, ".tif")
#   ifel(
#     test = is.na(r),
#     yes = dem*0,
#     no = r,
#     datatype = dtyp,
#     filename = outname_x,
#     overwrite = TRUE,
#     gdal = "TILED=YES"
#   )
# }
# 4: Update names in covariate table (2023-02-27)
# cov_cats <- dir_code %>%
#   paste0(., "/cov_categories_20230202.csv") %>%
#   read.table(
#     sep = ";",
#     header = TRUE,
#     encoding = "latin1"
#   )
#
# newnames <- cov_cats$name %>%
#   gsub("\\.", "_", .) %>%
#   gsub("-", "_", .) %>%
#   tolower()
#
# cov_cats$name <- newnames
#
# write.table(
#   cov_cats,
#   file = paste0(dir_code, "/cov_categories_20230227.csv"),
#   row.names = FALSE,
#   sep = ";",
#   fileEncoding = "latin1"
# )
# 5: Make new sets of oblique geographic coordinates
# install.packages('devtools')
# library(devtools)
# install_github("anbm-dk/obliquer")
# library(obliquer)
#
# dir_tiles <- dir_dat %>%
#   paste0(., "/tiles_591/")
#
# tile_shapes <- dir_tiles %>%
#   paste0(., "/tiles.shp") %>%
#   vect()
#
# # split dem into tiles
#
# tmp_dem_tiles <- paste0(tmpfolder, "/dem/") %T>% dir.create()
# tmp_ogc_tiles <- paste0(tmpfolder, "/ogc/") %T>% dir.create()
#
# for (i in 1:length(tile_shapes)) {
#   terra::crop(
#     dem,
#     tile_shapes[i],
#     filename = paste0(tmp_dem_tiles, "/dem_tile_", i, ".tif")
#   )
# }
#
# dem_files <- tmp_dem_tiles %>% list.files(full.names = TRUE)
#
# library(parallel)
#
# numCores <- detectCores()
# numCores
#
# showConnections()
#
# cl <- makeCluster(numCores)
#
# clusterEvalQ(
#   cl,
#   {
#     library(terra)
#     library(magrittr)
#     library(obliquer)
#   }
# )
#
# clusterExport(
#   cl,
#   c(
#     "dem_files",
#     "tmp_ogc_tiles",
#     "tmpfolder"
#   )
# )
#
# parSapplyLB(
#   cl,
#   1:length(dem_files),
#   function(j) {
#     terraOptions(memfrac = 0.02, tempdir = tmpfolder)
#
#     dem_j <- dem_files[j] %>% rast()
#
#     obliquify(
#       dem_j,
#       n_angles = 64,
#       n_digits = 0,
#       digits_names = 3,
#       filename = paste0(tmp_ogc_tiles, "/ogcs_tile_", j, ".tif"),
#       datatype = "INT4S"
#       )
#
#     return(NULL)
#   }
# )
#
# stopCluster(cl)
# foreach::registerDoSEQ()
# rm(cl)
#
# ogc_files <- tmp_ogc_tiles %>% list.files(full.names = TRUE)
#
# ogc_names <- ogc_files[1] %>% rast() %>% names()
#
# for (i in 1:length(ogc_names)) {
#   ogcs_i <- ogc_files %>% lapply(
#     function(x) {
#       out <- x %>% rast() %>% subset(i)
#       return(out)
#     }
#   )
#
#   ogcs <- sprc(ogcs_i)
#
#   ogcs_merged <- merge(
#     ogcs,
#     filename = paste0(dir_cov, "/ogc_", ogc_names[i], ".tif"),
#     datatype = "INT4S",
#     gdal = "TILED=YES"
#   )
# }
# 6: Rename the layers for all covariates (2023-03-23)
# First check in the names match
cov_files <- dir_cov %>%
list.files(
pattern = ".tif",
full.names = TRUE
)
cov_origin <- cov_files %>% rast()
cov_origin_lyrnames <- names(cov_origin)
cov_origin_filenames <- cov_files %>% basename() %>% tools::file_path_sans_ext()
mismatches <- cbind(
cov_origin_filenames,
cov_origin_lyrnames
)[cov_origin_filenames != cov_origin_lyrnames]
mismatches
changethese <- cov_files[cov_origin_filenames != cov_origin_lyrnames]
# Correct it if they do not match
if (length(changethese) > 0) {
dir_cov_renamed <- dir_dat %>%
paste0(., "/covariates_renamed/") %T>%
dir.create()
library(parallel)
numCores <- detectCores()
numCores
showConnections()
cl <- makeCluster(numCores)
clusterEvalQ(
cl,
{
library(terra)
library(magrittr)
library(dplyr)
library(tools)
}
)
clusterExport(
cl,
c("mycrs",
"dir_cov_renamed",
"changethese",
"tmpfolder"
)
)
parSapplyLB(
cl,
changethese,
function(x) {
terraOptions(memfrac = 0.02, tempdir = tmpfolder)
r <- x %>% rast()
dtyp <- datatype(r)
newname_x <- sources(r) %>%
basename() %>%
file_path_sans_ext() %>%
gsub("\\.", "_", .) %>%
gsub("-", "_", .) %>%
tolower()
crs(r) <- mycrs
names(r) <- newname_x
outname_x <- dir_cov_renamed %>%
paste0(., "/", newname_x, ".tif")
writeRaster(
r,
datatype = dtyp,
filename = outname_x,
overwrite = TRUE,
gdal = "TILED=YES"
)
return(NA)
}
)
stopCluster(cl)
foreach::registerDoSEQ()
rm(cl)
dir_cov_renamed %>%
list.files(full.names = TRUE) %>%
rast() %>%
names()
}
# 7: Identify covariates missing in the overview table
cov_cats <- dir_code %>%
paste0(., "/cov_categories_20231110.csv") %>%
read.table(
sep = ",",
header = TRUE
)
cov_files <- dir_cov %>%
list.files(
pattern = ".tif",
full.names = TRUE
)
cov_names <- cov_files %>%
basename() %>%
file_path_sans_ext()
data.frame(new = setdiff(cov_names, cov_cats$name))
mask_LU <- paste0(dir_dat, "/layers/Mask_LU.tif") %>% rast()
cov_files <- dir_cov %>%
list.files(
pattern = ".tif",
full.names = TRUE
)
squareshape <- dir_dat %>%
paste0(., "/testarea_10km/square10km.shp") %>%
vect()
square_ext <- squareshape %>%
ext() %>%
round(-1)
?crop
square_ext
mask_LU_10km <- crop(
mask_LU,
square_ext
)
plot(mask_LU_10km)
outfolder <- dir_dat %>%
paste0(., "/testarea_10km/covariates/")
outfolder %>% dir.create()
source("f_cropstack.R")
cov_files %>%
cropstack(
y = mask_LU_10km,
folder = outfolder,
mask = TRUE
)
library(terra)
library(caret)
library(magrittr)
library(dplyr)
library(tibble)
dir_code <- getwd()
root <- dirname(dir_code)
dir_dat <- paste0(root, "/digijord_data/")
dir_cov <- dir_dat %>% paste0(., "/covariates")
mycrs <- "EPSG:25832"
# Load covariates
dir_cov <- dir_dat %>% paste0(., "/covariates")
cov_cats <- dir_code %>%
paste0(., "/cov_categories_20231110.csv") %>%
read.table(
sep = ",",
header = TRUE
)
cov_files <- dir_cov %>% list.files()
cov_names <- cov_files %>% tools::file_path_sans_ext()
cov_names %>%
write.table(
paste0("cov_names_", Sys.Date(), ".csv")
)
cov_names[!cov_names %in% cov_cats$name]
cov <- paste0(dir_cov, "/", cov_files) %>%
rast()
names(cov) <- cov_names
crs(cov) <- mycrs
# Select relevant covariates
cov_selected <- cov_cats %>%
filter(anbm_use == 1) %>%
dplyr::select(., name) %>%
unlist() %>%
unname()
cov_use <- terra::subset(cov, cov_selected)
# 2023-12-19: Find covariates with missing values for some islands
# missing_islands <- dir_dat %>%
#   paste0(., "/layers/missing_islands_20231219.shp") %>%
#   vect()
#
# terra::extract(cov_use, missing_islands) %>%
#   apply(., 2, function(x) sum(is.na(x))) %>%
#   .[. != 0]
# Drop cost_dist
# Fill holes in terodep
# cost_dist terodep10m
# 110         54
# Extract points from tiles in parallel
cells_per_pt <- 2000
dir_tiles <- dir_dat %>%
paste0(., "/tiles_591/")
subdir_tiles <- dir_tiles %>%
list.dirs() %>%
.[-1]
cov_pts <- readRDS(paste0(dir_dat, "cov_pts_pca.rds"))
cov_pts %<>%
select(-c(x, y)) %>%
as.matrix()
covnames_dropogc <- cov_pts %>%
colnames() %>%
grep('ogc_pi', ., value = TRUE, invert = TRUE) %>%
grep('PC', ., value = TRUE, invert = TRUE)
cov_pts_dropogc <- cov_pts[, colnames(cov_pts) %in% covnames_dropogc]
pcs_raw <- prcomp(
x = cov_pts_dropogc,
scale. = TRUE
)
summary(pcs_raw)$importance
num_pcs <- sum((cumsum(pcs_raw$sdev) / sum(pcs_raw$sdev)) < 0.99) + 1
pcs <- prcomp(
x = cov_pts_dropogc,
scale. = TRUE,
rank. = num_pcs
)
pcs %>%
saveRDS(file = paste0(dir_dat, "pcs_cov.rds"))
pcs_rotation <- pcs$rotation %>%
as.data.frame() %>%
rownames_to_column()
pcs_rotation %>%
saveRDS(file = paste0(dir_dat, "pcs_rotation.rds"))
pcs_rotation %>%
write.table(
file = paste0(dir_dat, "pcs_rotation.csv"),
sep = ";",
row.names = FALSE
)
test_pca_10km <- TRUE
if (test_pca_10km) {
# Load covariates for the test area
dir_cov_10km <- dir_dat %>%
paste0(., "/testarea_10km/covariates/")
cov_10km <- dir_cov_10km %>%
list.files(full.names = TRUE) %>%
rast() %>%
subset(covnames_dropogc)
# spatSample(cov_10km, 100000) %>%
#   apply(., 2, function(x) sum(is.na(x))) %>%
#   .[. != 0]
# Set NAs to zero for terodep10m and the sine and cosine of the aspect
cov_10km$terodep10m %<>% terra::subst(., NA, 0)
cov_10km$cos_aspect_radians %<>% terra::subst(., NA, 0)
cov_10km$sin_aspect_radians  %<>% terra::subst(., NA, 0)
# Predict PCs for the test area
pcs_10km  <- terra::predict(cov_10km, pcs, na.rm = TRUE)
plot(pcs_10km)
library(tidyterra)
tiff(
paste0(dir_dat, "/cov_pca_10km.tiff"),
width = 23,
height = 10,
units = "cm",
res = 300
)
pcs_10km %>%
terra::subset(1:10) %>%
autoplot() +
facet_wrap(~ lyr, ncol = 5)
try(dev.off())
}
tiff(
paste0(dir_dat, "/cov_pca_10km.tiff"),
width = 23,
height = 10,
units = "cm",
res = 300
)
pcs_10km %>%
terra::subset(1:10) %>%
autoplot() +
facet_wrap(~ lyr, ncol = 5)
try(dev.off())
library(terra)
library(magrittr)
library(dplyr)
library(stringr)
dir_code <- getwd()
root <- dirname(dir_code)
dir_dat <- paste0(root, "/digijord_data/")
dir_cov <- dir_dat %>% paste0(., "/covariates")
mycrs <- "EPSG:25832"
dir_tiles <- dir_dat %>%
paste0(., "/tiles_591/")
dir_mask_tiles <- dir_dat %>%
paste0(., "/layers/Mask_LU_tiles/")
# Load tile shape polygons
tile_shapes <- dir_tiles %>%
paste0(., "/tiles.shp") %>%
vect()
# Find covariates
cov_files <- dir_cov %>%
list.files(
pattern = ".tif",
full.names = TRUE
)
# Select relevant covariates
cov_cats <- dir_code %>%
paste0(., "/cov_categories_20231110.csv") %>%
read.table(
sep = ",",
header = TRUE
)
cov_names_all <- cov_files %>%
basename() %>%
tools::file_path_sans_ext(.)
cov_selected <- cov_cats %>%
filter(anbm_use == 1) %>%
select(name) %>%
unlist() %>%
unname()
cov_files_selected <- cov_files[cov_names_all %in% cov_selected]
# Make names for tiles
max_char <- length(tile_shapes) %>%
1:. %>%
as.character() %>%
nchar() %>%
max()
tile_numbers <- length(tile_shapes) %>%
1:. %>%
str_pad(
.,
max_char,
pad = "0"
)
# Cropping function
source("f_cropstack.R")
cov_files_notogc <- cov_files_selected %>%
grep('ogc_pi', ., value = TRUE, invert = TRUE)
library(parallel)
numCores <- detectCores()
numCores
showConnections()
cl <- makeCluster(numCores)
clusterEvalQ(
cl,
{
library(terra)
library(magrittr)
library(dplyr)
library(tools)
}
)
clusterExport(
cl,
c(
"dir_dat",
"dir_tiles",
"dir_code",
"tile_numbers",
"cov_files",
"dir_mask_tiles"
)
)
parSapplyLB(
cl,
1:length(tile_shapes),
function(j) {
tmpfolder <- paste0(dir_dat, "/Temp/")
terraOptions(memfrac = 0.02, tempdir = tmpfolder)
dir_tile_j <- dir_tiles %>%
paste0(., "/tile_", tile_numbers[j], "/") %T>%
dir.create()
my_ext <- paste0(
dir_mask_tiles, "/Mask_LU_tile_", tile_numbers[j], ".tif"
) %>%
rast()
source(paste0(dir_code, "/f_cropstack.R"))
cropstack(
x = cov_files_notogc,
y = my_ext,
folder = dir_tile_j,
mask = TRUE
)
}
)
